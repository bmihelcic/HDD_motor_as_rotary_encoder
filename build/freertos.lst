ARM GAS  /tmp/ccup522j.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/freertos.c"
  18              		.section	.text.vApplicationIdleHook,"ax",%progbits
  19              		.align	1
  20              		.weak	vApplicationIdleHook
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	vApplicationIdleHook:
  26              	.LFB70:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** 
  25:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/freertos.c **** 
  28:Core/Src/freertos.c **** /* USER CODE END Includes */
  29:Core/Src/freertos.c **** 
  30:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccup522j.s 			page 2


  33:Core/Src/freertos.c **** /* USER CODE END PTD */
  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** /* USER CODE END PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  42:Core/Src/freertos.c **** 
  43:Core/Src/freertos.c **** /* USER CODE END PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  47:Core/Src/freertos.c **** 
  48:Core/Src/freertos.c **** /* USER CODE END Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  54:Core/Src/freertos.c **** 
  55:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  56:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** /* Hook prototypes */
  59:Core/Src/freertos.c **** void vApplicationIdleHook(void);
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** /* USER CODE BEGIN 2 */
  62:Core/Src/freertos.c **** __weak void vApplicationIdleHook( void )
  63:Core/Src/freertos.c **** {
  27              		.loc 1 63 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  64:Core/Src/freertos.c ****    /* vApplicationIdleHook() will only be called if configUSE_IDLE_HOOK is set
  65:Core/Src/freertos.c ****    to 1 in FreeRTOSConfig.h. It will be called on each iteration of the idle
  66:Core/Src/freertos.c ****    task. It is essential that code added to this hook function never attempts
  67:Core/Src/freertos.c ****    to block in any way (for example, call xQueueReceive() with a block time
  68:Core/Src/freertos.c ****    specified, or call vTaskDelay()). If the application makes use of the
  69:Core/Src/freertos.c ****    vTaskDelete() API function (as this demo application does) then it is also
  70:Core/Src/freertos.c ****    important that vApplicationIdleHook() is permitted to return to its calling
  71:Core/Src/freertos.c ****    function, because it is the responsibility of the idle task to clean up
  72:Core/Src/freertos.c ****    memory allocated by the kernel to any task that has since been deleted. */
  73:Core/Src/freertos.c **** }
  32              		.loc 1 73 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE70:
  37              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  38              		.align	1
  39              		.global	vApplicationGetIdleTaskMemory
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  44              	vApplicationGetIdleTaskMemory:
ARM GAS  /tmp/ccup522j.s 			page 3


  45              	.LVL0:
  46              	.LFB71:
  74:Core/Src/freertos.c **** /* USER CODE END 2 */
  75:Core/Src/freertos.c **** 
  76:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  77:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  78:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  79:Core/Src/freertos.c **** 
  80:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  81:Core/Src/freertos.c **** {
  47              		.loc 1 81 1 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  82:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  52              		.loc 1 82 3 view .LVU3
  53              		.loc 1 82 25 is_stmt 0 view .LVU4
  54 0000 034B     		ldr	r3, .L3
  55 0002 0360     		str	r3, [r0]
  83:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  56              		.loc 1 83 3 is_stmt 1 view .LVU5
  57              		.loc 1 83 27 is_stmt 0 view .LVU6
  58 0004 034B     		ldr	r3, .L3+4
  59 0006 0B60     		str	r3, [r1]
  84:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  60              		.loc 1 84 3 is_stmt 1 view .LVU7
  61              		.loc 1 84 25 is_stmt 0 view .LVU8
  62 0008 8023     		movs	r3, #128
  63 000a 1360     		str	r3, [r2]
  85:Core/Src/freertos.c ****   /* place for user code */
  86:Core/Src/freertos.c **** }
  64              		.loc 1 86 1 view .LVU9
  65 000c 7047     		bx	lr
  66              	.L4:
  67 000e 00BF     		.align	2
  68              	.L3:
  69 0010 00000000 		.word	xIdleTaskTCBBuffer
  70 0014 00000000 		.word	xIdleStack
  71              		.cfi_endproc
  72              	.LFE71:
  74              		.section	.bss.xIdleStack,"aw",%nobits
  75              		.align	2
  78              	xIdleStack:
  79 0000 00000000 		.space	512
  79      00000000 
  79      00000000 
  79      00000000 
  79      00000000 
  80              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
  81              		.align	2
  84              	xIdleTaskTCBBuffer:
  85 0000 00000000 		.space	84
  85      00000000 
  85      00000000 
  85      00000000 
  85      00000000 
ARM GAS  /tmp/ccup522j.s 			page 4


  86              		.text
  87              	.Letext0:
  88              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
  89              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
  90              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
  91              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
ARM GAS  /tmp/ccup522j.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccup522j.s:19     .text.vApplicationIdleHook:0000000000000000 $t
     /tmp/ccup522j.s:25     .text.vApplicationIdleHook:0000000000000000 vApplicationIdleHook
     /tmp/ccup522j.s:38     .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/ccup522j.s:44     .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/ccup522j.s:69     .text.vApplicationGetIdleTaskMemory:0000000000000010 $d
     /tmp/ccup522j.s:84     .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer
     /tmp/ccup522j.s:78     .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/ccup522j.s:75     .bss.xIdleStack:0000000000000000 $d
     /tmp/ccup522j.s:81     .bss.xIdleTaskTCBBuffer:0000000000000000 $d

NO UNDEFINED SYMBOLS
