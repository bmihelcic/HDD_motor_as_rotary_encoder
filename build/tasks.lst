ARM GAS  /tmp/ccGppmC5.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
  18              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	prvTaskIsTaskSuspended:
  25              	.LVL0:
  26              	.LFB15:
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  /tmp/ccGppmC5.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
ARM GAS  /tmp/ccGppmC5.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
ARM GAS  /tmp/ccGppmC5.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
ARM GAS  /tmp/ccGppmC5.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
ARM GAS  /tmp/ccGppmC5.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
ARM GAS  /tmp/ccGppmC5.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = {0};	/*< Prioritised read
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1 = {0};								/*< Delayed tasks. */
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2 = {0};								/*< Delayed tasks (two lists are used
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList = NULL;					/*< Points to the delayed ta
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList = NULL;			/*< Points to the dela
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList = {0};								/*< Tasks that have been readied whil
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination = {0};					/*< Tasks that have been deleted
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList = {0};						/*< Tasks that are currently suspende
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  /tmp/ccGppmC5.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
ARM GAS  /tmp/ccGppmC5.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
ARM GAS  /tmp/ccGppmC5.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
ARM GAS  /tmp/ccGppmC5.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  /tmp/ccGppmC5.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccGppmC5.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
ARM GAS  /tmp/ccGppmC5.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
ARM GAS  /tmp/ccGppmC5.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
ARM GAS  /tmp/ccGppmC5.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			break;
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
ARM GAS  /tmp/ccGppmC5.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccGppmC5.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccGppmC5.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccGppmC5.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
ARM GAS  /tmp/ccGppmC5.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccGppmC5.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/ccGppmC5.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/ccGppmC5.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccGppmC5.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  /tmp/ccGppmC5.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccGppmC5.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  27              		.loc 1 1726 2 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  32              		.loc 1 1727 2 view .LVU1
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  33              		.loc 1 1728 2 view .LVU2
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1734 3 view .LVU3
ARM GAS  /tmp/ccGppmC5.s 			page 32


  35 0000 28B1     		cbz	r0, .L8
  36              		.loc 1 1734 24 discriminator 2 view .LVU4
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  37              		.loc 1 1737 3 discriminator 2 view .LVU5
  38              		.loc 1 1737 7 is_stmt 0 discriminator 2 view .LVU6
  39 0002 4169     		ldr	r1, [r0, #20]
  40              		.loc 1 1737 82 discriminator 2 view .LVU7
  41 0004 0C4A     		ldr	r2, .L10
  42 0006 9142     		cmp	r1, r2
  43 0008 0AD0     		beq	.L9
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  44              		.loc 1 1727 13 view .LVU8
  45 000a 0020     		movs	r0, #0
  46              	.LVL1:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  47              		.loc 1 1727 13 view .LVU9
  48 000c 7047     		bx	lr
  49              	.LVL2:
  50              	.L8:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  51              		.loc 1 1734 3 is_stmt 1 view .LVU10
  52              	.LBB104:
  53              	.LBI104:
  54              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccGppmC5.s 			page 33


  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
ARM GAS  /tmp/ccGppmC5.s 			page 34


  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
ARM GAS  /tmp/ccGppmC5.s 			page 35


 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  55              		.loc 2 191 30 view .LVU11
  56              	.LBB105:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
  57              		.loc 2 193 1 view .LVU12
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
  58              		.loc 2 195 2 view .LVU13
  59              		.syntax unified
  60              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
  61 000e 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccGppmC5.s 			page 36


  62 0012 83F31188 		msr basepri, r3											
  63 0016 BFF36F8F 		isb														
  64 001a BFF34F8F 		dsb														
  65              	
  66              	@ 0 "" 2
  67              	.LVL3:
  68              		.thumb
  69              		.syntax unified
  70              	.L3:
  71              		.loc 2 195 2 is_stmt 0 view .LVU14
  72              	.LBE105:
  73              	.LBE104:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  74              		.loc 1 1734 3 is_stmt 1 discriminator 1 view .LVU15
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  75              		.loc 1 1734 3 discriminator 1 view .LVU16
  76 001e FEE7     		b	.L3
  77              	.L9:
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  78              		.loc 1 1740 4 view .LVU17
  79              		.loc 1 1740 8 is_stmt 0 view .LVU18
  80 0020 836A     		ldr	r3, [r0, #40]
  81              		.loc 1 1740 6 view .LVU19
  82 0022 064A     		ldr	r2, .L10+4
  83 0024 9342     		cmp	r3, r2
  84 0026 02D0     		beq	.L6
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  85              		.loc 1 1744 5 is_stmt 1 view .LVU20
  86              		.loc 1 1744 69 is_stmt 0 view .LVU21
  87 0028 1BB1     		cbz	r3, .L7
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  88              		.loc 1 1727 13 view .LVU22
  89 002a 0020     		movs	r0, #0
  90              	.LVL4:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  91              		.loc 1 1727 13 view .LVU23
  92 002c 7047     		bx	lr
  93              	.LVL5:
  94              	.L6:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  95              		.loc 1 1727 13 view .LVU24
  96 002e 0020     		movs	r0, #0
  97              	.LVL6:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  98              		.loc 1 1727 13 view .LVU25
  99 0030 7047     		bx	lr
 100              	.LVL7:
 101              	.L7:
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 102              		.loc 1 1746 14 view .LVU26
 103 0032 0120     		movs	r0, #1
ARM GAS  /tmp/ccGppmC5.s 			page 37


 104              	.LVL8:
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 105              		.loc 1 1760 28 is_stmt 1 view .LVU27
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 106              		.loc 1 1763 3 view .LVU28
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 107              		.loc 1 1764 2 is_stmt 0 view .LVU29
 108 0034 7047     		bx	lr
 109              	.L11:
 110 0036 00BF     		.align	2
 111              	.L10:
 112 0038 00000000 		.word	xSuspendedTaskList
 113 003c 00000000 		.word	xPendingReadyList
 114              		.cfi_endproc
 115              	.LFE15:
 117              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	prvResetNextTaskUnblockTime:
 124              	.LFB40:
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
ARM GAS  /tmp/ccGppmC5.s 			page 38


1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
ARM GAS  /tmp/ccGppmC5.s 			page 39


1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 40


1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
ARM GAS  /tmp/ccGppmC5.s 			page 41


1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/ccGppmC5.s 			page 42


2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 43


2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
ARM GAS  /tmp/ccGppmC5.s 			page 44


2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
ARM GAS  /tmp/ccGppmC5.s 			page 45


2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
ARM GAS  /tmp/ccGppmC5.s 			page 46


2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
ARM GAS  /tmp/ccGppmC5.s 			page 47


2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == 0x00 )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
ARM GAS  /tmp/ccGppmC5.s 			page 48


2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccGppmC5.s 			page 49


2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 50


2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
ARM GAS  /tmp/ccGppmC5.s 			page 51


2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 52


2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
ARM GAS  /tmp/ccGppmC5.s 			page 53


2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
ARM GAS  /tmp/ccGppmC5.s 			page 54


2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccGppmC5.s 			page 55


2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
ARM GAS  /tmp/ccGppmC5.s 			page 56


2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
ARM GAS  /tmp/ccGppmC5.s 			page 57


2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 58


2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
ARM GAS  /tmp/ccGppmC5.s 			page 59


2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
ARM GAS  /tmp/ccGppmC5.s 			page 60


3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
ARM GAS  /tmp/ccGppmC5.s 			page 61


3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccGppmC5.s 			page 62


3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
ARM GAS  /tmp/ccGppmC5.s 			page 63


3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccGppmC5.s 			page 64


3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
ARM GAS  /tmp/ccGppmC5.s 			page 65


3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 66


3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccGppmC5.s 			page 67


3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccGppmC5.s 			page 68


3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
ARM GAS  /tmp/ccGppmC5.s 			page 69


3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccGppmC5.s 			page 70


3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
ARM GAS  /tmp/ccGppmC5.s 			page 71


3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccGppmC5.s 			page 72


3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 125              		.loc 1 3725 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 130              		.loc 1 3726 1 view .LVU31
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 131              		.loc 1 3728 2 view .LVU32
 132              		.loc 1 3728 6 is_stmt 0 view .LVU33
 133 0000 084B     		ldr	r3, .L15
 134 0002 1B68     		ldr	r3, [r3]
 135 0004 1B68     		ldr	r3, [r3]
 136              		.loc 1 3728 45 view .LVU34
 137 0006 23B9     		cbnz	r3, .L13
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 138              		.loc 1 3734 3 is_stmt 1 view .LVU35
 139              		.loc 1 3734 24 is_stmt 0 view .LVU36
 140 0008 074B     		ldr	r3, .L15+4
 141 000a 4FF0FF32 		mov	r2, #-1
 142 000e 1A60     		str	r2, [r3]
 143 0010 7047     		bx	lr
 144              	.L13:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 145              		.loc 1 3742 3 is_stmt 1 view .LVU37
 146              		.loc 1 3742 27 is_stmt 0 view .LVU38
 147 0012 044B     		ldr	r3, .L15
 148 0014 1B68     		ldr	r3, [r3]
 149 0016 DB68     		ldr	r3, [r3, #12]
 150              		.loc 1 3742 13 view .LVU39
 151 0018 DB68     		ldr	r3, [r3, #12]
 152              	.LVL9:
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 153              		.loc 1 3743 3 is_stmt 1 view .LVU40
 154              		.loc 1 3743 26 is_stmt 0 view .LVU41
 155 001a 5A68     		ldr	r2, [r3, #4]
 156              		.loc 1 3743 24 view .LVU42
 157 001c 024B     		ldr	r3, .L15+4
 158              	.LVL10:
 159              		.loc 1 3743 24 view .LVU43
 160 001e 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccGppmC5.s 			page 73


3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 161              		.loc 1 3745 1 view .LVU44
 162 0020 7047     		bx	lr
 163              	.L16:
 164 0022 00BF     		.align	2
 165              	.L15:
 166 0024 00000000 		.word	pxDelayedTaskList
 167 0028 00000000 		.word	xNextTaskUnblockTime
 168              		.cfi_endproc
 169              	.LFE40:
 171              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 177              	prvInitialiseNewTask:
 178              	.LVL11:
 179              	.LFB7:
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 180              		.loc 1 825 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 16, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 184              		.loc 1 825 1 is_stmt 0 view .LVU46
 185 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 186              	.LCFI0:
 187              		.cfi_def_cfa_offset 32
 188              		.cfi_offset 4, -32
 189              		.cfi_offset 5, -28
 190              		.cfi_offset 6, -24
 191              		.cfi_offset 7, -20
 192              		.cfi_offset 8, -16
 193              		.cfi_offset 9, -12
 194              		.cfi_offset 10, -8
 195              		.cfi_offset 14, -4
 196 0004 0746     		mov	r7, r0
 197 0006 9846     		mov	r8, r3
 198 0008 089D     		ldr	r5, [sp, #32]
 199 000a DDF82490 		ldr	r9, [sp, #36]
 200 000e 0A9C     		ldr	r4, [sp, #40]
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 201              		.loc 1 826 1 is_stmt 1 view .LVU47
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 202              		.loc 1 827 1 view .LVU48
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 203              		.loc 1 857 3 view .LVU49
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 204              		.loc 1 857 26 is_stmt 0 view .LVU50
 205 0010 266B     		ldr	r6, [r4, #48]
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 206              		.loc 1 857 36 view .LVU51
 207 0012 02F18042 		add	r2, r2, #1073741824
 208              	.LVL12:
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 209              		.loc 1 857 36 view .LVU52
ARM GAS  /tmp/ccGppmC5.s 			page 74


 210 0016 013A     		subs	r2, r2, #1
 211              	.LVL13:
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 212              		.loc 1 857 16 view .LVU53
 213 0018 06EB8206 		add	r6, r6, r2, lsl #2
 214              	.LVL14:
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 215              		.loc 1 858 3 is_stmt 1 view .LVU54
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 216              		.loc 1 858 81 is_stmt 0 view .LVU55
 217 001c 26F00706 		bic	r6, r6, #7
 218              	.LVL15:
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 219              		.loc 1 861 3 is_stmt 1 view .LVU56
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 220              		.loc 1 861 124 view .LVU57
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 221              		.loc 1 885 2 view .LVU58
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 222              		.loc 1 885 9 is_stmt 0 view .LVU59
 223 0020 4FF0000C 		mov	ip, #0
 224              	.LVL16:
 225              	.L18:
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 226              		.loc 1 885 32 is_stmt 1 discriminator 1 view .LVU60
 227 0024 BCF10F0F 		cmp	ip, #15
 228 0028 09D8     		bhi	.L19
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 229              		.loc 1 887 3 view .LVU61
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 230              		.loc 1 887 37 is_stmt 0 view .LVU62
 231 002a 11F80C20 		ldrb	r2, [r1, ip]	@ zero_extendqisi2
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 232              		.loc 1 887 29 view .LVU63
 233 002e 04EB0C03 		add	r3, r4, ip
 234 0032 83F83420 		strb	r2, [r3, #52]
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 235              		.loc 1 892 3 is_stmt 1 view .LVU64
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 236              		.loc 1 892 5 is_stmt 0 view .LVU65
 237 0036 12B1     		cbz	r2, .L19
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 238              		.loc 1 898 28 is_stmt 1 discriminator 2 view .LVU66
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 239              		.loc 1 885 76 discriminator 2 view .LVU67
 240 0038 0CF1010C 		add	ip, ip, #1
 241              	.LVL17:
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 242              		.loc 1 885 76 is_stmt 0 discriminator 2 view .LVU68
 243 003c F2E7     		b	.L18
 244              	.L19:
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 245              		.loc 1 904 2 is_stmt 1 view .LVU69
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 246              		.loc 1 904 54 is_stmt 0 view .LVU70
 247 003e 0023     		movs	r3, #0
 248 0040 84F84330 		strb	r3, [r4, #67]
ARM GAS  /tmp/ccGppmC5.s 			page 75


 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 249              		.loc 1 908 2 is_stmt 1 view .LVU71
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 250              		.loc 1 908 4 is_stmt 0 view .LVU72
 251 0044 062D     		cmp	r5, #6
 252 0046 00D9     		bls	.L21
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 253              		.loc 1 910 14 view .LVU73
 254 0048 0625     		movs	r5, #6
 255              	.L21:
 256              	.LVL18:
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 257              		.loc 1 914 27 is_stmt 1 view .LVU74
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 258              		.loc 1 917 2 view .LVU75
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 259              		.loc 1 917 23 is_stmt 0 view .LVU76
 260 004a E562     		str	r5, [r4, #44]
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 261              		.loc 1 920 3 is_stmt 1 view .LVU77
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 262              		.loc 1 920 28 is_stmt 0 view .LVU78
 263 004c 6564     		str	r5, [r4, #68]
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 264              		.loc 1 921 3 is_stmt 1 view .LVU79
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 265              		.loc 1 921 27 is_stmt 0 view .LVU80
 266 004e 4FF0000A 		mov	r10, #0
 267 0052 C4F848A0 		str	r10, [r4, #72]
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 268              		.loc 1 925 2 is_stmt 1 view .LVU81
 269 0056 201D     		adds	r0, r4, #4
 270              	.LVL19:
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 271              		.loc 1 925 2 is_stmt 0 view .LVU82
 272 0058 FFF7FEFF 		bl	vListInitialiseItem
 273              	.LVL20:
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274              		.loc 1 926 2 is_stmt 1 view .LVU83
 275 005c 04F11800 		add	r0, r4, #24
 276 0060 FFF7FEFF 		bl	vListInitialiseItem
 277              	.LVL21:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 278              		.loc 1 930 2 view .LVU84
 279 0064 2461     		str	r4, [r4, #16]
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 280              		.loc 1 933 2 view .LVU85
 281 0066 C5F10705 		rsb	r5, r5, #7
 282              	.LVL22:
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 283              		.loc 1 933 2 is_stmt 0 view .LVU86
 284 006a A561     		str	r5, [r4, #24]
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 285              		.loc 1 934 2 is_stmt 1 view .LVU87
 286 006c 6462     		str	r4, [r4, #36]
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 287              		.loc 1 961 3 view .LVU88
ARM GAS  /tmp/ccGppmC5.s 			page 76


 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 288              		.loc 1 976 3 view .LVU89
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 289              		.loc 1 976 29 is_stmt 0 view .LVU90
 290 006e C4F84CA0 		str	r10, [r4, #76]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 291              		.loc 1 977 3 is_stmt 1 view .LVU91
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 292              		.loc 1 977 27 is_stmt 0 view .LVU92
 293 0072 84F850A0 		strb	r10, [r4, #80]
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 294              		.loc 1 1004 3 is_stmt 1 view .LVU93
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 295              		.loc 1 1004 28 is_stmt 0 view .LVU94
 296 0076 4246     		mov	r2, r8
 297 0078 3946     		mov	r1, r7
 298 007a 3046     		mov	r0, r6
 299 007c FFF7FEFF 		bl	pxPortInitialiseStack
 300              	.LVL23:
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 301              		.loc 1 1004 26 view .LVU95
 302 0080 2060     		str	r0, [r4]
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 303              		.loc 1 1008 2 is_stmt 1 view .LVU96
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 304              		.loc 1 1008 4 is_stmt 0 view .LVU97
 305 0082 B9F1000F 		cmp	r9, #0
 306 0086 01D0     		beq	.L17
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 307              		.loc 1 1012 3 is_stmt 1 view .LVU98
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 308              		.loc 1 1012 18 is_stmt 0 view .LVU99
 309 0088 C9F80040 		str	r4, [r9]
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 310              		.loc 1 1016 27 is_stmt 1 view .LVU100
 311              	.L17:
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 312              		.loc 1 1018 1 is_stmt 0 view .LVU101
 313 008c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 314              		.loc 1 1018 1 view .LVU102
 315              		.cfi_endproc
 316              	.LFE7:
 318              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 319              		.align	1
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	prvInitialiseTaskLists:
 325              	.LFB37:
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 326              		.loc 1 3431 1 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330 0000 38B5     		push	{r3, r4, r5, lr}
 331              	.LCFI1:
ARM GAS  /tmp/ccGppmC5.s 			page 77


 332              		.cfi_def_cfa_offset 16
 333              		.cfi_offset 3, -16
 334              		.cfi_offset 4, -12
 335              		.cfi_offset 5, -8
 336              		.cfi_offset 14, -4
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 337              		.loc 1 3432 1 view .LVU104
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 338              		.loc 1 3434 2 view .LVU105
 339              	.LVL24:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 340              		.loc 1 3434 18 is_stmt 0 view .LVU106
 341 0002 0024     		movs	r4, #0
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 342              		.loc 1 3434 2 view .LVU107
 343 0004 07E0     		b	.L26
 344              	.LVL25:
 345              	.L27:
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 346              		.loc 1 3436 3 is_stmt 1 discriminator 3 view .LVU108
 347 0006 04EB8402 		add	r2, r4, r4, lsl #2
 348 000a 9300     		lsls	r3, r2, #2
 349 000c 0E48     		ldr	r0, .L29
 350 000e 1844     		add	r0, r0, r3
 351 0010 FFF7FEFF 		bl	vListInitialise
 352              	.LVL26:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 353              		.loc 1 3434 101 discriminator 3 view .LVU109
 354 0014 0134     		adds	r4, r4, #1
 355              	.LVL27:
 356              	.L26:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 357              		.loc 1 3434 51 discriminator 1 view .LVU110
 358 0016 062C     		cmp	r4, #6
 359 0018 F5D9     		bls	.L27
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 360              		.loc 1 3439 2 view .LVU111
 361 001a 0C4D     		ldr	r5, .L29+4
 362 001c 2846     		mov	r0, r5
 363 001e FFF7FEFF 		bl	vListInitialise
 364              	.LVL28:
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 365              		.loc 1 3440 2 view .LVU112
 366 0022 0B4C     		ldr	r4, .L29+8
 367              	.LVL29:
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 368              		.loc 1 3440 2 is_stmt 0 view .LVU113
 369 0024 2046     		mov	r0, r4
 370 0026 FFF7FEFF 		bl	vListInitialise
 371              	.LVL30:
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 372              		.loc 1 3441 2 is_stmt 1 view .LVU114
 373 002a 0A48     		ldr	r0, .L29+12
 374 002c FFF7FEFF 		bl	vListInitialise
 375              	.LVL31:
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 376              		.loc 1 3445 3 view .LVU115
ARM GAS  /tmp/ccGppmC5.s 			page 78


 377 0030 0948     		ldr	r0, .L29+16
 378 0032 FFF7FEFF 		bl	vListInitialise
 379              	.LVL32:
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 380              		.loc 1 3451 3 view .LVU116
 381 0036 0948     		ldr	r0, .L29+20
 382 0038 FFF7FEFF 		bl	vListInitialise
 383              	.LVL33:
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 384              		.loc 1 3457 2 view .LVU117
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 385              		.loc 1 3457 20 is_stmt 0 view .LVU118
 386 003c 084B     		ldr	r3, .L29+24
 387 003e 1D60     		str	r5, [r3]
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 388              		.loc 1 3458 2 is_stmt 1 view .LVU119
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 389              		.loc 1 3458 28 is_stmt 0 view .LVU120
 390 0040 084B     		ldr	r3, .L29+28
 391 0042 1C60     		str	r4, [r3]
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 392              		.loc 1 3459 1 view .LVU121
 393 0044 38BD     		pop	{r3, r4, r5, pc}
 394              	.L30:
 395 0046 00BF     		.align	2
 396              	.L29:
 397 0048 00000000 		.word	pxReadyTasksLists
 398 004c 00000000 		.word	xDelayedTaskList1
 399 0050 00000000 		.word	xDelayedTaskList2
 400 0054 00000000 		.word	xPendingReadyList
 401 0058 00000000 		.word	xTasksWaitingTermination
 402 005c 00000000 		.word	xSuspendedTaskList
 403 0060 00000000 		.word	pxDelayedTaskList
 404 0064 00000000 		.word	pxOverflowDelayedTaskList
 405              		.cfi_endproc
 406              	.LFE37:
 408              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 409              		.align	1
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 414              	prvAddNewTaskToReadyList:
 415              	.LVL34:
 416              	.LFB8:
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 417              		.loc 1 1022 1 is_stmt 1 view -0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 421              		.loc 1 1022 1 is_stmt 0 view .LVU123
 422 0000 10B5     		push	{r4, lr}
 423              	.LCFI2:
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 4, -8
 426              		.cfi_offset 14, -4
 427 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccGppmC5.s 			page 79


1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 428              		.loc 1 1025 2 is_stmt 1 view .LVU124
 429 0004 FFF7FEFF 		bl	vPortEnterCritical
 430              	.LVL35:
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 431              		.loc 1 1027 3 view .LVU125
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 432              		.loc 1 1027 25 is_stmt 0 view .LVU126
 433 0008 214A     		ldr	r2, .L38
 434 000a 1368     		ldr	r3, [r2]
 435 000c 0133     		adds	r3, r3, #1
 436 000e 1360     		str	r3, [r2]
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 437              		.loc 1 1028 3 is_stmt 1 view .LVU127
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 438              		.loc 1 1028 20 is_stmt 0 view .LVU128
 439 0010 204B     		ldr	r3, .L38+4
 440 0012 1B68     		ldr	r3, [r3]
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 441              		.loc 1 1028 5 view .LVU129
 442 0014 5BB1     		cbz	r3, .L36
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 443              		.loc 1 1051 4 is_stmt 1 view .LVU130
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 444              		.loc 1 1051 26 is_stmt 0 view .LVU131
 445 0016 204B     		ldr	r3, .L38+8
 446 0018 1B68     		ldr	r3, [r3]
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 447              		.loc 1 1051 6 view .LVU132
 448 001a 6BB9     		cbnz	r3, .L33
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 449              		.loc 1 1053 5 is_stmt 1 view .LVU133
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 450              		.loc 1 1053 21 is_stmt 0 view .LVU134
 451 001c 1D4B     		ldr	r3, .L38+4
 452 001e 1B68     		ldr	r3, [r3]
 453 0020 DA6A     		ldr	r2, [r3, #44]
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 454              		.loc 1 1053 45 view .LVU135
 455 0022 E36A     		ldr	r3, [r4, #44]
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 456              		.loc 1 1053 7 view .LVU136
 457 0024 9A42     		cmp	r2, r3
 458 0026 07D8     		bhi	.L33
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 459              		.loc 1 1055 6 is_stmt 1 view .LVU137
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 460              		.loc 1 1055 19 is_stmt 0 view .LVU138
 461 0028 1A4B     		ldr	r3, .L38+4
 462 002a 1C60     		str	r4, [r3]
 463 002c 04E0     		b	.L33
 464              	.L36:
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 465              		.loc 1 1032 4 is_stmt 1 view .LVU139
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466              		.loc 1 1032 17 is_stmt 0 view .LVU140
 467 002e 194B     		ldr	r3, .L38+4
ARM GAS  /tmp/ccGppmC5.s 			page 80


 468 0030 1C60     		str	r4, [r3]
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 469              		.loc 1 1034 4 is_stmt 1 view .LVU141
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 470              		.loc 1 1034 31 is_stmt 0 view .LVU142
 471 0032 1368     		ldr	r3, [r2]
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 472              		.loc 1 1034 6 view .LVU143
 473 0034 012B     		cmp	r3, #1
 474 0036 28D0     		beq	.L37
 475              	.L33:
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 476              		.loc 1 1064 29 is_stmt 1 view .LVU144
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 477              		.loc 1 1068 3 view .LVU145
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 478              		.loc 1 1068 15 is_stmt 0 view .LVU146
 479 0038 184A     		ldr	r2, .L38+12
 480 003a 1368     		ldr	r3, [r2]
 481 003c 0133     		adds	r3, r3, #1
 482 003e 1360     		str	r3, [r2]
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 483              		.loc 1 1076 31 is_stmt 1 view .LVU147
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 484              		.loc 1 1078 3 view .LVU148
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 485              		.loc 1 1078 3 view .LVU149
 486 0040 E06A     		ldr	r0, [r4, #44]
 487 0042 0123     		movs	r3, #1
 488 0044 8340     		lsls	r3, r3, r0
 489 0046 164A     		ldr	r2, .L38+16
 490 0048 1168     		ldr	r1, [r2]
 491 004a 0B43     		orrs	r3, r3, r1
 492 004c 1360     		str	r3, [r2]
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493              		.loc 1 1078 3 view .LVU150
 494 004e 00EB8000 		add	r0, r0, r0, lsl #2
 495 0052 211D     		adds	r1, r4, #4
 496 0054 134B     		ldr	r3, .L38+20
 497 0056 03EB8000 		add	r0, r3, r0, lsl #2
 498 005a FFF7FEFF 		bl	vListInsertEnd
 499              	.LVL36:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 500              		.loc 1 1078 36 view .LVU151
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 501              		.loc 1 1080 3 view .LVU152
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 502              		.loc 1 1082 2 view .LVU153
 503 005e FFF7FEFF 		bl	vPortExitCritical
 504              	.LVL37:
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 505              		.loc 1 1084 2 view .LVU154
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 506              		.loc 1 1084 24 is_stmt 0 view .LVU155
 507 0062 0D4B     		ldr	r3, .L38+8
 508 0064 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccGppmC5.s 			page 81


 509              		.loc 1 1084 4 view .LVU156
 510 0066 7BB1     		cbz	r3, .L31
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 511              		.loc 1 1088 3 is_stmt 1 view .LVU157
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 512              		.loc 1 1088 19 is_stmt 0 view .LVU158
 513 0068 0A4B     		ldr	r3, .L38+4
 514 006a 1B68     		ldr	r3, [r3]
 515 006c DA6A     		ldr	r2, [r3, #44]
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 516              		.loc 1 1088 42 view .LVU159
 517 006e E36A     		ldr	r3, [r4, #44]
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 518              		.loc 1 1088 5 view .LVU160
 519 0070 9A42     		cmp	r2, r3
 520 0072 09D2     		bcs	.L31
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 521              		.loc 1 1090 4 is_stmt 1 view .LVU161
 522 0074 4FF0E023 		mov	r3, #-536813568
 523 0078 4FF08052 		mov	r2, #268435456
 524 007c C3F8042D 		str	r2, [r3, #3332]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 525              		.loc 1 1090 4 view .LVU162
 526              		.syntax unified
 527              	@ 1090 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 528 0080 BFF34F8F 		dsb
 529              	@ 0 "" 2
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 530              		.loc 1 1090 4 view .LVU163
 531              	@ 1090 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 532 0084 BFF36F8F 		isb
 533              	@ 0 "" 2
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 534              		.loc 1 1090 35 view .LVU164
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 535              		.loc 1 1099 27 view .LVU165
 536              		.thumb
 537              		.syntax unified
 538              	.L31:
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 539              		.loc 1 1101 1 is_stmt 0 view .LVU166
 540 0088 10BD     		pop	{r4, pc}
 541              	.LVL38:
 542              	.L37:
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 543              		.loc 1 1039 5 is_stmt 1 view .LVU167
 544 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 545              	.LVL39:
 546 008e D3E7     		b	.L33
 547              	.L39:
 548              		.align	2
 549              	.L38:
 550 0090 00000000 		.word	uxCurrentNumberOfTasks
 551 0094 00000000 		.word	pxCurrentTCB
 552 0098 00000000 		.word	xSchedulerRunning
 553 009c 00000000 		.word	uxTaskNumber
 554 00a0 00000000 		.word	uxTopReadyPriority
ARM GAS  /tmp/ccGppmC5.s 			page 82


 555 00a4 00000000 		.word	pxReadyTasksLists
 556              		.cfi_endproc
 557              	.LFE8:
 559              		.section	.text.prvDeleteTCB,"ax",%progbits
 560              		.align	1
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	prvDeleteTCB:
 566              	.LVL40:
 567              	.LFB39:
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 568              		.loc 1 3671 2 view -0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 572              		.loc 1 3671 2 is_stmt 0 view .LVU169
 573 0000 10B5     		push	{r4, lr}
 574              	.LCFI3:
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 4, -8
 577              		.cfi_offset 14, -4
 578 0002 0446     		mov	r4, r0
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579              		.loc 1 3675 3 is_stmt 1 view .LVU170
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 580              		.loc 1 3697 4 view .LVU171
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 581              		.loc 1 3697 13 is_stmt 0 view .LVU172
 582 0004 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 583              		.loc 1 3697 6 view .LVU173
 584 0008 63B1     		cbz	r3, .L46
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 585              		.loc 1 3704 9 is_stmt 1 view .LVU174
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 586              		.loc 1 3704 11 is_stmt 0 view .LVU175
 587 000a 012B     		cmp	r3, #1
 588 000c 11D0     		beq	.L47
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 589              		.loc 1 3714 5 is_stmt 1 view .LVU176
 590 000e 022B     		cmp	r3, #2
 591 0010 0ED0     		beq	.L40
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 592              		.loc 1 3714 5 view .LVU177
 593              	.LBB106:
 594              	.LBI106:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 595              		.loc 2 191 30 view .LVU178
 596              	.LBB107:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 597              		.loc 2 193 1 view .LVU179
 598              		.loc 2 195 2 view .LVU180
 599              		.syntax unified
 600              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 601 0012 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccGppmC5.s 			page 83


 602 0016 83F31188 		msr basepri, r3											
 603 001a BFF36F8F 		isb														
 604 001e BFF34F8F 		dsb														
 605              	
 606              	@ 0 "" 2
 607              	.LVL41:
 608              		.thumb
 609              		.syntax unified
 610              	.L44:
 611              		.loc 2 195 2 is_stmt 0 view .LVU181
 612              	.LBE107:
 613              	.LBE106:
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 614              		.loc 1 3714 5 is_stmt 1 discriminator 1 view .LVU182
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 615              		.loc 1 3714 5 discriminator 1 view .LVU183
 616 0022 FEE7     		b	.L44
 617              	.L46:
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 618              		.loc 1 3701 5 view .LVU184
 619 0024 006B     		ldr	r0, [r0, #48]
 620              	.LVL42:
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 621              		.loc 1 3701 5 is_stmt 0 view .LVU185
 622 0026 FFF7FEFF 		bl	vPortFree
 623              	.LVL43:
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 624              		.loc 1 3702 5 is_stmt 1 view .LVU186
 625 002a 2046     		mov	r0, r4
 626 002c FFF7FEFF 		bl	vPortFree
 627              	.LVL44:
 628              	.L40:
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 629              		.loc 1 3719 2 is_stmt 0 view .LVU187
 630 0030 10BD     		pop	{r4, pc}
 631              	.LVL45:
 632              	.L47:
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 633              		.loc 1 3708 5 is_stmt 1 view .LVU188
 634 0032 FFF7FEFF 		bl	vPortFree
 635              	.LVL46:
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 636              		.loc 1 3708 5 is_stmt 0 view .LVU189
 637 0036 FBE7     		b	.L40
 638              		.cfi_endproc
 639              	.LFE39:
 641              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 642              		.align	1
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 647              	prvCheckTasksWaitingTermination:
 648              	.LFB38:
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 649              		.loc 1 3463 1 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccGppmC5.s 			page 84


 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              	.LBB108:
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 654              		.loc 1 3469 3 view .LVU191
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 655              		.loc 1 3473 3 view .LVU192
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 656              		.loc 1 3473 39 view .LVU193
 657 0000 0F4B     		ldr	r3, .L55
 658 0002 1B68     		ldr	r3, [r3]
 659 0004 D3B1     		cbz	r3, .L54
 660              	.LBE108:
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 661              		.loc 1 3463 1 is_stmt 0 view .LVU194
 662 0006 10B5     		push	{r4, lr}
 663              	.LCFI4:
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 4, -8
 666              		.cfi_offset 14, -4
 667              	.L50:
 668              	.LBB109:
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 669              		.loc 1 3475 4 is_stmt 1 view .LVU195
 670 0008 FFF7FEFF 		bl	vPortEnterCritical
 671              	.LVL47:
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 672              		.loc 1 3477 5 view .LVU196
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 673              		.loc 1 3477 25 is_stmt 0 view .LVU197
 674 000c 0D4B     		ldr	r3, .L55+4
 675 000e DB68     		ldr	r3, [r3, #12]
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 676              		.loc 1 3477 11 view .LVU198
 677 0010 DC68     		ldr	r4, [r3, #12]
 678              	.LVL48:
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 679              		.loc 1 3478 5 is_stmt 1 view .LVU199
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 680              		.loc 1 3478 14 is_stmt 0 view .LVU200
 681 0012 201D     		adds	r0, r4, #4
 682 0014 FFF7FEFF 		bl	uxListRemove
 683              	.LVL49:
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 684              		.loc 1 3479 5 is_stmt 1 view .LVU201
 685 0018 0B4A     		ldr	r2, .L55+8
 686 001a 1368     		ldr	r3, [r2]
 687 001c 013B     		subs	r3, r3, #1
 688 001e 1360     		str	r3, [r2]
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 689              		.loc 1 3480 5 view .LVU202
 690 0020 074A     		ldr	r2, .L55
 691 0022 1368     		ldr	r3, [r2]
 692 0024 013B     		subs	r3, r3, #1
 693 0026 1360     		str	r3, [r2]
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 694              		.loc 1 3482 4 view .LVU203
 695 0028 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  /tmp/ccGppmC5.s 			page 85


 696              	.LVL50:
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 697              		.loc 1 3484 4 view .LVU204
 698 002c 2046     		mov	r0, r4
 699 002e FFF7FEFF 		bl	prvDeleteTCB
 700              	.LVL51:
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 701              		.loc 1 3473 39 view .LVU205
 702 0032 034B     		ldr	r3, .L55
 703 0034 1B68     		ldr	r3, [r3]
 704 0036 002B     		cmp	r3, #0
 705 0038 E6D1     		bne	.L50
 706              	.LBE109:
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 707              		.loc 1 3488 1 is_stmt 0 view .LVU206
 708 003a 10BD     		pop	{r4, pc}
 709              	.LVL52:
 710              	.L54:
 711              	.LCFI5:
 712              		.cfi_def_cfa_offset 0
 713              		.cfi_restore 4
 714              		.cfi_restore 14
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 715              		.loc 1 3488 1 view .LVU207
 716 003c 7047     		bx	lr
 717              	.L56:
 718 003e 00BF     		.align	2
 719              	.L55:
 720 0040 00000000 		.word	uxDeletedTasksWaitingCleanUp
 721 0044 00000000 		.word	xTasksWaitingTermination
 722 0048 00000000 		.word	uxCurrentNumberOfTasks
 723              		.cfi_endproc
 724              	.LFE38:
 726              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 727              		.align	1
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 732              	prvAddCurrentTaskToDelayedList:
 733              	.LVL53:
 734              	.LFB54:
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 86


3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccGppmC5.s 			page 87


3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccGppmC5.s 			page 88


3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready list. */
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
ARM GAS  /tmp/ccGppmC5.s 			page 89


3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccGppmC5.s 			page 90


3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccGppmC5.s 			page 91


4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccGppmC5.s 			page 92


4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
ARM GAS  /tmp/ccGppmC5.s 			page 93


4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 94


4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
ARM GAS  /tmp/ccGppmC5.s 			page 95


4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
ARM GAS  /tmp/ccGppmC5.s 			page 96


4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccGppmC5.s 			page 97


4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccGppmC5.s 			page 98


4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
ARM GAS  /tmp/ccGppmC5.s 			page 99


4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
ARM GAS  /tmp/ccGppmC5.s 			page 100


4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/ccGppmC5.s 			page 101


4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
ARM GAS  /tmp/ccGppmC5.s 			page 102


4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
ARM GAS  /tmp/ccGppmC5.s 			page 103


4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
ARM GAS  /tmp/ccGppmC5.s 			page 104


4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 105


4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 106


4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 735              		.loc 1 4907 1 is_stmt 1 view -0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              		.loc 1 4907 1 is_stmt 0 view .LVU209
 740 0000 70B5     		push	{r4, r5, r6, lr}
 741              	.LCFI6:
 742              		.cfi_def_cfa_offset 16
 743              		.cfi_offset 4, -16
 744              		.cfi_offset 5, -12
 745              		.cfi_offset 6, -8
 746              		.cfi_offset 14, -4
 747 0002 0446     		mov	r4, r0
 748 0004 0D46     		mov	r5, r1
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 749              		.loc 1 4908 1 is_stmt 1 view .LVU210
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 750              		.loc 1 4909 1 view .LVU211
 751              		.loc 1 4909 18 is_stmt 0 view .LVU212
 752 0006 1D4B     		ldr	r3, .L64
 753 0008 1E68     		ldr	r6, [r3]
 754              	.LVL54:
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 755              		.loc 1 4922 2 is_stmt 1 view .LVU213
 756              		.loc 1 4922 35 is_stmt 0 view .LVU214
 757 000a 1D4B     		ldr	r3, .L64+4
 758 000c 1868     		ldr	r0, [r3]
 759              	.LVL55:
 760              		.loc 1 4922 6 view .LVU215
 761 000e 0430     		adds	r0, r0, #4
 762 0010 FFF7FEFF 		bl	uxListRemove
 763              	.LVL56:
 764              		.loc 1 4922 4 view .LVU216
 765 0014 48B9     		cbnz	r0, .L58
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 766              		.loc 1 4926 3 is_stmt 1 view .LVU217
ARM GAS  /tmp/ccGppmC5.s 			page 107


 767 0016 1A4B     		ldr	r3, .L64+4
 768 0018 1B68     		ldr	r3, [r3]
 769 001a DB6A     		ldr	r3, [r3, #44]
 770 001c 0122     		movs	r2, #1
 771 001e 9A40     		lsls	r2, r2, r3
 772 0020 1849     		ldr	r1, .L64+8
 773 0022 0B68     		ldr	r3, [r1]
 774 0024 23EA0203 		bic	r3, r3, r2
 775 0028 0B60     		str	r3, [r1]
 776              	.L58:
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 777              		.loc 1 4930 27 view .LVU218
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 778              		.loc 1 4935 3 view .LVU219
 779              		.loc 1 4935 5 is_stmt 0 view .LVU220
 780 002a B4F1FF3F 		cmp	r4, #-1
 781 002e 0DD0     		beq	.L63
 782              	.L59:
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 783              		.loc 1 4947 4 is_stmt 1 view .LVU221
 784              		.loc 1 4947 16 is_stmt 0 view .LVU222
 785 0030 3444     		add	r4, r4, r6
 786              	.LVL57:
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 787              		.loc 1 4950 4 is_stmt 1 view .LVU223
 788 0032 134B     		ldr	r3, .L64+4
 789 0034 1B68     		ldr	r3, [r3]
 790 0036 5C60     		str	r4, [r3, #4]
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 791              		.loc 1 4952 4 view .LVU224
 792              		.loc 1 4952 6 is_stmt 0 view .LVU225
 793 0038 A642     		cmp	r6, r4
 794 003a 10D9     		bls	.L61
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
ARM GAS  /tmp/ccGppmC5.s 			page 108


4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 795              		.loc 1 4956 5 is_stmt 1 view .LVU226
 796 003c 124B     		ldr	r3, .L64+12
 797 003e 1868     		ldr	r0, [r3]
 798              		.loc 1 4956 60 is_stmt 0 view .LVU227
 799 0040 0F4B     		ldr	r3, .L64+4
 800 0042 1968     		ldr	r1, [r3]
 801              		.loc 1 4956 5 view .LVU228
 802 0044 0431     		adds	r1, r1, #4
 803 0046 FFF7FEFF 		bl	vListInsert
 804              	.LVL58:
 805              	.L57:
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
ARM GAS  /tmp/ccGppmC5.s 			page 109


5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 806              		.loc 1 5015 1 view .LVU229
 807 004a 70BD     		pop	{r4, r5, r6, pc}
 808              	.LVL59:
 809              	.L63:
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 810              		.loc 1 4935 41 discriminator 1 view .LVU230
 811 004c 002D     		cmp	r5, #0
 812 004e EFD0     		beq	.L59
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 813              		.loc 1 4940 4 is_stmt 1 view .LVU231
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 814              		.loc 1 4940 56 is_stmt 0 view .LVU232
 815 0050 0B4B     		ldr	r3, .L64+4
 816 0052 1968     		ldr	r1, [r3]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 817              		.loc 1 4940 4 view .LVU233
 818 0054 0431     		adds	r1, r1, #4
 819 0056 0D48     		ldr	r0, .L64+16
 820 0058 FFF7FEFF 		bl	vListInsertEnd
 821              	.LVL60:
 822 005c F5E7     		b	.L57
 823              	.LVL61:
 824              	.L61:
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 825              		.loc 1 4962 5 is_stmt 1 view .LVU234
 826 005e 0C4B     		ldr	r3, .L64+20
 827 0060 1868     		ldr	r0, [r3]
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 828              		.loc 1 4962 52 is_stmt 0 view .LVU235
 829 0062 074B     		ldr	r3, .L64+4
 830 0064 1968     		ldr	r1, [r3]
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 831              		.loc 1 4962 5 view .LVU236
 832 0066 0431     		adds	r1, r1, #4
 833 0068 FFF7FEFF 		bl	vListInsert
 834              	.LVL62:
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 835              		.loc 1 4967 5 is_stmt 1 view .LVU237
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 836              		.loc 1 4967 21 is_stmt 0 view .LVU238
 837 006c 094B     		ldr	r3, .L64+24
 838 006e 1B68     		ldr	r3, [r3]
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccGppmC5.s 			page 110


 839              		.loc 1 4967 7 view .LVU239
 840 0070 A342     		cmp	r3, r4
 841 0072 EAD9     		bls	.L57
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 842              		.loc 1 4969 6 is_stmt 1 view .LVU240
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 843              		.loc 1 4969 27 is_stmt 0 view .LVU241
 844 0074 074B     		ldr	r3, .L64+24
 845 0076 1C60     		str	r4, [r3]
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 846              		.loc 1 4973 30 is_stmt 1 view .LVU242
 847              		.loc 1 5015 1 is_stmt 0 view .LVU243
 848 0078 E7E7     		b	.L57
 849              	.L65:
 850 007a 00BF     		.align	2
 851              	.L64:
 852 007c 00000000 		.word	xTickCount
 853 0080 00000000 		.word	pxCurrentTCB
 854 0084 00000000 		.word	uxTopReadyPriority
 855 0088 00000000 		.word	pxOverflowDelayedTaskList
 856 008c 00000000 		.word	xSuspendedTaskList
 857 0090 00000000 		.word	pxDelayedTaskList
 858 0094 00000000 		.word	xNextTaskUnblockTime
 859              		.cfi_endproc
 860              	.LFE54:
 862              		.section	.text.prvIdleTask,"ax",%progbits
 863              		.align	1
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 868              	prvIdleTask:
 869              	.LFB36:
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 870              		.loc 1 3219 1 is_stmt 1 view -0
 871              		.cfi_startproc
 872              		@ Volatile: function does not return.
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              	.LVL63:
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 876              		.loc 1 3219 1 is_stmt 0 view .LVU245
 877 0000 08B5     		push	{r3, lr}
 878              	.LCFI7:
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 3, -8
 881              		.cfi_offset 14, -4
 882 0002 0BE0     		b	.L68
 883              	.LVL64:
 884              	.L70:
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 885              		.loc 1 3260 5 is_stmt 1 view .LVU246
 886 0004 4FF0E023 		mov	r3, #-536813568
 887 0008 4FF08052 		mov	r2, #268435456
 888 000c C3F8042D 		str	r2, [r3, #3332]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 889              		.loc 1 3260 5 view .LVU247
 890              		.syntax unified
ARM GAS  /tmp/ccGppmC5.s 			page 111


 891              	@ 3260 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 892 0010 BFF34F8F 		dsb
 893              	@ 0 "" 2
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 894              		.loc 1 3260 5 view .LVU248
 895              	@ 3260 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 896 0014 BFF36F8F 		isb
 897              	@ 0 "" 2
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 898              		.loc 1 3260 16 view .LVU249
 899              		.thumb
 900              		.syntax unified
 901              	.L67:
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 902              		.loc 1 3264 29 view .LVU250
 903              	.LBB110:
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 904              		.loc 1 3271 4 view .LVU251
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 905              		.loc 1 3278 4 view .LVU252
 906 0018 FFF7FEFF 		bl	vApplicationIdleHook
 907              	.LVL65:
 908              	.LBE110:
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 909              		.loc 1 3231 2 view .LVU253
 910              	.L68:
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 911              		.loc 1 3221 2 view .LVU254
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 912              		.loc 1 3229 35 view .LVU255
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 913              		.loc 1 3231 2 view .LVU256
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 914              		.loc 1 3235 3 view .LVU257
 915 001c FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 916              	.LVL66:
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 917              		.loc 1 3258 4 view .LVU258
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 918              		.loc 1 3258 8 is_stmt 0 view .LVU259
 919 0020 024B     		ldr	r3, .L71
 920 0022 1B68     		ldr	r3, [r3]
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 921              		.loc 1 3258 6 view .LVU260
 922 0024 012B     		cmp	r3, #1
 923 0026 EDD8     		bhi	.L70
 924 0028 F6E7     		b	.L67
 925              	.L72:
 926 002a 00BF     		.align	2
 927              	.L71:
 928 002c 00000000 		.word	pxReadyTasksLists
 929              		.cfi_endproc
 930              	.LFE36:
 932              		.section	.text.xTaskCreateStatic,"ax",%progbits
 933              		.align	1
 934              		.global	xTaskCreateStatic
 935              		.syntax unified
ARM GAS  /tmp/ccGppmC5.s 			page 112


 936              		.thumb
 937              		.thumb_func
 939              	xTaskCreateStatic:
 940              	.LVL67:
 941              	.LFB5:
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 942              		.loc 1 582 2 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ args = 12, pretend = 0, frame = 8
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 946              		.loc 1 582 2 is_stmt 0 view .LVU262
 947 0000 30B5     		push	{r4, r5, lr}
 948              	.LCFI8:
 949              		.cfi_def_cfa_offset 12
 950              		.cfi_offset 4, -12
 951              		.cfi_offset 5, -8
 952              		.cfi_offset 14, -4
 953 0002 87B0     		sub	sp, sp, #28
 954              	.LCFI9:
 955              		.cfi_def_cfa_offset 40
 956 0004 0B9C     		ldr	r4, [sp, #44]
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 957              		.loc 1 583 2 is_stmt 1 view .LVU263
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958              		.loc 1 584 2 view .LVU264
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 959              		.loc 1 586 3 view .LVU265
 960 0006 7CB1     		cbz	r4, .L81
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 961              		.loc 1 586 41 discriminator 2 view .LVU266
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 962              		.loc 1 587 3 discriminator 2 view .LVU267
 963 0008 0C9D     		ldr	r5, [sp, #48]
 964 000a B5B1     		cbz	r5, .L82
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 965              		.loc 1 587 39 discriminator 2 view .LVU268
 966              	.LBB111:
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 967              		.loc 1 594 4 discriminator 2 view .LVU269
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 968              		.loc 1 594 20 is_stmt 0 discriminator 2 view .LVU270
 969 000c 5425     		movs	r5, #84
 970 000e 0495     		str	r5, [sp, #16]
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 971              		.loc 1 595 4 is_stmt 1 discriminator 2 view .LVU271
 972 0010 049D     		ldr	r5, [sp, #16]
 973 0012 542D     		cmp	r5, #84
 974 0014 1AD0     		beq	.L78
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 975              		.loc 1 595 4 view .LVU272
 976              	.LBB112:
 977              	.LBI112:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 978              		.loc 2 191 30 view .LVU273
 979              	.LBB113:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccGppmC5.s 			page 113


 980              		.loc 2 193 1 view .LVU274
 981              		.loc 2 195 2 view .LVU275
 982              		.syntax unified
 983              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 984 0016 4FF05003 			mov r3, #80												
 985 001a 83F31188 		msr basepri, r3											
 986 001e BFF36F8F 		isb														
 987 0022 BFF34F8F 		dsb														
 988              	
 989              	@ 0 "" 2
 990              	.LVL68:
 991              		.thumb
 992              		.syntax unified
 993              	.L79:
 994              		.loc 2 195 2 is_stmt 0 view .LVU276
 995              	.LBE113:
 996              	.LBE112:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 997              		.loc 1 595 4 is_stmt 1 discriminator 3 view .LVU277
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 998              		.loc 1 595 4 discriminator 3 view .LVU278
 999 0026 FEE7     		b	.L79
 1000              	.LVL69:
 1001              	.L81:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1002              		.loc 1 595 4 is_stmt 0 discriminator 3 view .LVU279
 1003              	.LBE111:
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1004              		.loc 1 586 3 is_stmt 1 view .LVU280
 1005              	.LBB114:
 1006              	.LBI114:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1007              		.loc 2 191 30 view .LVU281
 1008              	.LBB115:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1009              		.loc 2 193 1 view .LVU282
 1010              		.loc 2 195 2 view .LVU283
 1011              		.syntax unified
 1012              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1013 0028 4FF05003 			mov r3, #80												
 1014 002c 83F31188 		msr basepri, r3											
 1015 0030 BFF36F8F 		isb														
 1016 0034 BFF34F8F 		dsb														
 1017              	
 1018              	@ 0 "" 2
 1019              	.LVL70:
 1020              		.thumb
 1021              		.syntax unified
 1022              	.L75:
 1023              		.loc 2 195 2 is_stmt 0 view .LVU284
 1024              	.LBE115:
 1025              	.LBE114:
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1026              		.loc 1 586 3 is_stmt 1 discriminator 1 view .LVU285
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1027              		.loc 1 586 3 discriminator 1 view .LVU286
 1028 0038 FEE7     		b	.L75
ARM GAS  /tmp/ccGppmC5.s 			page 114


 1029              	.LVL71:
 1030              	.L82:
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1031              		.loc 1 587 3 view .LVU287
 1032              	.LBB116:
 1033              	.LBI116:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1034              		.loc 2 191 30 view .LVU288
 1035              	.LBB117:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1036              		.loc 2 193 1 view .LVU289
 1037              		.loc 2 195 2 view .LVU290
 1038              		.syntax unified
 1039              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1040 003a 4FF05003 			mov r3, #80												
 1041 003e 83F31188 		msr basepri, r3											
 1042 0042 BFF36F8F 		isb														
 1043 0046 BFF34F8F 		dsb														
 1044              	
 1045              	@ 0 "" 2
 1046              	.LVL72:
 1047              		.thumb
 1048              		.syntax unified
 1049              	.L77:
 1050              		.loc 2 195 2 is_stmt 0 view .LVU291
 1051              	.LBE117:
 1052              	.LBE116:
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1053              		.loc 1 587 3 is_stmt 1 discriminator 2 view .LVU292
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1054              		.loc 1 587 3 discriminator 2 view .LVU293
 1055 004a FEE7     		b	.L77
 1056              	.LVL73:
 1057              	.L78:
 1058              	.LBB118:
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1059              		.loc 1 595 44 view .LVU294
 1060              	.LBE118:
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1061              		.loc 1 600 3 view .LVU295
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1062              		.loc 1 604 4 view .LVU296
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1063              		.loc 1 605 4 view .LVU297
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1064              		.loc 1 605 22 is_stmt 0 view .LVU298
 1065 004c 0C9D     		ldr	r5, [sp, #48]
 1066 004e 2C63     		str	r4, [r5, #48]
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1067              		.loc 1 611 5 is_stmt 1 view .LVU299
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1068              		.loc 1 611 37 is_stmt 0 view .LVU300
 1069 0050 0224     		movs	r4, #2
 1070 0052 85F85140 		strb	r4, [r5, #81]
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1071              		.loc 1 615 4 is_stmt 1 view .LVU301
 1072 0056 0024     		movs	r4, #0
ARM GAS  /tmp/ccGppmC5.s 			page 115


 1073 0058 0394     		str	r4, [sp, #12]
 1074 005a 0295     		str	r5, [sp, #8]
 1075 005c 05AC     		add	r4, sp, #20
 1076 005e 0194     		str	r4, [sp, #4]
 1077 0060 0A9C     		ldr	r4, [sp, #40]
 1078 0062 0094     		str	r4, [sp]
 1079 0064 FFF7FEFF 		bl	prvInitialiseNewTask
 1080              	.LVL74:
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1081              		.loc 1 616 4 view .LVU302
 1082 0068 0C98     		ldr	r0, [sp, #48]
 1083 006a FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1084              	.LVL75:
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1085              		.loc 1 623 3 view .LVU303
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1086              		.loc 1 624 2 is_stmt 0 view .LVU304
 1087 006e 0598     		ldr	r0, [sp, #20]
 1088 0070 07B0     		add	sp, sp, #28
 1089              	.LCFI10:
 1090              		.cfi_def_cfa_offset 12
 1091              		@ sp needed
 1092 0072 30BD     		pop	{r4, r5, pc}
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1093              		.loc 1 624 2 view .LVU305
 1094              		.cfi_endproc
 1095              	.LFE5:
 1097              		.section	.text.xTaskCreate,"ax",%progbits
 1098              		.align	1
 1099              		.global	xTaskCreate
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1104              	xTaskCreate:
 1105              	.LVL76:
 1106              	.LFB6:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1107              		.loc 1 732 2 is_stmt 1 view -0
 1108              		.cfi_startproc
 1109              		@ args = 8, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1111              		.loc 1 732 2 is_stmt 0 view .LVU307
 1112 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1113              	.LCFI11:
 1114              		.cfi_def_cfa_offset 28
 1115              		.cfi_offset 4, -28
 1116              		.cfi_offset 5, -24
 1117              		.cfi_offset 6, -20
 1118              		.cfi_offset 7, -16
 1119              		.cfi_offset 8, -12
 1120              		.cfi_offset 9, -8
 1121              		.cfi_offset 14, -4
 1122 0004 85B0     		sub	sp, sp, #20
 1123              	.LCFI12:
 1124              		.cfi_def_cfa_offset 48
 1125 0006 0746     		mov	r7, r0
ARM GAS  /tmp/ccGppmC5.s 			page 116


 1126 0008 8846     		mov	r8, r1
 1127 000a 1446     		mov	r4, r2
 1128 000c 1E46     		mov	r6, r3
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1129              		.loc 1 733 2 is_stmt 1 view .LVU308
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1130              		.loc 1 734 2 view .LVU309
 1131              	.LBB119:
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1132              		.loc 1 763 3 view .LVU310
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1133              		.loc 1 766 4 view .LVU311
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1134              		.loc 1 766 32 is_stmt 0 view .LVU312
 1135 000e 9000     		lsls	r0, r2, #2
 1136              	.LVL77:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1137              		.loc 1 766 32 view .LVU313
 1138 0010 FFF7FEFF 		bl	pvPortMalloc
 1139              	.LVL78:
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1140              		.loc 1 768 4 is_stmt 1 view .LVU314
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1141              		.loc 1 768 6 is_stmt 0 view .LVU315
 1142 0014 08B3     		cbz	r0, .L86
 1143 0016 8146     		mov	r9, r0
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1144              		.loc 1 771 5 is_stmt 1 view .LVU316
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1145              		.loc 1 771 28 is_stmt 0 view .LVU317
 1146 0018 5420     		movs	r0, #84
 1147              	.LVL79:
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1148              		.loc 1 771 28 view .LVU318
 1149 001a FFF7FEFF 		bl	pvPortMalloc
 1150              	.LVL80:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1151              		.loc 1 773 5 is_stmt 1 view .LVU319
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1152              		.loc 1 773 7 is_stmt 0 view .LVU320
 1153 001e 0546     		mov	r5, r0
 1154 0020 A8B1     		cbz	r0, .L85
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1155              		.loc 1 776 6 is_stmt 1 view .LVU321
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1156              		.loc 1 776 24 is_stmt 0 view .LVU322
 1157 0022 C0F83090 		str	r9, [r0, #48]
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1158              		.loc 1 776 24 view .LVU323
 1159              	.LBE119:
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1160              		.loc 1 792 3 is_stmt 1 view .LVU324
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1161              		.loc 1 798 5 view .LVU325
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1162              		.loc 1 798 37 is_stmt 0 view .LVU326
 1163 0026 0023     		movs	r3, #0
ARM GAS  /tmp/ccGppmC5.s 			page 117


 1164 0028 80F85130 		strb	r3, [r0, #81]
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1165              		.loc 1 802 4 is_stmt 1 view .LVU327
 1166 002c 0393     		str	r3, [sp, #12]
 1167 002e 0290     		str	r0, [sp, #8]
 1168 0030 0D9B     		ldr	r3, [sp, #52]
 1169 0032 0193     		str	r3, [sp, #4]
 1170 0034 0C9B     		ldr	r3, [sp, #48]
 1171 0036 0093     		str	r3, [sp]
 1172 0038 3346     		mov	r3, r6
 1173 003a 2246     		mov	r2, r4
 1174 003c 4146     		mov	r1, r8
 1175 003e 3846     		mov	r0, r7
 1176              	.LVL81:
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1177              		.loc 1 802 4 is_stmt 0 view .LVU328
 1178 0040 FFF7FEFF 		bl	prvInitialiseNewTask
 1179              	.LVL82:
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1180              		.loc 1 803 4 is_stmt 1 view .LVU329
 1181 0044 2846     		mov	r0, r5
 1182 0046 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1183              	.LVL83:
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1184              		.loc 1 804 4 view .LVU330
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1185              		.loc 1 804 12 is_stmt 0 view .LVU331
 1186 004a 0120     		movs	r0, #1
 1187 004c 07E0     		b	.L83
 1188              	.LVL84:
 1189              	.L85:
 1190              	.LBB120:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1191              		.loc 1 782 6 is_stmt 1 view .LVU332
 1192 004e 4846     		mov	r0, r9
 1193              	.LVL85:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1194              		.loc 1 782 6 is_stmt 0 view .LVU333
 1195 0050 FFF7FEFF 		bl	vPortFree
 1196              	.LVL86:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1197              		.loc 1 782 6 view .LVU334
 1198              	.LBE120:
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1199              		.loc 1 792 3 is_stmt 1 view .LVU335
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1200              		.loc 1 808 12 is_stmt 0 view .LVU336
 1201 0054 4FF0FF30 		mov	r0, #-1
 1202 0058 01E0     		b	.L83
 1203              	.LVL87:
 1204              	.L86:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1205              		.loc 1 808 12 view .LVU337
 1206 005a 4FF0FF30 		mov	r0, #-1
 1207              	.LVL88:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1208              		.loc 1 811 3 is_stmt 1 view .LVU338
ARM GAS  /tmp/ccGppmC5.s 			page 118


 1209              	.L83:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1210              		.loc 1 812 2 is_stmt 0 view .LVU339
 1211 005e 05B0     		add	sp, sp, #20
 1212              	.LCFI13:
 1213              		.cfi_def_cfa_offset 28
 1214              		@ sp needed
 1215 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1216              		.loc 1 812 2 view .LVU340
 1217              		.cfi_endproc
 1218              	.LFE6:
 1220              		.section	.text.vTaskDelete,"ax",%progbits
 1221              		.align	1
 1222              		.global	vTaskDelete
 1223              		.syntax unified
 1224              		.thumb
 1225              		.thumb_func
 1227              	vTaskDelete:
 1228              	.LVL89:
 1229              	.LFB9:
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1230              		.loc 1 1107 2 is_stmt 1 view -0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 0
 1233              		@ frame_needed = 0, uses_anonymous_args = 0
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1234              		.loc 1 1107 2 is_stmt 0 view .LVU342
 1235 0000 38B5     		push	{r3, r4, r5, lr}
 1236              	.LCFI14:
 1237              		.cfi_def_cfa_offset 16
 1238              		.cfi_offset 3, -16
 1239              		.cfi_offset 4, -12
 1240              		.cfi_offset 5, -8
 1241              		.cfi_offset 14, -4
 1242 0002 0446     		mov	r4, r0
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1243              		.loc 1 1108 2 is_stmt 1 view .LVU343
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1244              		.loc 1 1110 3 view .LVU344
 1245 0004 FFF7FEFF 		bl	vPortEnterCritical
 1246              	.LVL90:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1247              		.loc 1 1114 4 view .LVU345
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1248              		.loc 1 1114 12 is_stmt 0 view .LVU346
 1249 0008 002C     		cmp	r4, #0
 1250 000a 34D0     		beq	.L98
 1251              	.LVL91:
 1252              	.L89:
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1253              		.loc 1 1117 4 is_stmt 1 discriminator 4 view .LVU347
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1254              		.loc 1 1117 8 is_stmt 0 discriminator 4 view .LVU348
 1255 000c 251D     		adds	r5, r4, #4
 1256 000e 2846     		mov	r0, r5
 1257 0010 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccGppmC5.s 			page 119


 1258              	.LVL92:
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1259              		.loc 1 1117 6 discriminator 4 view .LVU349
 1260 0014 70B9     		cbnz	r0, .L90
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1261              		.loc 1 1119 5 is_stmt 1 view .LVU350
 1262 0016 E26A     		ldr	r2, [r4, #44]
 1263 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1264 001c 9B00     		lsls	r3, r3, #2
 1265 001e 2749     		ldr	r1, .L101
 1266 0020 CB58     		ldr	r3, [r1, r3]
 1267 0022 3BB9     		cbnz	r3, .L90
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1268              		.loc 1 1119 5 discriminator 1 view .LVU351
 1269 0024 0123     		movs	r3, #1
 1270 0026 03FA02F2 		lsl	r2, r3, r2
 1271 002a 2549     		ldr	r1, .L101+4
 1272 002c 0B68     		ldr	r3, [r1]
 1273 002e 23EA0203 		bic	r3, r3, r2
 1274 0032 0B60     		str	r3, [r1]
 1275              	.L90:
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1276              		.loc 1 1123 29 view .LVU352
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1277              		.loc 1 1127 4 view .LVU353
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1278              		.loc 1 1127 8 is_stmt 0 view .LVU354
 1279 0034 A36A     		ldr	r3, [r4, #40]
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1280              		.loc 1 1127 6 view .LVU355
 1281 0036 1BB1     		cbz	r3, .L91
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1282              		.loc 1 1129 5 is_stmt 1 view .LVU356
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1283              		.loc 1 1129 14 is_stmt 0 view .LVU357
 1284 0038 04F11800 		add	r0, r4, #24
 1285 003c FFF7FEFF 		bl	uxListRemove
 1286              	.LVL93:
 1287              	.L91:
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1288              		.loc 1 1133 29 is_stmt 1 view .LVU358
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1289              		.loc 1 1140 4 view .LVU359
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1290              		.loc 1 1140 16 is_stmt 0 view .LVU360
 1291 0040 204A     		ldr	r2, .L101+8
 1292 0042 1368     		ldr	r3, [r2]
 1293 0044 0133     		adds	r3, r3, #1
 1294 0046 1360     		str	r3, [r2]
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1295              		.loc 1 1142 4 is_stmt 1 view .LVU361
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1296              		.loc 1 1142 14 is_stmt 0 view .LVU362
 1297 0048 1F4B     		ldr	r3, .L101+12
 1298 004a 1B68     		ldr	r3, [r3]
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1299              		.loc 1 1142 6 view .LVU363
ARM GAS  /tmp/ccGppmC5.s 			page 120


 1300 004c A342     		cmp	r3, r4
 1301 004e 15D0     		beq	.L99
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1302              		.loc 1 1165 5 is_stmt 1 view .LVU364
 1303 0050 1E4A     		ldr	r2, .L101+16
 1304 0052 1368     		ldr	r3, [r2]
 1305 0054 013B     		subs	r3, r3, #1
 1306 0056 1360     		str	r3, [r2]
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1307              		.loc 1 1166 5 view .LVU365
 1308 0058 2046     		mov	r0, r4
 1309 005a FFF7FEFF 		bl	prvDeleteTCB
 1310              	.LVL94:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1311              		.loc 1 1170 5 view .LVU366
 1312 005e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1313              	.LVL95:
 1314              	.L93:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1315              		.loc 1 1173 29 view .LVU367
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1316              		.loc 1 1175 3 view .LVU368
 1317 0062 FFF7FEFF 		bl	vPortExitCritical
 1318              	.LVL96:
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1319              		.loc 1 1179 3 view .LVU369
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1320              		.loc 1 1179 25 is_stmt 0 view .LVU370
 1321 0066 1A4B     		ldr	r3, .L101+20
 1322 0068 1B68     		ldr	r3, [r3]
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1323              		.loc 1 1179 5 view .LVU371
 1324 006a 1BB1     		cbz	r3, .L88
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1325              		.loc 1 1181 4 is_stmt 1 view .LVU372
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1326              		.loc 1 1181 14 is_stmt 0 view .LVU373
 1327 006c 164B     		ldr	r3, .L101+12
 1328 006e 1B68     		ldr	r3, [r3]
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1329              		.loc 1 1181 6 view .LVU374
 1330 0070 A342     		cmp	r3, r4
 1331 0072 0CD0     		beq	.L100
 1332              	.L88:
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1333              		.loc 1 1191 2 view .LVU375
 1334 0074 38BD     		pop	{r3, r4, r5, pc}
 1335              	.LVL97:
 1336              	.L98:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1337              		.loc 1 1114 12 discriminator 1 view .LVU376
 1338 0076 144B     		ldr	r3, .L101+12
 1339 0078 1C68     		ldr	r4, [r3]
 1340              	.LVL98:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1341              		.loc 1 1114 12 discriminator 1 view .LVU377
 1342 007a C7E7     		b	.L89
ARM GAS  /tmp/ccGppmC5.s 			page 121


 1343              	.LVL99:
 1344              	.L99:
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1345              		.loc 1 1149 5 is_stmt 1 view .LVU378
 1346 007c 2946     		mov	r1, r5
 1347 007e 1548     		ldr	r0, .L101+24
 1348 0080 FFF7FEFF 		bl	vListInsertEnd
 1349              	.LVL100:
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1350              		.loc 1 1154 5 view .LVU379
 1351 0084 144A     		ldr	r2, .L101+28
 1352 0086 1368     		ldr	r3, [r2]
 1353 0088 0133     		adds	r3, r3, #1
 1354 008a 1360     		str	r3, [r2]
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1355              		.loc 1 1161 54 view .LVU380
 1356 008c E9E7     		b	.L93
 1357              	.L100:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1358              		.loc 1 1183 5 view .LVU381
 1359 008e 134B     		ldr	r3, .L101+32
 1360 0090 1B68     		ldr	r3, [r3]
 1361 0092 43B1     		cbz	r3, .L95
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1362              		.loc 1 1183 5 view .LVU382
 1363              	.LBB121:
 1364              	.LBI121:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1365              		.loc 2 191 30 view .LVU383
 1366              	.LBB122:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1367              		.loc 2 193 1 view .LVU384
 1368              		.loc 2 195 2 view .LVU385
 1369              		.syntax unified
 1370              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1371 0094 4FF05003 			mov r3, #80												
 1372 0098 83F31188 		msr basepri, r3											
 1373 009c BFF36F8F 		isb														
 1374 00a0 BFF34F8F 		dsb														
 1375              	
 1376              	@ 0 "" 2
 1377              	.LVL101:
 1378              		.thumb
 1379              		.syntax unified
 1380              	.L96:
 1381              		.loc 2 195 2 is_stmt 0 view .LVU386
 1382              	.LBE122:
 1383              	.LBE121:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1384              		.loc 1 1183 5 is_stmt 1 discriminator 1 view .LVU387
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1385              		.loc 1 1183 5 discriminator 1 view .LVU388
 1386 00a4 FEE7     		b	.L96
 1387              	.L95:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1388              		.loc 1 1183 46 discriminator 2 view .LVU389
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccGppmC5.s 			page 122


 1389              		.loc 1 1184 5 discriminator 2 view .LVU390
 1390 00a6 4FF0E023 		mov	r3, #-536813568
 1391 00aa 4FF08052 		mov	r2, #268435456
 1392 00ae C3F8042D 		str	r2, [r3, #3332]
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1393              		.loc 1 1184 5 discriminator 2 view .LVU391
 1394              		.syntax unified
 1395              	@ 1184 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1396 00b2 BFF34F8F 		dsb
 1397              	@ 0 "" 2
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1398              		.loc 1 1184 5 discriminator 2 view .LVU392
 1399              	@ 1184 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1400 00b6 BFF36F8F 		isb
 1401              	@ 0 "" 2
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1402              		.loc 1 1184 27 discriminator 2 view .LVU393
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1403              		.loc 1 1188 29 discriminator 2 view .LVU394
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1404              		.loc 1 1191 2 is_stmt 0 discriminator 2 view .LVU395
 1405              		.thumb
 1406              		.syntax unified
 1407 00ba DBE7     		b	.L88
 1408              	.L102:
 1409              		.align	2
 1410              	.L101:
 1411 00bc 00000000 		.word	pxReadyTasksLists
 1412 00c0 00000000 		.word	uxTopReadyPriority
 1413 00c4 00000000 		.word	uxTaskNumber
 1414 00c8 00000000 		.word	pxCurrentTCB
 1415 00cc 00000000 		.word	uxCurrentNumberOfTasks
 1416 00d0 00000000 		.word	xSchedulerRunning
 1417 00d4 00000000 		.word	xTasksWaitingTermination
 1418 00d8 00000000 		.word	uxDeletedTasksWaitingCleanUp
 1419 00dc 00000000 		.word	uxSchedulerSuspended
 1420              		.cfi_endproc
 1421              	.LFE9:
 1423              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1424              		.align	1
 1425              		.global	uxTaskPriorityGet
 1426              		.syntax unified
 1427              		.thumb
 1428              		.thumb_func
 1430              	uxTaskPriorityGet:
 1431              	.LVL102:
 1432              	.LFB11:
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1433              		.loc 1 1399 2 is_stmt 1 view -0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1437              		.loc 1 1399 2 is_stmt 0 view .LVU397
 1438 0000 10B5     		push	{r4, lr}
 1439              	.LCFI15:
 1440              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccGppmC5.s 			page 123


 1441              		.cfi_offset 4, -8
 1442              		.cfi_offset 14, -4
 1443 0002 0446     		mov	r4, r0
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1444              		.loc 1 1400 2 is_stmt 1 view .LVU398
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1445              		.loc 1 1401 2 view .LVU399
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1446              		.loc 1 1403 3 view .LVU400
 1447 0004 FFF7FEFF 		bl	vPortEnterCritical
 1448              	.LVL103:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1449              		.loc 1 1407 4 view .LVU401
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1450              		.loc 1 1407 12 is_stmt 0 view .LVU402
 1451 0008 24B1     		cbz	r4, .L106
 1452              	.LVL104:
 1453              	.L104:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1454              		.loc 1 1408 4 is_stmt 1 discriminator 4 view .LVU403
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1455              		.loc 1 1408 13 is_stmt 0 discriminator 4 view .LVU404
 1456 000a E46A     		ldr	r4, [r4, #44]
 1457              	.LVL105:
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1458              		.loc 1 1410 3 is_stmt 1 discriminator 4 view .LVU405
 1459 000c FFF7FEFF 		bl	vPortExitCritical
 1460              	.LVL106:
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1461              		.loc 1 1412 3 discriminator 4 view .LVU406
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1462              		.loc 1 1413 2 is_stmt 0 discriminator 4 view .LVU407
 1463 0010 2046     		mov	r0, r4
 1464 0012 10BD     		pop	{r4, pc}
 1465              	.LVL107:
 1466              	.L106:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1467              		.loc 1 1407 12 discriminator 1 view .LVU408
 1468 0014 014B     		ldr	r3, .L107
 1469 0016 1C68     		ldr	r4, [r3]
 1470              	.LVL108:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1471              		.loc 1 1407 12 discriminator 1 view .LVU409
 1472 0018 F7E7     		b	.L104
 1473              	.L108:
 1474 001a 00BF     		.align	2
 1475              	.L107:
 1476 001c 00000000 		.word	pxCurrentTCB
 1477              		.cfi_endproc
 1478              	.LFE11:
 1480              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1481              		.align	1
 1482              		.global	uxTaskPriorityGetFromISR
 1483              		.syntax unified
 1484              		.thumb
 1485              		.thumb_func
 1487              	uxTaskPriorityGetFromISR:
ARM GAS  /tmp/ccGppmC5.s 			page 124


 1488              	.LVL109:
 1489              	.LFB12:
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1490              		.loc 1 1421 2 is_stmt 1 view -0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1494              		.loc 1 1421 2 is_stmt 0 view .LVU411
 1495 0000 10B5     		push	{r4, lr}
 1496              	.LCFI16:
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 4, -8
 1499              		.cfi_offset 14, -4
 1500 0002 0446     		mov	r4, r0
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1501              		.loc 1 1422 2 is_stmt 1 view .LVU412
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1502              		.loc 1 1423 2 view .LVU413
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1503              		.loc 1 1441 3 view .LVU414
 1504 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1505              	.LVL110:
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1506              		.loc 1 1443 3 view .LVU415
 1507              	.LBB123:
 1508              	.LBI123:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1509              		.loc 2 207 34 view .LVU416
 1510              	.LBB124:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1511              		.loc 2 209 1 view .LVU417
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1512              		.loc 2 211 2 view .LVU418
 1513              		.syntax unified
 1514              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1515 0008 EFF31183 			mrs r3, basepri											
 1516 000c 4FF05002 		mov r2, #80												
 1517 0010 82F31188 		msr basepri, r2											
 1518 0014 BFF36F8F 		isb														
 1519 0018 BFF34F8F 		dsb														
 1520              	
 1521              	@ 0 "" 2
 1522              	.LVL111:
ARM GAS  /tmp/ccGppmC5.s 			page 125


 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 1523              		.loc 2 223 2 view .LVU419
 1524              		.loc 2 223 2 is_stmt 0 view .LVU420
 1525              		.thumb
 1526              		.syntax unified
 1527              	.LBE124:
 1528              	.LBE123:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1529              		.loc 1 1447 4 is_stmt 1 view .LVU421
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1530              		.loc 1 1447 12 is_stmt 0 view .LVU422
 1531 001c 1CB1     		cbz	r4, .L112
 1532              	.LVL112:
 1533              	.L110:
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1534              		.loc 1 1448 4 is_stmt 1 discriminator 4 view .LVU423
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1535              		.loc 1 1448 13 is_stmt 0 discriminator 4 view .LVU424
 1536 001e E06A     		ldr	r0, [r4, #44]
 1537              	.LVL113:
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1538              		.loc 1 1450 3 is_stmt 1 discriminator 4 view .LVU425
 1539              	.LBB125:
 1540              	.LBI125:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1541              		.loc 2 227 30 discriminator 4 view .LVU426
 1542              	.LBB126:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1543              		.loc 2 229 2 discriminator 4 view .LVU427
 1544              		.syntax unified
 1545              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1546 0020 83F31188 			msr basepri, r3	
 1547              	@ 0 "" 2
 1548              		.thumb
 1549              		.syntax unified
 1550              	.LBE126:
 1551              	.LBE125:
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1552              		.loc 1 1452 3 discriminator 4 view .LVU428
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1553              		.loc 1 1453 2 is_stmt 0 discriminator 4 view .LVU429
 1554 0024 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccGppmC5.s 			page 126


 1555              	.LVL114:
 1556              	.L112:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1557              		.loc 1 1447 12 discriminator 1 view .LVU430
 1558 0026 014A     		ldr	r2, .L113
 1559 0028 1468     		ldr	r4, [r2]
 1560              	.LVL115:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1561              		.loc 1 1447 12 discriminator 1 view .LVU431
 1562 002a F8E7     		b	.L110
 1563              	.L114:
 1564              		.align	2
 1565              	.L113:
 1566 002c 00000000 		.word	pxCurrentTCB
 1567              		.cfi_endproc
 1568              	.LFE12:
 1570              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1571              		.align	1
 1572              		.global	vTaskPrioritySet
 1573              		.syntax unified
 1574              		.thumb
 1575              		.thumb_func
 1577              	vTaskPrioritySet:
 1578              	.LVL116:
 1579              	.LFB13:
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1580              		.loc 1 1461 2 is_stmt 1 view -0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 0
 1583              		@ frame_needed = 0, uses_anonymous_args = 0
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1584              		.loc 1 1461 2 is_stmt 0 view .LVU433
 1585 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1586              	.LCFI17:
 1587              		.cfi_def_cfa_offset 24
 1588              		.cfi_offset 3, -24
 1589              		.cfi_offset 4, -20
 1590              		.cfi_offset 5, -16
 1591              		.cfi_offset 6, -12
 1592              		.cfi_offset 7, -8
 1593              		.cfi_offset 14, -4
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1594              		.loc 1 1462 2 is_stmt 1 view .LVU434
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1595              		.loc 1 1463 2 view .LVU435
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1596              		.loc 1 1464 2 view .LVU436
 1597              	.LVL117:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1598              		.loc 1 1466 3 view .LVU437
 1599 0002 0629     		cmp	r1, #6
 1600 0004 08D9     		bls	.L116
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1601              		.loc 1 1466 3 view .LVU438
 1602              	.LBB127:
 1603              	.LBI127:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
ARM GAS  /tmp/ccGppmC5.s 			page 127


 1604              		.loc 2 191 30 view .LVU439
 1605              	.LBB128:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1606              		.loc 2 193 1 view .LVU440
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1607              		.loc 2 195 2 view .LVU441
 1608              		.syntax unified
 1609              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1610 0006 4FF05003 			mov r3, #80												
 1611 000a 83F31188 		msr basepri, r3											
 1612 000e BFF36F8F 		isb														
 1613 0012 BFF34F8F 		dsb														
 1614              	
 1615              	@ 0 "" 2
 1616              	.LVL118:
 1617              		.thumb
 1618              		.syntax unified
 1619              	.L117:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1620              		.loc 2 195 2 is_stmt 0 view .LVU442
 1621              	.LBE128:
 1622              	.LBE127:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1623              		.loc 1 1466 3 is_stmt 1 discriminator 1 view .LVU443
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1624              		.loc 1 1466 3 discriminator 1 view .LVU444
 1625 0016 FEE7     		b	.L117
 1626              	.L116:
 1627 0018 0546     		mov	r5, r0
 1628 001a 0C46     		mov	r4, r1
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1629              		.loc 1 1466 59 view .LVU445
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1630              		.loc 1 1469 3 view .LVU446
 1631              	.LVL119:
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1632              		.loc 1 1475 28 view .LVU447
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1633              		.loc 1 1478 3 view .LVU448
 1634 001c FFF7FEFF 		bl	vPortEnterCritical
 1635              	.LVL120:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1636              		.loc 1 1482 4 view .LVU449
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1637              		.loc 1 1482 12 is_stmt 0 view .LVU450
 1638 0020 75B1     		cbz	r5, .L130
 1639              	.LVL121:
 1640              	.L118:
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1641              		.loc 1 1484 50 is_stmt 1 discriminator 4 view .LVU451
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1642              		.loc 1 1488 5 discriminator 4 view .LVU452
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1643              		.loc 1 1488 27 is_stmt 0 discriminator 4 view .LVU453
 1644 0022 6B6C     		ldr	r3, [r5, #68]
 1645              	.LVL122:
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccGppmC5.s 			page 128


 1646              		.loc 1 1496 4 is_stmt 1 discriminator 4 view .LVU454
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1647              		.loc 1 1496 6 is_stmt 0 discriminator 4 view .LVU455
 1648 0024 9C42     		cmp	r4, r3
 1649 0026 30D0     		beq	.L119
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1650              		.loc 1 1500 5 is_stmt 1 view .LVU456
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1651              		.loc 1 1500 7 is_stmt 0 view .LVU457
 1652 0028 0DD9     		bls	.L120
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1653              		.loc 1 1502 6 is_stmt 1 view .LVU458
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1654              		.loc 1 1502 16 is_stmt 0 view .LVU459
 1655 002a 2B4A     		ldr	r2, .L133
 1656 002c 1268     		ldr	r2, [r2]
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1657              		.loc 1 1502 8 view .LVU460
 1658 002e AA42     		cmp	r2, r5
 1659 0030 2ED0     		beq	.L126
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1660              		.loc 1 1507 7 is_stmt 1 view .LVU461
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1661              		.loc 1 1507 40 is_stmt 0 view .LVU462
 1662 0032 294A     		ldr	r2, .L133
 1663 0034 1268     		ldr	r2, [r2]
 1664 0036 D26A     		ldr	r2, [r2, #44]
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1665              		.loc 1 1507 9 view .LVU463
 1666 0038 A242     		cmp	r2, r4
 1667 003a 2BD9     		bls	.L127
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1668              		.loc 1 1464 13 view .LVU464
 1669 003c 0027     		movs	r7, #0
 1670 003e 07E0     		b	.L121
 1671              	.LVL123:
 1672              	.L130:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1673              		.loc 1 1482 12 discriminator 1 view .LVU465
 1674 0040 254B     		ldr	r3, .L133
 1675 0042 1D68     		ldr	r5, [r3]
 1676              	.LVL124:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1677              		.loc 1 1482 12 discriminator 1 view .LVU466
 1678 0044 EDE7     		b	.L118
 1679              	.LVL125:
 1680              	.L120:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1681              		.loc 1 1523 10 is_stmt 1 view .LVU467
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1682              		.loc 1 1523 20 is_stmt 0 view .LVU468
 1683 0046 244A     		ldr	r2, .L133
 1684 0048 1268     		ldr	r2, [r2]
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1685              		.loc 1 1523 12 view .LVU469
 1686 004a AA42     		cmp	r2, r5
 1687 004c 24D0     		beq	.L128
ARM GAS  /tmp/ccGppmC5.s 			page 129


1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1688              		.loc 1 1464 13 view .LVU470
 1689 004e 0027     		movs	r7, #0
 1690              	.L121:
 1691              	.LVL126:
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1692              		.loc 1 1535 5 is_stmt 1 view .LVU471
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1693              		.loc 1 1540 5 view .LVU472
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1694              		.loc 1 1540 27 is_stmt 0 view .LVU473
 1695 0050 EE6A     		ldr	r6, [r5, #44]
 1696              	.LVL127:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1697              		.loc 1 1546 6 is_stmt 1 view .LVU474
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1698              		.loc 1 1546 8 is_stmt 0 view .LVU475
 1699 0052 B342     		cmp	r3, r6
 1700 0054 22D0     		beq	.L131
 1701              	.L122:
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1702              		.loc 1 1552 31 is_stmt 1 view .LVU476
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1703              		.loc 1 1556 6 view .LVU477
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1704              		.loc 1 1556 28 is_stmt 0 view .LVU478
 1705 0056 6C64     		str	r4, [r5, #68]
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1706              		.loc 1 1566 5 is_stmt 1 view .LVU479
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1707              		.loc 1 1566 11 is_stmt 0 view .LVU480
 1708 0058 AB69     		ldr	r3, [r5, #24]
 1709              	.LVL128:
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1710              		.loc 1 1566 7 view .LVU481
 1711 005a 002B     		cmp	r3, #0
 1712 005c 02DB     		blt	.L123
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1713              		.loc 1 1568 6 is_stmt 1 view .LVU482
 1714 005e C4F10704 		rsb	r4, r4, #7
 1715              	.LVL129:
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1716              		.loc 1 1568 6 is_stmt 0 view .LVU483
 1717 0062 AC61     		str	r4, [r5, #24]
 1718              	.L123:
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1719              		.loc 1 1572 30 is_stmt 1 view .LVU484
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1720              		.loc 1 1579 5 view .LVU485
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1721              		.loc 1 1579 9 is_stmt 0 view .LVU486
 1722 0064 6969     		ldr	r1, [r5, #20]
 1723 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1724 006a 1C4B     		ldr	r3, .L133+4
 1725 006c 03EB8203 		add	r3, r3, r2, lsl #2
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1726              		.loc 1 1579 112 view .LVU487
ARM GAS  /tmp/ccGppmC5.s 			page 130


 1727 0070 9942     		cmp	r1, r3
 1728 0072 15D0     		beq	.L132
 1729              	.LVL130:
 1730              	.L124:
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1731              		.loc 1 1599 30 is_stmt 1 view .LVU488
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1732              		.loc 1 1602 5 view .LVU489
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1733              		.loc 1 1602 7 is_stmt 0 view .LVU490
 1734 0074 4FB1     		cbz	r7, .L119
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1735              		.loc 1 1604 6 is_stmt 1 view .LVU491
 1736 0076 4FF0E023 		mov	r3, #-536813568
 1737 007a 4FF08052 		mov	r2, #268435456
 1738 007e C3F8042D 		str	r2, [r3, #3332]
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1739              		.loc 1 1604 6 view .LVU492
 1740              		.syntax unified
 1741              	@ 1604 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1742 0082 BFF34F8F 		dsb
 1743              	@ 0 "" 2
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1744              		.loc 1 1604 6 view .LVU493
 1745              	@ 1604 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1746 0086 BFF36F8F 		isb
 1747              	@ 0 "" 2
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1748              		.loc 1 1604 37 view .LVU494
 1749              	.LVL131:
 1750              		.thumb
 1751              		.syntax unified
 1752              	.L119:
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1753              		.loc 1 1608 30 view .LVU495
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1754              		.loc 1 1613 5 view .LVU496
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1755              		.loc 1 1616 3 view .LVU497
 1756 008a FFF7FEFF 		bl	vPortExitCritical
 1757              	.LVL132:
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1758              		.loc 1 1617 2 is_stmt 0 view .LVU498
 1759 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1760              	.LVL133:
 1761              	.L126:
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1762              		.loc 1 1464 13 view .LVU499
 1763 0090 0027     		movs	r7, #0
 1764 0092 DDE7     		b	.L121
 1765              	.L127:
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1766              		.loc 1 1509 23 view .LVU500
 1767 0094 0127     		movs	r7, #1
 1768 0096 DBE7     		b	.L121
 1769              	.L128:
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccGppmC5.s 			page 131


 1770              		.loc 1 1528 21 view .LVU501
 1771 0098 0127     		movs	r7, #1
 1772 009a D9E7     		b	.L121
 1773              	.LVL134:
 1774              	.L131:
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1775              		.loc 1 1548 7 is_stmt 1 view .LVU502
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1776              		.loc 1 1548 25 is_stmt 0 view .LVU503
 1777 009c EC62     		str	r4, [r5, #44]
 1778 009e DAE7     		b	.L122
 1779              	.LVL135:
 1780              	.L132:
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1781              		.loc 1 1584 6 is_stmt 1 view .LVU504
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1782              		.loc 1 1584 10 is_stmt 0 view .LVU505
 1783 00a0 2C1D     		adds	r4, r5, #4
 1784 00a2 2046     		mov	r0, r4
 1785 00a4 FFF7FEFF 		bl	uxListRemove
 1786              	.LVL136:
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1787              		.loc 1 1584 8 view .LVU506
 1788 00a8 30B9     		cbnz	r0, .L125
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1789              		.loc 1 1589 7 is_stmt 1 view .LVU507
 1790 00aa 0122     		movs	r2, #1
 1791 00ac B240     		lsls	r2, r2, r6
 1792 00ae 0C49     		ldr	r1, .L133+8
 1793 00b0 0B68     		ldr	r3, [r1]
 1794 00b2 23EA0203 		bic	r3, r3, r2
 1795 00b6 0B60     		str	r3, [r1]
 1796              	.L125:
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1797              		.loc 1 1593 31 view .LVU508
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1798              		.loc 1 1595 6 view .LVU509
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1799              		.loc 1 1595 6 view .LVU510
 1800 00b8 E86A     		ldr	r0, [r5, #44]
 1801 00ba 0123     		movs	r3, #1
 1802 00bc 8340     		lsls	r3, r3, r0
 1803 00be 084A     		ldr	r2, .L133+8
 1804 00c0 1168     		ldr	r1, [r2]
 1805 00c2 0B43     		orrs	r3, r3, r1
 1806 00c4 1360     		str	r3, [r2]
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1807              		.loc 1 1595 6 view .LVU511
 1808 00c6 00EB8000 		add	r0, r0, r0, lsl #2
 1809 00ca 2146     		mov	r1, r4
 1810 00cc 034B     		ldr	r3, .L133+4
 1811 00ce 03EB8000 		add	r0, r3, r0, lsl #2
 1812 00d2 FFF7FEFF 		bl	vListInsertEnd
 1813              	.LVL137:
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1814              		.loc 1 1595 36 view .LVU512
 1815 00d6 CDE7     		b	.L124
ARM GAS  /tmp/ccGppmC5.s 			page 132


 1816              	.L134:
 1817              		.align	2
 1818              	.L133:
 1819 00d8 00000000 		.word	pxCurrentTCB
 1820 00dc 00000000 		.word	pxReadyTasksLists
 1821 00e0 00000000 		.word	uxTopReadyPriority
 1822              		.cfi_endproc
 1823              	.LFE13:
 1825              		.section	.text.vTaskResume,"ax",%progbits
 1826              		.align	1
 1827              		.global	vTaskResume
 1828              		.syntax unified
 1829              		.thumb
 1830              		.thumb_func
 1832              	vTaskResume:
 1833              	.LVL138:
 1834              	.LFB16:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1835              		.loc 1 1772 2 view -0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 0
 1838              		@ frame_needed = 0, uses_anonymous_args = 0
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1839              		.loc 1 1772 2 is_stmt 0 view .LVU514
 1840 0000 38B5     		push	{r3, r4, r5, lr}
 1841              	.LCFI18:
 1842              		.cfi_def_cfa_offset 16
 1843              		.cfi_offset 3, -16
 1844              		.cfi_offset 4, -12
 1845              		.cfi_offset 5, -8
 1846              		.cfi_offset 14, -4
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1847              		.loc 1 1773 2 is_stmt 1 view .LVU515
 1848              	.LVL139:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1849              		.loc 1 1776 3 view .LVU516
 1850 0002 68B1     		cbz	r0, .L141
 1851 0004 0446     		mov	r4, r0
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1852              		.loc 1 1776 32 discriminator 1 view .LVU517
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1853              		.loc 1 1780 3 discriminator 1 view .LVU518
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1854              		.loc 1 1780 36 is_stmt 0 discriminator 1 view .LVU519
 1855 0006 1D4B     		ldr	r3, .L143
 1856 0008 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1857              		.loc 1 1780 25 discriminator 1 view .LVU520
 1858 000a 8342     		cmp	r3, r0
 1859 000c 07D0     		beq	.L135
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1860              		.loc 1 1782 4 is_stmt 1 view .LVU521
 1861 000e FFF7FEFF 		bl	vPortEnterCritical
 1862              	.LVL140:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1863              		.loc 1 1784 5 view .LVU522
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccGppmC5.s 			page 133


 1864              		.loc 1 1784 9 is_stmt 0 view .LVU523
 1865 0012 2046     		mov	r0, r4
 1866 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1867              	.LVL141:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1868              		.loc 1 1784 7 view .LVU524
 1869 0018 58B9     		cbnz	r0, .L142
 1870              	.L139:
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1871              		.loc 1 1808 30 is_stmt 1 view .LVU525
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1872              		.loc 1 1811 4 view .LVU526
 1873 001a FFF7FEFF 		bl	vPortExitCritical
 1874              	.LVL142:
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1875              		.loc 1 1815 28 view .LVU527
 1876              	.L135:
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1877              		.loc 1 1817 2 is_stmt 0 view .LVU528
 1878 001e 38BD     		pop	{r3, r4, r5, pc}
 1879              	.LVL143:
 1880              	.L141:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1881              		.loc 1 1776 3 is_stmt 1 view .LVU529
 1882              	.LBB129:
 1883              	.LBI129:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 1884              		.loc 2 191 30 view .LVU530
 1885              	.LBB130:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 1886              		.loc 2 193 1 view .LVU531
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1887              		.loc 2 195 2 view .LVU532
 1888              		.syntax unified
 1889              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1890 0020 4FF05003 			mov r3, #80												
 1891 0024 83F31188 		msr basepri, r3											
 1892 0028 BFF36F8F 		isb														
 1893 002c BFF34F8F 		dsb														
 1894              	
 1895              	@ 0 "" 2
 1896              	.LVL144:
 1897              		.thumb
 1898              		.syntax unified
 1899              	.L137:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1900              		.loc 2 195 2 is_stmt 0 view .LVU533
 1901              	.LBE130:
 1902              	.LBE129:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1903              		.loc 1 1776 3 is_stmt 1 discriminator 1 view .LVU534
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1904              		.loc 1 1776 3 discriminator 1 view .LVU535
 1905 0030 FEE7     		b	.L137
 1906              	.LVL145:
 1907              	.L142:
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 134


 1908              		.loc 1 1786 31 view .LVU536
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1909              		.loc 1 1790 6 view .LVU537
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1910              		.loc 1 1790 15 is_stmt 0 view .LVU538
 1911 0032 251D     		adds	r5, r4, #4
 1912 0034 2846     		mov	r0, r5
 1913 0036 FFF7FEFF 		bl	uxListRemove
 1914              	.LVL146:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1915              		.loc 1 1791 6 is_stmt 1 view .LVU539
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1916              		.loc 1 1791 6 view .LVU540
 1917 003a E06A     		ldr	r0, [r4, #44]
 1918 003c 0123     		movs	r3, #1
 1919 003e 8340     		lsls	r3, r3, r0
 1920 0040 0F4A     		ldr	r2, .L143+4
 1921 0042 1168     		ldr	r1, [r2]
 1922 0044 0B43     		orrs	r3, r3, r1
 1923 0046 1360     		str	r3, [r2]
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1924              		.loc 1 1791 6 view .LVU541
 1925 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1926 004c 2946     		mov	r1, r5
 1927 004e 0D4B     		ldr	r3, .L143+8
 1928 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1929 0054 FFF7FEFF 		bl	vListInsertEnd
 1930              	.LVL147:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1931              		.loc 1 1791 36 view .LVU542
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1932              		.loc 1 1794 6 view .LVU543
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1933              		.loc 1 1794 15 is_stmt 0 view .LVU544
 1934 0058 E26A     		ldr	r2, [r4, #44]
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1935              		.loc 1 1794 43 view .LVU545
 1936 005a 084B     		ldr	r3, .L143
 1937 005c 1B68     		ldr	r3, [r3]
 1938 005e DB6A     		ldr	r3, [r3, #44]
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1939              		.loc 1 1794 8 view .LVU546
 1940 0060 9A42     		cmp	r2, r3
 1941 0062 DAD3     		bcc	.L139
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1942              		.loc 1 1799 7 is_stmt 1 view .LVU547
 1943 0064 4FF0E023 		mov	r3, #-536813568
 1944 0068 4FF08052 		mov	r2, #268435456
 1945 006c C3F8042D 		str	r2, [r3, #3332]
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1946              		.loc 1 1799 7 view .LVU548
 1947              		.syntax unified
 1948              	@ 1799 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1949 0070 BFF34F8F 		dsb
 1950              	@ 0 "" 2
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1951              		.loc 1 1799 7 view .LVU549
ARM GAS  /tmp/ccGppmC5.s 			page 135


 1952              	@ 1799 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1953 0074 BFF36F8F 		isb
 1954              	@ 0 "" 2
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1955              		.loc 1 1799 38 view .LVU550
 1956              		.thumb
 1957              		.syntax unified
 1958 0078 CFE7     		b	.L139
 1959              	.L144:
 1960 007a 00BF     		.align	2
 1961              	.L143:
 1962 007c 00000000 		.word	pxCurrentTCB
 1963 0080 00000000 		.word	uxTopReadyPriority
 1964 0084 00000000 		.word	pxReadyTasksLists
 1965              		.cfi_endproc
 1966              	.LFE16:
 1968              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1969              		.align	1
 1970              		.global	xTaskResumeFromISR
 1971              		.syntax unified
 1972              		.thumb
 1973              		.thumb_func
 1975              	xTaskResumeFromISR:
 1976              	.LVL148:
 1977              	.LFB17:
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1978              		.loc 1 1826 2 view -0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 0
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1982              		.loc 1 1826 2 is_stmt 0 view .LVU552
 1983 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1984              	.LCFI19:
 1985              		.cfi_def_cfa_offset 24
 1986              		.cfi_offset 3, -24
 1987              		.cfi_offset 4, -20
 1988              		.cfi_offset 5, -16
 1989              		.cfi_offset 6, -12
 1990              		.cfi_offset 7, -8
 1991              		.cfi_offset 14, -4
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1992              		.loc 1 1827 2 is_stmt 1 view .LVU553
 1993              	.LVL149:
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1994              		.loc 1 1828 2 view .LVU554
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1995              		.loc 1 1829 2 view .LVU555
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1996              		.loc 1 1831 3 view .LVU556
 1997 0002 90B3     		cbz	r0, .L153
 1998 0004 0546     		mov	r5, r0
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1999              		.loc 1 1831 32 discriminator 2 view .LVU557
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2000              		.loc 1 1849 3 discriminator 2 view .LVU558
 2001 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
ARM GAS  /tmp/ccGppmC5.s 			page 136


 2002              	.LVL150:
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2003              		.loc 1 1851 3 discriminator 2 view .LVU559
 2004              	.LBB131:
 2005              	.LBI131:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2006              		.loc 2 207 34 discriminator 2 view .LVU560
 2007              	.LBB132:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2008              		.loc 2 209 1 discriminator 2 view .LVU561
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2009              		.loc 2 211 2 discriminator 2 view .LVU562
 2010              		.syntax unified
 2011              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2012 000a EFF31184 			mrs r4, basepri											
 2013 000e 4FF05003 		mov r3, #80												
 2014 0012 83F31188 		msr basepri, r3											
 2015 0016 BFF36F8F 		isb														
 2016 001a BFF34F8F 		dsb														
 2017              	
 2018              	@ 0 "" 2
 2019              	.LVL151:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 2020              		.loc 2 223 2 discriminator 2 view .LVU563
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 2021              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU564
 2022              		.thumb
 2023              		.syntax unified
 2024              	.LBE132:
 2025              	.LBE131:
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2026              		.loc 1 1853 4 is_stmt 1 discriminator 2 view .LVU565
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2027              		.loc 1 1853 8 is_stmt 0 discriminator 2 view .LVU566
 2028 001e 2846     		mov	r0, r5
 2029 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2030              	.LVL152:
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2031              		.loc 1 1853 6 discriminator 2 view .LVU567
 2032 0024 0646     		mov	r6, r0
 2033 0026 E0B1     		cbz	r0, .L148
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2034              		.loc 1 1855 39 is_stmt 1 view .LVU568
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2035              		.loc 1 1858 5 view .LVU569
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2036              		.loc 1 1858 30 is_stmt 0 view .LVU570
 2037 0028 194B     		ldr	r3, .L154
 2038 002a 1B68     		ldr	r3, [r3]
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2039              		.loc 1 1858 7 view .LVU571
 2040 002c 43BB     		cbnz	r3, .L149
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2041              		.loc 1 1862 6 is_stmt 1 view .LVU572
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2042              		.loc 1 1862 15 is_stmt 0 view .LVU573
 2043 002e EA6A     		ldr	r2, [r5, #44]
ARM GAS  /tmp/ccGppmC5.s 			page 137


1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2044              		.loc 1 1862 43 view .LVU574
 2045 0030 184B     		ldr	r3, .L154+4
 2046 0032 1B68     		ldr	r3, [r3]
 2047 0034 DB6A     		ldr	r3, [r3, #44]
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2048              		.loc 1 1862 8 view .LVU575
 2049 0036 9A42     		cmp	r2, r3
 2050 0038 20D2     		bcs	.L151
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2051              		.loc 1 1827 13 view .LVU576
 2052 003a 0026     		movs	r6, #0
 2053              	.L150:
 2054              	.LVL153:
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2055              		.loc 1 1868 31 is_stmt 1 view .LVU577
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2056              		.loc 1 1871 6 view .LVU578
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2057              		.loc 1 1871 15 is_stmt 0 view .LVU579
 2058 003c 2F1D     		adds	r7, r5, #4
 2059 003e 3846     		mov	r0, r7
 2060 0040 FFF7FEFF 		bl	uxListRemove
 2061              	.LVL154:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2062              		.loc 1 1872 6 is_stmt 1 view .LVU580
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2063              		.loc 1 1872 6 view .LVU581
 2064 0044 E86A     		ldr	r0, [r5, #44]
 2065 0046 0123     		movs	r3, #1
 2066 0048 8340     		lsls	r3, r3, r0
 2067 004a 134A     		ldr	r2, .L154+8
 2068 004c 1168     		ldr	r1, [r2]
 2069 004e 0B43     		orrs	r3, r3, r1
 2070 0050 1360     		str	r3, [r2]
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2071              		.loc 1 1872 6 view .LVU582
 2072 0052 00EB8000 		add	r0, r0, r0, lsl #2
 2073 0056 3946     		mov	r1, r7
 2074 0058 104B     		ldr	r3, .L154+12
 2075 005a 03EB8000 		add	r0, r3, r0, lsl #2
 2076 005e FFF7FEFF 		bl	vListInsertEnd
 2077              	.LVL155:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2078              		.loc 1 1872 36 view .LVU583
 2079              	.L148:
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2080              		.loc 1 1884 29 view .LVU584
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2081              		.loc 1 1887 3 view .LVU585
 2082              	.LBB133:
 2083              	.LBI133:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2084              		.loc 2 227 30 view .LVU586
 2085              	.LBB134:
 2086              		.loc 2 229 2 view .LVU587
 2087              		.syntax unified
ARM GAS  /tmp/ccGppmC5.s 			page 138


 2088              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2089 0062 84F31188 			msr basepri, r4	
 2090              	@ 0 "" 2
 2091              		.thumb
 2092              		.syntax unified
 2093              	.LBE134:
 2094              	.LBE133:
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2095              		.loc 1 1889 3 view .LVU588
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2096              		.loc 1 1890 2 is_stmt 0 view .LVU589
 2097 0066 3046     		mov	r0, r6
 2098 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2099              	.LVL156:
 2100              	.L153:
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2101              		.loc 1 1831 3 is_stmt 1 view .LVU590
 2102              	.LBB135:
 2103              	.LBI135:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2104              		.loc 2 191 30 view .LVU591
 2105              	.LBB136:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2106              		.loc 2 193 1 view .LVU592
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2107              		.loc 2 195 2 view .LVU593
 2108              		.syntax unified
 2109              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2110 006a 4FF05003 			mov r3, #80												
 2111 006e 83F31188 		msr basepri, r3											
 2112 0072 BFF36F8F 		isb														
 2113 0076 BFF34F8F 		dsb														
 2114              	
 2115              	@ 0 "" 2
 2116              	.LVL157:
 2117              		.thumb
 2118              		.syntax unified
 2119              	.L147:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2120              		.loc 2 195 2 is_stmt 0 view .LVU594
 2121              	.LBE136:
 2122              	.LBE135:
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2123              		.loc 1 1831 3 is_stmt 1 discriminator 1 view .LVU595
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2124              		.loc 1 1831 3 discriminator 1 view .LVU596
 2125 007a FEE7     		b	.L147
 2126              	.LVL158:
 2127              	.L151:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2128              		.loc 1 1864 22 is_stmt 0 view .LVU597
 2129 007c 0126     		movs	r6, #1
 2130 007e DDE7     		b	.L150
 2131              	.L149:
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2132              		.loc 1 1879 6 is_stmt 1 view .LVU598
 2133 0080 05F11801 		add	r1, r5, #24
ARM GAS  /tmp/ccGppmC5.s 			page 139


 2134 0084 0648     		ldr	r0, .L154+16
 2135 0086 FFF7FEFF 		bl	vListInsertEnd
 2136              	.LVL159:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 2137              		.loc 1 1827 13 is_stmt 0 view .LVU599
 2138 008a 0026     		movs	r6, #0
 2139 008c E9E7     		b	.L148
 2140              	.L155:
 2141 008e 00BF     		.align	2
 2142              	.L154:
 2143 0090 00000000 		.word	uxSchedulerSuspended
 2144 0094 00000000 		.word	pxCurrentTCB
 2145 0098 00000000 		.word	uxTopReadyPriority
 2146 009c 00000000 		.word	pxReadyTasksLists
 2147 00a0 00000000 		.word	xPendingReadyList
 2148              		.cfi_endproc
 2149              	.LFE17:
 2151              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2152              		.align	2
 2153              	.LC0:
 2154 0000 49444C45 		.ascii	"IDLE\000"
 2154      00
 2155              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2156              		.align	1
 2157              		.global	vTaskStartScheduler
 2158              		.syntax unified
 2159              		.thumb
 2160              		.thumb_func
 2162              	vTaskStartScheduler:
 2163              	.LFB18:
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2164              		.loc 1 1896 1 is_stmt 1 view -0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 16
 2167              		@ frame_needed = 0, uses_anonymous_args = 0
 2168 0000 10B5     		push	{r4, lr}
 2169              	.LCFI20:
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 4, -8
 2172              		.cfi_offset 14, -4
 2173 0002 88B0     		sub	sp, sp, #32
 2174              	.LCFI21:
 2175              		.cfi_def_cfa_offset 40
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2176              		.loc 1 1897 1 view .LVU601
 2177              	.LBB137:
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2178              		.loc 1 1902 3 view .LVU602
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2179              		.loc 1 1902 17 is_stmt 0 view .LVU603
 2180 0004 0024     		movs	r4, #0
 2181 0006 0594     		str	r4, [sp, #20]
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2182              		.loc 1 1903 3 is_stmt 1 view .LVU604
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2183              		.loc 1 1903 16 is_stmt 0 view .LVU605
 2184 0008 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/ccGppmC5.s 			page 140


1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2185              		.loc 1 1904 3 is_stmt 1 view .LVU606
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2186              		.loc 1 1908 3 view .LVU607
 2187 000a 07AA     		add	r2, sp, #28
 2188 000c 06A9     		add	r1, sp, #24
 2189 000e 05A8     		add	r0, sp, #20
 2190 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2191              	.LVL160:
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2192              		.loc 1 1909 3 view .LVU608
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2193              		.loc 1 1909 21 is_stmt 0 view .LVU609
 2194 0014 059B     		ldr	r3, [sp, #20]
 2195 0016 0293     		str	r3, [sp, #8]
 2196 0018 069B     		ldr	r3, [sp, #24]
 2197 001a 0193     		str	r3, [sp, #4]
 2198 001c 0094     		str	r4, [sp]
 2199 001e 2346     		mov	r3, r4
 2200 0020 079A     		ldr	r2, [sp, #28]
 2201 0022 0E49     		ldr	r1, .L160
 2202 0024 0E48     		ldr	r0, .L160+4
 2203 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2204              	.LVL161:
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2205              		.loc 1 1909 19 view .LVU610
 2206 002a 0E4B     		ldr	r3, .L160+8
 2207 002c 1860     		str	r0, [r3]
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2208              		.loc 1 1917 3 is_stmt 1 view .LVU611
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2209              		.loc 1 1917 5 is_stmt 0 view .LVU612
 2210 002e 90B1     		cbz	r0, .L156
 2211              	.LVL162:
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2212              		.loc 1 1917 5 view .LVU613
 2213              	.LBE137:
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2214              		.loc 1 1951 2 is_stmt 1 view .LVU614
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2215              		.loc 1 1967 3 view .LVU615
 2216              	.LBB138:
 2217              	.LBI138:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2218              		.loc 2 191 30 view .LVU616
 2219              	.LBB139:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2220              		.loc 2 193 1 view .LVU617
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2221              		.loc 2 195 2 view .LVU618
 2222              		.syntax unified
 2223              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2224 0030 4FF05003 			mov r3, #80												
 2225 0034 83F31188 		msr basepri, r3											
 2226 0038 BFF36F8F 		isb														
 2227 003c BFF34F8F 		dsb														
 2228              	
ARM GAS  /tmp/ccGppmC5.s 			page 141


 2229              	@ 0 "" 2
 2230              		.thumb
 2231              		.syntax unified
 2232              	.LBE139:
 2233              	.LBE138:
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2234              		.loc 1 1977 3 view .LVU619
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2235              		.loc 1 1977 24 is_stmt 0 view .LVU620
 2236 0040 094B     		ldr	r3, .L160+12
 2237 0042 4FF0FF32 		mov	r2, #-1
 2238 0046 1A60     		str	r2, [r3]
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 2239              		.loc 1 1978 3 is_stmt 1 view .LVU621
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 2240              		.loc 1 1978 21 is_stmt 0 view .LVU622
 2241 0048 084B     		ldr	r3, .L160+16
 2242 004a 0122     		movs	r2, #1
 2243 004c 1A60     		str	r2, [r3]
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2244              		.loc 1 1979 3 is_stmt 1 view .LVU623
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2245              		.loc 1 1979 14 is_stmt 0 view .LVU624
 2246 004e 084B     		ldr	r3, .L160+20
 2247 0050 1C60     		str	r4, [r3]
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2248              		.loc 1 1987 43 is_stmt 1 view .LVU625
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2249              		.loc 1 1991 3 view .LVU626
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2250              		.loc 1 1991 7 is_stmt 0 view .LVU627
 2251 0052 FFF7FEFF 		bl	xPortStartScheduler
 2252              	.LVL163:
 2253              	.L156:
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2254              		.loc 1 2012 1 view .LVU628
 2255 0056 08B0     		add	sp, sp, #32
 2256              	.LCFI22:
 2257              		.cfi_def_cfa_offset 8
 2258              		@ sp needed
 2259 0058 10BD     		pop	{r4, pc}
 2260              	.L161:
 2261 005a 00BF     		.align	2
 2262              	.L160:
 2263 005c 00000000 		.word	.LC0
 2264 0060 00000000 		.word	prvIdleTask
 2265 0064 00000000 		.word	xIdleTaskHandle
 2266 0068 00000000 		.word	xNextTaskUnblockTime
 2267 006c 00000000 		.word	xSchedulerRunning
 2268 0070 00000000 		.word	xTickCount
 2269              		.cfi_endproc
 2270              	.LFE18:
 2272              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2273              		.align	1
 2274              		.global	vTaskEndScheduler
 2275              		.syntax unified
 2276              		.thumb
ARM GAS  /tmp/ccGppmC5.s 			page 142


 2277              		.thumb_func
 2279              	vTaskEndScheduler:
 2280              	.LFB19:
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2281              		.loc 1 2016 1 is_stmt 1 view -0
 2282              		.cfi_startproc
 2283              		@ args = 0, pretend = 0, frame = 0
 2284              		@ frame_needed = 0, uses_anonymous_args = 0
 2285 0000 08B5     		push	{r3, lr}
 2286              	.LCFI23:
 2287              		.cfi_def_cfa_offset 8
 2288              		.cfi_offset 3, -8
 2289              		.cfi_offset 14, -4
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2290              		.loc 1 2020 2 view .LVU630
 2291              	.LBB140:
 2292              	.LBI140:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2293              		.loc 2 191 30 view .LVU631
 2294              	.LBB141:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2295              		.loc 2 193 1 view .LVU632
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2296              		.loc 2 195 2 view .LVU633
 2297              		.syntax unified
 2298              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2299 0002 4FF05003 			mov r3, #80												
 2300 0006 83F31188 		msr basepri, r3											
 2301 000a BFF36F8F 		isb														
 2302 000e BFF34F8F 		dsb														
 2303              	
 2304              	@ 0 "" 2
 2305              		.thumb
 2306              		.syntax unified
 2307              	.LBE141:
 2308              	.LBE140:
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2309              		.loc 1 2021 2 view .LVU634
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2310              		.loc 1 2021 20 is_stmt 0 view .LVU635
 2311 0012 034B     		ldr	r3, .L164
 2312 0014 0022     		movs	r2, #0
 2313 0016 1A60     		str	r2, [r3]
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2314              		.loc 1 2022 2 is_stmt 1 view .LVU636
 2315 0018 FFF7FEFF 		bl	vPortEndScheduler
 2316              	.LVL164:
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2317              		.loc 1 2023 1 is_stmt 0 view .LVU637
 2318 001c 08BD     		pop	{r3, pc}
 2319              	.L165:
 2320 001e 00BF     		.align	2
 2321              	.L164:
 2322 0020 00000000 		.word	xSchedulerRunning
 2323              		.cfi_endproc
 2324              	.LFE19:
 2326              		.section	.text.vTaskSuspendAll,"ax",%progbits
ARM GAS  /tmp/ccGppmC5.s 			page 143


 2327              		.align	1
 2328              		.global	vTaskSuspendAll
 2329              		.syntax unified
 2330              		.thumb
 2331              		.thumb_func
 2333              	vTaskSuspendAll:
 2334              	.LFB20:
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2335              		.loc 1 2027 1 is_stmt 1 view -0
 2336              		.cfi_startproc
 2337              		@ args = 0, pretend = 0, frame = 0
 2338              		@ frame_needed = 0, uses_anonymous_args = 0
 2339              		@ link register save eliminated.
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2340              		.loc 1 2032 2 view .LVU639
 2341 0000 024A     		ldr	r2, .L167
 2342 0002 1368     		ldr	r3, [r2]
 2343 0004 0133     		adds	r3, r3, #1
 2344 0006 1360     		str	r3, [r2]
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2345              		.loc 1 2033 1 is_stmt 0 view .LVU640
 2346 0008 7047     		bx	lr
 2347              	.L168:
 2348 000a 00BF     		.align	2
 2349              	.L167:
 2350 000c 00000000 		.word	uxSchedulerSuspended
 2351              		.cfi_endproc
 2352              	.LFE20:
 2354              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2355              		.align	1
 2356              		.global	xTaskGetTickCount
 2357              		.syntax unified
 2358              		.thumb
 2359              		.thumb_func
 2361              	xTaskGetTickCount:
 2362              	.LFB22:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2363              		.loc 1 2210 1 is_stmt 1 view -0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367              		@ link register save eliminated.
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2368              		.loc 1 2211 1 view .LVU642
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2369              		.loc 1 2214 32 view .LVU643
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2370              		.loc 1 2216 3 view .LVU644
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2371              		.loc 1 2216 10 is_stmt 0 view .LVU645
 2372 0000 014B     		ldr	r3, .L170
 2373 0002 1868     		ldr	r0, [r3]
 2374              	.LVL165:
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2375              		.loc 1 2218 31 is_stmt 1 view .LVU646
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2376              		.loc 1 2220 2 view .LVU647
ARM GAS  /tmp/ccGppmC5.s 			page 144


2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2377              		.loc 1 2221 1 is_stmt 0 view .LVU648
 2378 0004 7047     		bx	lr
 2379              	.L171:
 2380 0006 00BF     		.align	2
 2381              	.L170:
 2382 0008 00000000 		.word	xTickCount
 2383              		.cfi_endproc
 2384              	.LFE22:
 2386              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2387              		.align	1
 2388              		.global	xTaskGetTickCountFromISR
 2389              		.syntax unified
 2390              		.thumb
 2391              		.thumb_func
 2393              	xTaskGetTickCountFromISR:
 2394              	.LFB23:
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2395              		.loc 1 2225 1 is_stmt 1 view -0
 2396              		.cfi_startproc
 2397              		@ args = 0, pretend = 0, frame = 0
 2398              		@ frame_needed = 0, uses_anonymous_args = 0
 2399 0000 08B5     		push	{r3, lr}
 2400              	.LCFI24:
 2401              		.cfi_def_cfa_offset 8
 2402              		.cfi_offset 3, -8
 2403              		.cfi_offset 14, -4
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2404              		.loc 1 2226 1 view .LVU650
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2405              		.loc 1 2227 1 view .LVU651
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2406              		.loc 1 2243 2 view .LVU652
 2407 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2408              	.LVL166:
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2409              		.loc 1 2245 2 view .LVU653
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2410              		.loc 1 2247 3 view .LVU654
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2411              		.loc 1 2247 11 is_stmt 0 view .LVU655
 2412 0006 014B     		ldr	r3, .L174
 2413 0008 1868     		ldr	r0, [r3]
 2414              	.LVL167:
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2415              		.loc 1 2249 2 is_stmt 1 view .LVU656
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2416              		.loc 1 2251 2 view .LVU657
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2417              		.loc 1 2252 1 is_stmt 0 view .LVU658
 2418 000a 08BD     		pop	{r3, pc}
 2419              	.L175:
 2420              		.align	2
 2421              	.L174:
 2422 000c 00000000 		.word	xTickCount
 2423              		.cfi_endproc
 2424              	.LFE23:
ARM GAS  /tmp/ccGppmC5.s 			page 145


 2426              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2427              		.align	1
 2428              		.global	uxTaskGetNumberOfTasks
 2429              		.syntax unified
 2430              		.thumb
 2431              		.thumb_func
 2433              	uxTaskGetNumberOfTasks:
 2434              	.LFB24:
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2435              		.loc 1 2256 1 is_stmt 1 view -0
 2436              		.cfi_startproc
 2437              		@ args = 0, pretend = 0, frame = 0
 2438              		@ frame_needed = 0, uses_anonymous_args = 0
 2439              		@ link register save eliminated.
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2440              		.loc 1 2259 2 view .LVU660
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2441              		.loc 1 2259 9 is_stmt 0 view .LVU661
 2442 0000 014B     		ldr	r3, .L177
 2443 0002 1868     		ldr	r0, [r3]
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2444              		.loc 1 2260 1 view .LVU662
 2445 0004 7047     		bx	lr
 2446              	.L178:
 2447 0006 00BF     		.align	2
 2448              	.L177:
 2449 0008 00000000 		.word	uxCurrentNumberOfTasks
 2450              		.cfi_endproc
 2451              	.LFE24:
 2453              		.section	.text.pcTaskGetName,"ax",%progbits
 2454              		.align	1
 2455              		.global	pcTaskGetName
 2456              		.syntax unified
 2457              		.thumb
 2458              		.thumb_func
 2460              	pcTaskGetName:
 2461              	.LVL168:
 2462              	.LFB25:
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2463              		.loc 1 2264 1 is_stmt 1 view -0
 2464              		.cfi_startproc
 2465              		@ args = 0, pretend = 0, frame = 0
 2466              		@ frame_needed = 0, uses_anonymous_args = 0
 2467              		@ link register save eliminated.
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2468              		.loc 1 2265 1 view .LVU664
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2469              		.loc 1 2269 2 view .LVU665
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2470              		.loc 1 2269 10 is_stmt 0 view .LVU666
 2471 0000 0346     		mov	r3, r0
 2472 0002 10B1     		cbz	r0, .L182
 2473              	.LVL169:
 2474              	.L180:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2475              		.loc 1 2270 23 is_stmt 1 discriminator 2 view .LVU667
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/ccGppmC5.s 			page 146


 2476              		.loc 1 2271 2 discriminator 2 view .LVU668
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2477              		.loc 1 2272 1 is_stmt 0 discriminator 2 view .LVU669
 2478 0004 03F13400 		add	r0, r3, #52
 2479 0008 7047     		bx	lr
 2480              	.LVL170:
 2481              	.L182:
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2482              		.loc 1 2269 10 discriminator 1 view .LVU670
 2483 000a 064B     		ldr	r3, .L183
 2484 000c 1B68     		ldr	r3, [r3]
 2485              	.LVL171:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2486              		.loc 1 2270 2 is_stmt 1 discriminator 1 view .LVU671
 2487 000e 002B     		cmp	r3, #0
 2488 0010 F8D1     		bne	.L180
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2489              		.loc 1 2270 2 view .LVU672
 2490              	.LBB142:
 2491              	.LBI142:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2492              		.loc 2 191 30 view .LVU673
 2493              	.LBB143:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2494              		.loc 2 193 1 view .LVU674
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2495              		.loc 2 195 2 view .LVU675
 2496              		.syntax unified
 2497              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2498 0012 4FF05003 			mov r3, #80												
 2499 0016 83F31188 		msr basepri, r3											
 2500 001a BFF36F8F 		isb														
 2501 001e BFF34F8F 		dsb														
 2502              	
 2503              	@ 0 "" 2
 2504              	.LVL172:
 2505              		.thumb
 2506              		.syntax unified
 2507              	.L181:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2508              		.loc 2 195 2 is_stmt 0 view .LVU676
 2509              	.LBE143:
 2510              	.LBE142:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2511              		.loc 1 2270 2 is_stmt 1 discriminator 1 view .LVU677
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2512              		.loc 1 2270 2 discriminator 1 view .LVU678
 2513 0022 FEE7     		b	.L181
 2514              	.L184:
 2515              		.align	2
 2516              	.L183:
 2517 0024 00000000 		.word	pxCurrentTCB
 2518              		.cfi_endproc
 2519              	.LFE25:
 2521              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2522              		.align	1
 2523              		.global	xTaskIncrementTick
ARM GAS  /tmp/ccGppmC5.s 			page 147


 2524              		.syntax unified
 2525              		.thumb
 2526              		.thumb_func
 2528              	xTaskIncrementTick:
 2529              	.LFB26:
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2530              		.loc 1 2584 1 view -0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 0
 2533              		@ frame_needed = 0, uses_anonymous_args = 0
 2534 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2535              	.LCFI25:
 2536              		.cfi_def_cfa_offset 24
 2537              		.cfi_offset 3, -24
 2538              		.cfi_offset 4, -20
 2539              		.cfi_offset 5, -16
 2540              		.cfi_offset 6, -12
 2541              		.cfi_offset 7, -8
 2542              		.cfi_offset 14, -4
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2543              		.loc 1 2585 1 view .LVU680
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2544              		.loc 1 2586 1 view .LVU681
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2545              		.loc 1 2587 1 view .LVU682
 2546              	.LVL173:
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2547              		.loc 1 2592 40 view .LVU683
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2548              		.loc 1 2593 2 view .LVU684
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2549              		.loc 1 2593 27 is_stmt 0 view .LVU685
 2550 0002 3A4B     		ldr	r3, .L206
 2551 0004 1B68     		ldr	r3, [r3]
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2552              		.loc 1 2593 4 view .LVU686
 2553 0006 002B     		cmp	r3, #0
 2554 0008 64D1     		bne	.L186
 2555              	.LBB144:
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2556              		.loc 1 2597 3 is_stmt 1 view .LVU687
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2557              		.loc 1 2597 49 is_stmt 0 view .LVU688
 2558 000a 394B     		ldr	r3, .L206+4
 2559 000c 1D68     		ldr	r5, [r3]
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2560              		.loc 1 2597 20 view .LVU689
 2561 000e 0135     		adds	r5, r5, #1
 2562              	.LVL174:
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2563              		.loc 1 2601 3 is_stmt 1 view .LVU690
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2564              		.loc 1 2601 14 is_stmt 0 view .LVU691
 2565 0010 1D60     		str	r5, [r3]
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2566              		.loc 1 2603 3 is_stmt 1 view .LVU692
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccGppmC5.s 			page 148


 2567              		.loc 1 2603 5 is_stmt 0 view .LVU693
 2568 0012 C5B9     		cbnz	r5, .L187
 2569              	.LBB145:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2570              		.loc 1 2605 4 is_stmt 1 view .LVU694
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2571              		.loc 1 2605 4 view .LVU695
 2572 0014 374B     		ldr	r3, .L206+8
 2573 0016 1B68     		ldr	r3, [r3]
 2574 0018 1B68     		ldr	r3, [r3]
 2575 001a 43B1     		cbz	r3, .L188
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2576              		.loc 1 2605 4 view .LVU696
 2577              	.LBB146:
 2578              	.LBI146:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2579              		.loc 2 191 30 view .LVU697
 2580              	.LBB147:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2581              		.loc 2 193 1 view .LVU698
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2582              		.loc 2 195 2 view .LVU699
 2583              		.syntax unified
 2584              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2585 001c 4FF05003 			mov r3, #80												
 2586 0020 83F31188 		msr basepri, r3											
 2587 0024 BFF36F8F 		isb														
 2588 0028 BFF34F8F 		dsb														
 2589              	
 2590              	@ 0 "" 2
 2591              	.LVL175:
 2592              		.thumb
 2593              		.syntax unified
 2594              	.L189:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2595              		.loc 2 195 2 is_stmt 0 view .LVU700
 2596              	.LBE147:
 2597              	.LBE146:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2598              		.loc 1 2605 4 is_stmt 1 discriminator 1 view .LVU701
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2599              		.loc 1 2605 4 discriminator 1 view .LVU702
 2600 002c FEE7     		b	.L189
 2601              	.L188:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2602              		.loc 1 2605 4 discriminator 2 view .LVU703
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2603              		.loc 1 2605 4 discriminator 2 view .LVU704
 2604 002e 314A     		ldr	r2, .L206+8
 2605 0030 1168     		ldr	r1, [r2]
 2606              	.LVL176:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2607              		.loc 1 2605 4 discriminator 2 view .LVU705
 2608 0032 314B     		ldr	r3, .L206+12
 2609 0034 1868     		ldr	r0, [r3]
 2610 0036 1060     		str	r0, [r2]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccGppmC5.s 			page 149


 2611              		.loc 1 2605 4 discriminator 2 view .LVU706
 2612 0038 1960     		str	r1, [r3]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2613              		.loc 1 2605 4 discriminator 2 view .LVU707
 2614 003a 304A     		ldr	r2, .L206+16
 2615 003c 1368     		ldr	r3, [r2]
 2616 003e 0133     		adds	r3, r3, #1
 2617 0040 1360     		str	r3, [r2]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2618              		.loc 1 2605 4 discriminator 2 view .LVU708
 2619 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2620              	.LVL177:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2621              		.loc 1 2605 4 is_stmt 0 discriminator 2 view .LVU709
 2622              	.LBE145:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2623              		.loc 1 2605 30 is_stmt 1 discriminator 2 view .LVU710
 2624              	.L187:
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2625              		.loc 1 2609 28 view .LVU711
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2626              		.loc 1 2616 3 view .LVU712
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2627              		.loc 1 2616 23 is_stmt 0 view .LVU713
 2628 0046 2E4B     		ldr	r3, .L206+20
 2629 0048 1B68     		ldr	r3, [r3]
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2630              		.loc 1 2616 5 view .LVU714
 2631 004a AB42     		cmp	r3, r5
 2632 004c 38D9     		bls	.L199
 2633              	.LBE144:
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2634              		.loc 1 2587 12 view .LVU715
 2635 004e 0027     		movs	r7, #0
 2636              	.LVL178:
 2637              	.L191:
 2638              	.LBB148:
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2639              		.loc 1 2699 4 is_stmt 1 view .LVU716
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2640              		.loc 1 2699 8 is_stmt 0 view .LVU717
 2641 0050 2C4B     		ldr	r3, .L206+24
 2642 0052 1B68     		ldr	r3, [r3]
 2643 0054 DB6A     		ldr	r3, [r3, #44]
 2644 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2645 005a 9A00     		lsls	r2, r3, #2
 2646 005c 2A4B     		ldr	r3, .L206+28
 2647 005e 9B58     		ldr	r3, [r3, r2]
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2648              		.loc 1 2699 6 view .LVU718
 2649 0060 012B     		cmp	r3, #1
 2650 0062 3CD9     		bls	.L197
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2651              		.loc 1 2701 21 view .LVU719
 2652 0064 0127     		movs	r7, #1
 2653              	.LVL179:
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccGppmC5.s 			page 150


 2654              		.loc 1 2701 21 view .LVU720
 2655 0066 3AE0     		b	.L197
 2656              	.LVL180:
 2657              	.L200:
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2658              		.loc 1 2682 24 view .LVU721
 2659 0068 0127     		movs	r7, #1
 2660              	.LVL181:
 2661              	.L190:
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2662              		.loc 1 2618 4 is_stmt 1 view .LVU722
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2663              		.loc 1 2620 5 view .LVU723
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2664              		.loc 1 2620 9 is_stmt 0 view .LVU724
 2665 006a 224B     		ldr	r3, .L206+8
 2666 006c 1B68     		ldr	r3, [r3]
 2667 006e 1B68     		ldr	r3, [r3]
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2668              		.loc 1 2620 48 view .LVU725
 2669 0070 43B3     		cbz	r3, .L204
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2670              		.loc 1 2636 6 is_stmt 1 view .LVU726
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2671              		.loc 1 2636 26 is_stmt 0 view .LVU727
 2672 0072 204B     		ldr	r3, .L206+8
 2673 0074 1B68     		ldr	r3, [r3]
 2674 0076 DB68     		ldr	r3, [r3, #12]
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2675              		.loc 1 2636 12 view .LVU728
 2676 0078 DC68     		ldr	r4, [r3, #12]
 2677              	.LVL182:
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2678              		.loc 1 2637 6 is_stmt 1 view .LVU729
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2679              		.loc 1 2637 17 is_stmt 0 view .LVU730
 2680 007a 6368     		ldr	r3, [r4, #4]
 2681              	.LVL183:
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2682              		.loc 1 2639 6 is_stmt 1 view .LVU731
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2683              		.loc 1 2639 8 is_stmt 0 view .LVU732
 2684 007c 9D42     		cmp	r5, r3
 2685 007e 26D3     		bcc	.L205
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2686              		.loc 1 2651 31 is_stmt 1 view .LVU733
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2687              		.loc 1 2655 6 view .LVU734
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2688              		.loc 1 2655 15 is_stmt 0 view .LVU735
 2689 0080 261D     		adds	r6, r4, #4
 2690 0082 3046     		mov	r0, r6
 2691 0084 FFF7FEFF 		bl	uxListRemove
 2692              	.LVL184:
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2693              		.loc 1 2659 6 is_stmt 1 view .LVU736
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccGppmC5.s 			page 151


 2694              		.loc 1 2659 10 is_stmt 0 view .LVU737
 2695 0088 A36A     		ldr	r3, [r4, #40]
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2696              		.loc 1 2659 8 view .LVU738
 2697 008a 1BB1     		cbz	r3, .L194
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2698              		.loc 1 2661 7 is_stmt 1 view .LVU739
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2699              		.loc 1 2661 16 is_stmt 0 view .LVU740
 2700 008c 04F11800 		add	r0, r4, #24
 2701 0090 FFF7FEFF 		bl	uxListRemove
 2702              	.LVL185:
 2703              	.L194:
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2704              		.loc 1 2665 31 is_stmt 1 view .LVU741
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2705              		.loc 1 2670 6 view .LVU742
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2706              		.loc 1 2670 6 view .LVU743
 2707 0094 E36A     		ldr	r3, [r4, #44]
 2708 0096 0122     		movs	r2, #1
 2709 0098 9A40     		lsls	r2, r2, r3
 2710 009a 1C49     		ldr	r1, .L206+32
 2711 009c 0868     		ldr	r0, [r1]
 2712 009e 0243     		orrs	r2, r2, r0
 2713 00a0 0A60     		str	r2, [r1]
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2714              		.loc 1 2670 6 view .LVU744
 2715 00a2 03EB8303 		add	r3, r3, r3, lsl #2
 2716 00a6 9A00     		lsls	r2, r3, #2
 2717 00a8 3146     		mov	r1, r6
 2718 00aa 1748     		ldr	r0, .L206+28
 2719 00ac 1044     		add	r0, r0, r2
 2720 00ae FFF7FEFF 		bl	vListInsertEnd
 2721              	.LVL186:
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2722              		.loc 1 2670 36 view .LVU745
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2723              		.loc 1 2680 7 view .LVU746
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2724              		.loc 1 2680 16 is_stmt 0 view .LVU747
 2725 00b2 E26A     		ldr	r2, [r4, #44]
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2726              		.loc 1 2680 44 view .LVU748
 2727 00b4 134B     		ldr	r3, .L206+24
 2728 00b6 1B68     		ldr	r3, [r3]
 2729 00b8 DB6A     		ldr	r3, [r3, #44]
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2730              		.loc 1 2680 9 view .LVU749
 2731 00ba 9A42     		cmp	r2, r3
 2732 00bc D4D2     		bcs	.L200
 2733 00be D4E7     		b	.L190
 2734              	.LVL187:
 2735              	.L199:
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2736              		.loc 1 2680 9 view .LVU750
 2737              	.LBE148:
ARM GAS  /tmp/ccGppmC5.s 			page 152


2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2738              		.loc 1 2587 12 view .LVU751
 2739 00c0 0027     		movs	r7, #0
 2740 00c2 D2E7     		b	.L190
 2741              	.LVL188:
 2742              	.L204:
 2743              	.LBB149:
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2744              		.loc 1 2627 6 is_stmt 1 view .LVU752
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2745              		.loc 1 2627 27 is_stmt 0 view .LVU753
 2746 00c4 0E4B     		ldr	r3, .L206+20
 2747 00c6 4FF0FF32 		mov	r2, #-1
 2748 00ca 1A60     		str	r2, [r3]
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2749              		.loc 1 2628 6 is_stmt 1 view .LVU754
 2750 00cc C0E7     		b	.L191
 2751              	.LVL189:
 2752              	.L205:
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2753              		.loc 1 2646 7 view .LVU755
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2754              		.loc 1 2646 28 is_stmt 0 view .LVU756
 2755 00ce 0C4A     		ldr	r2, .L206+20
 2756 00d0 1360     		str	r3, [r2]
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2757              		.loc 1 2647 7 is_stmt 1 view .LVU757
 2758 00d2 BDE7     		b	.L191
 2759              	.LVL190:
 2760              	.L186:
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2761              		.loc 1 2647 7 is_stmt 0 view .LVU758
 2762              	.LBE149:
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2763              		.loc 1 2727 3 is_stmt 1 view .LVU759
 2764 00d4 0E4A     		ldr	r2, .L206+36
 2765 00d6 1368     		ldr	r3, [r2]
 2766 00d8 0133     		adds	r3, r3, #1
 2767 00da 1360     		str	r3, [r2]
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2768              		.loc 1 2587 12 is_stmt 0 view .LVU760
 2769 00dc 0027     		movs	r7, #0
 2770              	.LVL191:
 2771              	.L197:
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2772              		.loc 1 2740 3 is_stmt 1 view .LVU761
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2773              		.loc 1 2740 21 is_stmt 0 view .LVU762
 2774 00de 0D4B     		ldr	r3, .L206+40
 2775 00e0 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2776              		.loc 1 2740 5 view .LVU763
 2777 00e2 03B1     		cbz	r3, .L185
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2778              		.loc 1 2742 20 view .LVU764
 2779 00e4 0127     		movs	r7, #1
 2780              	.LVL192:
ARM GAS  /tmp/ccGppmC5.s 			page 153


2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2781              		.loc 1 2746 28 is_stmt 1 view .LVU765
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2782              		.loc 1 2751 2 view .LVU766
 2783              	.L185:
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2784              		.loc 1 2752 1 is_stmt 0 view .LVU767
 2785 00e6 3846     		mov	r0, r7
 2786 00e8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2787              	.L207:
 2788 00ea 00BF     		.align	2
 2789              	.L206:
 2790 00ec 00000000 		.word	uxSchedulerSuspended
 2791 00f0 00000000 		.word	xTickCount
 2792 00f4 00000000 		.word	pxDelayedTaskList
 2793 00f8 00000000 		.word	pxOverflowDelayedTaskList
 2794 00fc 00000000 		.word	xNumOfOverflows
 2795 0100 00000000 		.word	xNextTaskUnblockTime
 2796 0104 00000000 		.word	pxCurrentTCB
 2797 0108 00000000 		.word	pxReadyTasksLists
 2798 010c 00000000 		.word	uxTopReadyPriority
 2799 0110 00000000 		.word	uxPendedTicks
 2800 0114 00000000 		.word	xYieldPending
 2801              		.cfi_endproc
 2802              	.LFE26:
 2804              		.section	.text.xTaskResumeAll,"ax",%progbits
 2805              		.align	1
 2806              		.global	xTaskResumeAll
 2807              		.syntax unified
 2808              		.thumb
 2809              		.thumb_func
 2811              	xTaskResumeAll:
 2812              	.LFB21:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2813              		.loc 1 2100 1 is_stmt 1 view -0
 2814              		.cfi_startproc
 2815              		@ args = 0, pretend = 0, frame = 0
 2816              		@ frame_needed = 0, uses_anonymous_args = 0
 2817 0000 38B5     		push	{r3, r4, r5, lr}
 2818              	.LCFI26:
 2819              		.cfi_def_cfa_offset 16
 2820              		.cfi_offset 3, -16
 2821              		.cfi_offset 4, -12
 2822              		.cfi_offset 5, -8
 2823              		.cfi_offset 14, -4
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2824              		.loc 1 2101 1 view .LVU769
 2825              	.LVL193:
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2826              		.loc 1 2102 1 view .LVU770
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2827              		.loc 1 2106 2 view .LVU771
 2828 0002 354B     		ldr	r3, .L224
 2829 0004 1B68     		ldr	r3, [r3]
 2830 0006 43B9     		cbnz	r3, .L209
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2831              		.loc 1 2106 2 view .LVU772
ARM GAS  /tmp/ccGppmC5.s 			page 154


 2832              	.LBB150:
 2833              	.LBI150:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 2834              		.loc 2 191 30 view .LVU773
 2835              	.LBB151:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 2836              		.loc 2 193 1 view .LVU774
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2837              		.loc 2 195 2 view .LVU775
 2838              		.syntax unified
 2839              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 2840 0008 4FF05003 			mov r3, #80												
 2841 000c 83F31188 		msr basepri, r3											
 2842 0010 BFF36F8F 		isb														
 2843 0014 BFF34F8F 		dsb														
 2844              	
 2845              	@ 0 "" 2
 2846              	.LVL194:
 2847              		.thumb
 2848              		.syntax unified
 2849              	.L210:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 2850              		.loc 2 195 2 is_stmt 0 view .LVU776
 2851              	.LBE151:
 2852              	.LBE150:
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2853              		.loc 1 2106 2 is_stmt 1 discriminator 1 view .LVU777
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2854              		.loc 1 2106 2 discriminator 1 view .LVU778
 2855 0018 FEE7     		b	.L210
 2856              	.L209:
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2857              		.loc 1 2106 38 discriminator 2 view .LVU779
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2858              		.loc 1 2113 2 discriminator 2 view .LVU780
 2859 001a FFF7FEFF 		bl	vPortEnterCritical
 2860              	.LVL195:
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2861              		.loc 1 2115 3 discriminator 2 view .LVU781
 2862 001e 2E4B     		ldr	r3, .L224
 2863 0020 1A68     		ldr	r2, [r3]
 2864 0022 013A     		subs	r2, r2, #1
 2865 0024 1A60     		str	r2, [r3]
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2866              		.loc 1 2117 3 discriminator 2 view .LVU782
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2867              		.loc 1 2117 28 is_stmt 0 discriminator 2 view .LVU783
 2868 0026 1B68     		ldr	r3, [r3]
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2869              		.loc 1 2117 5 discriminator 2 view .LVU784
 2870 0028 002B     		cmp	r3, #0
 2871 002a 4FD1     		bne	.L219
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2872              		.loc 1 2119 4 is_stmt 1 view .LVU785
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2873              		.loc 1 2119 31 is_stmt 0 view .LVU786
 2874 002c 2B4B     		ldr	r3, .L224+4
ARM GAS  /tmp/ccGppmC5.s 			page 155


 2875 002e 1B68     		ldr	r3, [r3]
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2876              		.loc 1 2119 6 view .LVU787
 2877 0030 0BB9     		cbnz	r3, .L220
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2878              		.loc 1 2102 12 view .LVU788
 2879 0032 0024     		movs	r4, #0
 2880 0034 4BE0     		b	.L211
 2881              	.L220:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2882              		.loc 1 2101 8 view .LVU789
 2883 0036 0024     		movs	r4, #0
 2884              	.LVL196:
 2885              	.L212:
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2886              		.loc 1 2138 31 is_stmt 1 view .LVU790
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2887              		.loc 1 2123 52 view .LVU791
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2888              		.loc 1 2123 12 is_stmt 0 view .LVU792
 2889 0038 294B     		ldr	r3, .L224+8
 2890 003a 1B68     		ldr	r3, [r3]
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2891              		.loc 1 2123 52 view .LVU793
 2892 003c 1BB3     		cbz	r3, .L222
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2893              		.loc 1 2125 6 is_stmt 1 view .LVU794
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2894              		.loc 1 2125 26 is_stmt 0 view .LVU795
 2895 003e 284B     		ldr	r3, .L224+8
 2896 0040 DB68     		ldr	r3, [r3, #12]
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2897              		.loc 1 2125 12 view .LVU796
 2898 0042 DC68     		ldr	r4, [r3, #12]
 2899              	.LVL197:
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2900              		.loc 1 2126 6 is_stmt 1 view .LVU797
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2901              		.loc 1 2126 15 is_stmt 0 view .LVU798
 2902 0044 04F11800 		add	r0, r4, #24
 2903 0048 FFF7FEFF 		bl	uxListRemove
 2904              	.LVL198:
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2905              		.loc 1 2127 6 is_stmt 1 view .LVU799
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2906              		.loc 1 2127 15 is_stmt 0 view .LVU800
 2907 004c 251D     		adds	r5, r4, #4
 2908 004e 2846     		mov	r0, r5
 2909 0050 FFF7FEFF 		bl	uxListRemove
 2910              	.LVL199:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2911              		.loc 1 2128 6 is_stmt 1 view .LVU801
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2912              		.loc 1 2128 6 view .LVU802
 2913 0054 E06A     		ldr	r0, [r4, #44]
 2914 0056 0123     		movs	r3, #1
 2915 0058 8340     		lsls	r3, r3, r0
ARM GAS  /tmp/ccGppmC5.s 			page 156


 2916 005a 224A     		ldr	r2, .L224+12
 2917 005c 1168     		ldr	r1, [r2]
 2918 005e 0B43     		orrs	r3, r3, r1
 2919 0060 1360     		str	r3, [r2]
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2920              		.loc 1 2128 6 view .LVU803
 2921 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2922 0066 2946     		mov	r1, r5
 2923 0068 1F4B     		ldr	r3, .L224+16
 2924 006a 03EB8000 		add	r0, r3, r0, lsl #2
 2925 006e FFF7FEFF 		bl	vListInsertEnd
 2926              	.LVL200:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2927              		.loc 1 2128 36 view .LVU804
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2928              		.loc 1 2132 6 view .LVU805
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2929              		.loc 1 2132 15 is_stmt 0 view .LVU806
 2930 0072 E26A     		ldr	r2, [r4, #44]
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2931              		.loc 1 2132 43 view .LVU807
 2932 0074 1D4B     		ldr	r3, .L224+20
 2933 0076 1B68     		ldr	r3, [r3]
 2934 0078 DB6A     		ldr	r3, [r3, #44]
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2935              		.loc 1 2132 8 view .LVU808
 2936 007a 9A42     		cmp	r2, r3
 2937 007c DCD3     		bcc	.L212
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2938              		.loc 1 2134 7 is_stmt 1 view .LVU809
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2939              		.loc 1 2134 21 is_stmt 0 view .LVU810
 2940 007e 1C4B     		ldr	r3, .L224+24
 2941 0080 0122     		movs	r2, #1
 2942 0082 1A60     		str	r2, [r3]
 2943 0084 D8E7     		b	.L212
 2944              	.L222:
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2945              		.loc 1 2142 5 is_stmt 1 view .LVU811
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2946              		.loc 1 2142 7 is_stmt 0 view .LVU812
 2947 0086 0CB1     		cbz	r4, .L215
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2948              		.loc 1 2150 6 is_stmt 1 view .LVU813
 2949 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2950              	.LVL201:
 2951              	.L215:
 2952              	.LBB152:
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2953              		.loc 1 2158 6 view .LVU814
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2954              		.loc 1 2158 18 is_stmt 0 view .LVU815
 2955 008c 194B     		ldr	r3, .L224+28
 2956 008e 1C68     		ldr	r4, [r3]
 2957              	.LVL202:
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2958              		.loc 1 2160 6 is_stmt 1 view .LVU816
ARM GAS  /tmp/ccGppmC5.s 			page 157


2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2959              		.loc 1 2160 8 is_stmt 0 view .LVU817
 2960 0090 84B9     		cbnz	r4, .L218
 2961              	.L216:
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2962              		.loc 1 2179 31 is_stmt 1 view .LVU818
 2963              	.LBE152:
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2964              		.loc 1 2183 5 view .LVU819
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2965              		.loc 1 2183 23 is_stmt 0 view .LVU820
 2966 0092 174B     		ldr	r3, .L224+24
 2967 0094 1C68     		ldr	r4, [r3]
 2968              	.LVL203:
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2969              		.loc 1 2183 7 view .LVU821
 2970 0096 D4B1     		cbz	r4, .L211
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2971              		.loc 1 2187 7 is_stmt 1 view .LVU822
 2972              	.LVL204:
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2973              		.loc 1 2190 6 view .LVU823
 2974 0098 4FF0E023 		mov	r3, #-536813568
 2975 009c 4FF08052 		mov	r2, #268435456
 2976 00a0 C3F8042D 		str	r2, [r3, #3332]
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2977              		.loc 1 2190 6 view .LVU824
 2978              		.syntax unified
 2979              	@ 2190 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2980 00a4 BFF34F8F 		dsb
 2981              	@ 0 "" 2
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2982              		.loc 1 2190 6 view .LVU825
 2983              	@ 2190 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2984 00a8 BFF36F8F 		isb
 2985              	@ 0 "" 2
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2986              		.loc 1 2190 37 view .LVU826
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2987              		.loc 1 2187 23 is_stmt 0 view .LVU827
 2988              		.thumb
 2989              		.syntax unified
 2990 00ac 0124     		movs	r4, #1
 2991 00ae 0EE0     		b	.L211
 2992              	.LVL205:
 2993              	.L217:
 2994              	.LBB153:
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2995              		.loc 1 2170 33 is_stmt 1 view .LVU828
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 2996              		.loc 1 2172 8 view .LVU829
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2997              		.loc 1 2173 31 view .LVU830
 2998 00b0 013C     		subs	r4, r4, #1
 2999              	.LVL206:
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3000              		.loc 1 2173 31 is_stmt 0 view .LVU831
ARM GAS  /tmp/ccGppmC5.s 			page 158


 3001 00b2 07D0     		beq	.L223
 3002              	.L218:
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3003              		.loc 1 2162 7 is_stmt 1 view .LVU832
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3004              		.loc 1 2164 8 view .LVU833
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3005              		.loc 1 2164 12 is_stmt 0 view .LVU834
 3006 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 3007              	.LVL207:
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3008              		.loc 1 2164 10 view .LVU835
 3009 00b8 0028     		cmp	r0, #0
 3010 00ba F9D0     		beq	.L217
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3011              		.loc 1 2166 9 is_stmt 1 view .LVU836
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3012              		.loc 1 2166 23 is_stmt 0 view .LVU837
 3013 00bc 0C4B     		ldr	r3, .L224+24
 3014 00be 0122     		movs	r2, #1
 3015 00c0 1A60     		str	r2, [r3]
 3016 00c2 F5E7     		b	.L217
 3017              	.L223:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3018              		.loc 1 2175 7 is_stmt 1 view .LVU838
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3019              		.loc 1 2175 21 is_stmt 0 view .LVU839
 3020 00c4 0B4B     		ldr	r3, .L224+28
 3021 00c6 0022     		movs	r2, #0
 3022 00c8 1A60     		str	r2, [r3]
 3023 00ca E2E7     		b	.L216
 3024              	.LVL208:
 3025              	.L219:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3026              		.loc 1 2175 21 view .LVU840
 3027              	.LBE153:
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3028              		.loc 1 2102 12 view .LVU841
 3029 00cc 0024     		movs	r4, #0
 3030              	.LVL209:
 3031              	.L211:
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3032              		.loc 1 2200 28 is_stmt 1 view .LVU842
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3033              		.loc 1 2203 2 view .LVU843
 3034 00ce FFF7FEFF 		bl	vPortExitCritical
 3035              	.LVL210:
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3036              		.loc 1 2205 2 view .LVU844
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3037              		.loc 1 2206 1 is_stmt 0 view .LVU845
 3038 00d2 2046     		mov	r0, r4
 3039 00d4 38BD     		pop	{r3, r4, r5, pc}
 3040              	.LVL211:
 3041              	.L225:
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3042              		.loc 1 2206 1 view .LVU846
ARM GAS  /tmp/ccGppmC5.s 			page 159


 3043 00d6 00BF     		.align	2
 3044              	.L224:
 3045 00d8 00000000 		.word	uxSchedulerSuspended
 3046 00dc 00000000 		.word	uxCurrentNumberOfTasks
 3047 00e0 00000000 		.word	xPendingReadyList
 3048 00e4 00000000 		.word	uxTopReadyPriority
 3049 00e8 00000000 		.word	pxReadyTasksLists
 3050 00ec 00000000 		.word	pxCurrentTCB
 3051 00f0 00000000 		.word	xYieldPending
 3052 00f4 00000000 		.word	uxPendedTicks
 3053              		.cfi_endproc
 3054              	.LFE21:
 3056              		.section	.text.vTaskDelay,"ax",%progbits
 3057              		.align	1
 3058              		.global	vTaskDelay
 3059              		.syntax unified
 3060              		.thumb
 3061              		.thumb_func
 3063              	vTaskDelay:
 3064              	.LVL212:
 3065              	.LFB10:
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3066              		.loc 1 1283 2 is_stmt 1 view -0
 3067              		.cfi_startproc
 3068              		@ args = 0, pretend = 0, frame = 0
 3069              		@ frame_needed = 0, uses_anonymous_args = 0
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3070              		.loc 1 1283 2 is_stmt 0 view .LVU848
 3071 0000 10B5     		push	{r4, lr}
 3072              	.LCFI27:
 3073              		.cfi_def_cfa_offset 8
 3074              		.cfi_offset 4, -8
 3075              		.cfi_offset 14, -4
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3076              		.loc 1 1284 2 is_stmt 1 view .LVU849
 3077              	.LVL213:
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3078              		.loc 1 1287 3 view .LVU850
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3079              		.loc 1 1287 5 is_stmt 0 view .LVU851
 3080 0002 A8B1     		cbz	r0, .L227
 3081 0004 0446     		mov	r4, r0
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3082              		.loc 1 1289 4 is_stmt 1 view .LVU852
 3083 0006 104B     		ldr	r3, .L232
 3084 0008 1B68     		ldr	r3, [r3]
 3085 000a 43B1     		cbz	r3, .L228
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3086              		.loc 1 1289 4 view .LVU853
 3087              	.LBB154:
 3088              	.LBI154:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3089              		.loc 2 191 30 view .LVU854
 3090              	.LBB155:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3091              		.loc 2 193 1 view .LVU855
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
ARM GAS  /tmp/ccGppmC5.s 			page 160


 3092              		.loc 2 195 2 view .LVU856
 3093              		.syntax unified
 3094              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3095 000c 4FF05003 			mov r3, #80												
 3096 0010 83F31188 		msr basepri, r3											
 3097 0014 BFF36F8F 		isb														
 3098 0018 BFF34F8F 		dsb														
 3099              	
 3100              	@ 0 "" 2
 3101              	.LVL214:
 3102              		.thumb
 3103              		.syntax unified
 3104              	.L229:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3105              		.loc 2 195 2 is_stmt 0 view .LVU857
 3106              	.LBE155:
 3107              	.LBE154:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3108              		.loc 1 1289 4 is_stmt 1 discriminator 1 view .LVU858
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3109              		.loc 1 1289 4 discriminator 1 view .LVU859
 3110 001c FEE7     		b	.L229
 3111              	.L228:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3112              		.loc 1 1289 45 discriminator 2 view .LVU860
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3113              		.loc 1 1290 4 discriminator 2 view .LVU861
 3114 001e FFF7FEFF 		bl	vTaskSuspendAll
 3115              	.LVL215:
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3116              		.loc 1 1292 22 discriminator 2 view .LVU862
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3117              		.loc 1 1301 5 discriminator 2 view .LVU863
 3118 0022 0021     		movs	r1, #0
 3119 0024 2046     		mov	r0, r4
 3120 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3121              	.LVL216:
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3122              		.loc 1 1303 4 discriminator 2 view .LVU864
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3123              		.loc 1 1303 22 is_stmt 0 discriminator 2 view .LVU865
 3124 002a FFF7FEFF 		bl	xTaskResumeAll
 3125              	.LVL217:
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3126              		.loc 1 1307 28 is_stmt 1 discriminator 2 view .LVU866
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3127              		.loc 1 1312 3 discriminator 2 view .LVU867
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3128              		.loc 1 1312 5 is_stmt 0 discriminator 2 view .LVU868
 3129 002e 48B9     		cbnz	r0, .L226
 3130              	.LVL218:
 3131              	.L227:
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3132              		.loc 1 1314 4 is_stmt 1 view .LVU869
 3133 0030 4FF0E023 		mov	r3, #-536813568
 3134 0034 4FF08052 		mov	r2, #268435456
 3135 0038 C3F8042D 		str	r2, [r3, #3332]
ARM GAS  /tmp/ccGppmC5.s 			page 161


1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3136              		.loc 1 1314 4 view .LVU870
 3137              		.syntax unified
 3138              	@ 1314 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3139 003c BFF34F8F 		dsb
 3140              	@ 0 "" 2
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3141              		.loc 1 1314 4 view .LVU871
 3142              	@ 1314 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3143 0040 BFF36F8F 		isb
 3144              	@ 0 "" 2
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3145              		.loc 1 1314 26 view .LVU872
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3146              		.loc 1 1318 28 view .LVU873
 3147              		.thumb
 3148              		.syntax unified
 3149              	.L226:
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3150              		.loc 1 1320 2 is_stmt 0 view .LVU874
 3151 0044 10BD     		pop	{r4, pc}
 3152              	.L233:
 3153 0046 00BF     		.align	2
 3154              	.L232:
 3155 0048 00000000 		.word	uxSchedulerSuspended
 3156              		.cfi_endproc
 3157              	.LFE10:
 3159              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3160              		.align	1
 3161              		.global	vTaskSwitchContext
 3162              		.syntax unified
 3163              		.thumb
 3164              		.thumb_func
 3166              	vTaskSwitchContext:
 3167              	.LFB27:
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3168              		.loc 1 2846 1 is_stmt 1 view -0
 3169              		.cfi_startproc
 3170              		@ args = 0, pretend = 0, frame = 0
 3171              		@ frame_needed = 0, uses_anonymous_args = 0
 3172              		@ link register save eliminated.
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3173              		.loc 1 2847 2 view .LVU876
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3174              		.loc 1 2847 27 is_stmt 0 view .LVU877
 3175 0000 204B     		ldr	r3, .L241
 3176 0002 1B68     		ldr	r3, [r3]
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3177              		.loc 1 2847 4 view .LVU878
 3178 0004 1BB1     		cbz	r3, .L235
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3179              		.loc 1 2851 3 is_stmt 1 view .LVU879
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3180              		.loc 1 2851 17 is_stmt 0 view .LVU880
 3181 0006 204B     		ldr	r3, .L241+4
 3182 0008 0122     		movs	r2, #1
 3183 000a 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccGppmC5.s 			page 162


 3184 000c 7047     		bx	lr
 3185              	.L235:
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3186              		.loc 1 2855 3 is_stmt 1 view .LVU881
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3187              		.loc 1 2855 17 is_stmt 0 view .LVU882
 3188 000e 1E4B     		ldr	r3, .L241+4
 3189 0010 0022     		movs	r2, #0
 3190 0012 1A60     		str	r2, [r3]
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3191              		.loc 1 2856 27 is_stmt 1 view .LVU883
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3192              		.loc 1 2886 33 view .LVU884
 3193              	.LBB156:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3194              		.loc 1 2890 3 view .LVU885
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3195              		.loc 1 2890 3 view .LVU886
 3196 0014 1D4B     		ldr	r3, .L241+8
 3197 0016 1B68     		ldr	r3, [r3]
 3198              	.LVL219:
 3199              	.LBB157:
 3200              	.LBI157:
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 3201              		.loc 2 130 59 view .LVU887
 3202              	.LBB158:
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3203              		.loc 2 132 2 view .LVU888
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 3204              		.loc 2 134 3 view .LVU889
 3205              		.syntax unified
 3206              	@ 134 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3207 0018 B3FA83F3 		clz r3, r3
 3208              	@ 0 "" 2
 3209              	.LVL220:
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 3210              		.loc 2 134 3 is_stmt 0 view .LVU890
 3211              		.thumb
 3212              		.syntax unified
 3213 001c DBB2     		uxtb	r3, r3
 3214              	.LVL221:
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 3215              		.loc 2 135 3 is_stmt 1 view .LVU891
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 3216              		.loc 2 135 3 is_stmt 0 view .LVU892
 3217              	.LBE158:
 3218              	.LBE157:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3219              		.loc 1 2890 3 view .LVU893
 3220 001e C3F11F03 		rsb	r3, r3, #31
 3221              	.LVL222:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3222              		.loc 1 2890 3 is_stmt 1 view .LVU894
 3223 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3224 0026 8A00     		lsls	r2, r1, #2
 3225 0028 1949     		ldr	r1, .L241+12
 3226 002a 8A58     		ldr	r2, [r1, r2]
ARM GAS  /tmp/ccGppmC5.s 			page 163


 3227 002c 42B9     		cbnz	r2, .L237
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3228              		.loc 1 2890 3 view .LVU895
 3229              	.LBB159:
 3230              	.LBI159:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3231              		.loc 2 191 30 view .LVU896
 3232              	.LBB160:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3233              		.loc 2 193 1 view .LVU897
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3234              		.loc 2 195 2 view .LVU898
 3235              		.syntax unified
 3236              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3237 002e 4FF05003 			mov r3, #80												
 3238 0032 83F31188 		msr basepri, r3											
 3239 0036 BFF36F8F 		isb														
 3240 003a BFF34F8F 		dsb														
 3241              	
 3242              	@ 0 "" 2
 3243              	.LVL223:
 3244              		.thumb
 3245              		.syntax unified
 3246              	.L238:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3247              		.loc 2 195 2 is_stmt 0 view .LVU899
 3248              	.LBE160:
 3249              	.LBE159:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3250              		.loc 1 2890 3 is_stmt 1 discriminator 1 view .LVU900
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3251              		.loc 1 2890 3 discriminator 1 view .LVU901
 3252 003e FEE7     		b	.L238
 3253              	.LVL224:
 3254              	.L237:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3255              		.loc 1 2890 3 discriminator 2 view .LVU902
 3256              	.LBB161:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3257              		.loc 1 2890 3 discriminator 2 view .LVU903
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3258              		.loc 1 2890 3 discriminator 2 view .LVU904
 3259 0040 1348     		ldr	r0, .L241+12
 3260 0042 03EB8301 		add	r1, r3, r3, lsl #2
 3261 0046 8A00     		lsls	r2, r1, #2
 3262 0048 0244     		add	r2, r2, r0
 3263 004a 5168     		ldr	r1, [r2, #4]
 3264 004c 4968     		ldr	r1, [r1, #4]
 3265 004e 5160     		str	r1, [r2, #4]
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3266              		.loc 1 2890 3 discriminator 2 view .LVU905
 3267 0050 03EB830C 		add	ip, r3, r3, lsl #2
 3268 0054 4FEA8C02 		lsl	r2, ip, #2
 3269 0058 0832     		adds	r2, r2, #8
 3270 005a 0244     		add	r2, r2, r0
 3271 005c 9142     		cmp	r1, r2
 3272 005e 09D0     		beq	.L240
ARM GAS  /tmp/ccGppmC5.s 			page 164


 3273              	.L239:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3274              		.loc 1 2890 3 discriminator 6 view .LVU906
 3275 0060 03EB8303 		add	r3, r3, r3, lsl #2
 3276              	.LVL225:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3277              		.loc 1 2890 3 is_stmt 0 discriminator 6 view .LVU907
 3278 0064 9A00     		lsls	r2, r3, #2
 3279 0066 0A4B     		ldr	r3, .L241+12
 3280 0068 1344     		add	r3, r3, r2
 3281 006a 5B68     		ldr	r3, [r3, #4]
 3282 006c DA68     		ldr	r2, [r3, #12]
 3283 006e 094B     		ldr	r3, .L241+16
 3284 0070 1A60     		str	r2, [r3]
 3285              	.LBE161:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3286              		.loc 1 2890 3 is_stmt 1 discriminator 6 view .LVU908
 3287              	.LBE156:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3288              		.loc 1 2890 37 discriminator 6 view .LVU909
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3289              		.loc 1 2891 26 discriminator 6 view .LVU910
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3290              		.loc 1 2901 1 is_stmt 0 discriminator 6 view .LVU911
 3291 0072 7047     		bx	lr
 3292              	.LVL226:
 3293              	.L240:
 3294              	.LBB163:
 3295              	.LBB162:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3296              		.loc 1 2890 3 is_stmt 1 discriminator 4 view .LVU912
 3297 0074 4868     		ldr	r0, [r1, #4]
 3298 0076 6246     		mov	r2, ip
 3299 0078 9100     		lsls	r1, r2, #2
 3300 007a 054A     		ldr	r2, .L241+12
 3301 007c 0A44     		add	r2, r2, r1
 3302 007e 5060     		str	r0, [r2, #4]
 3303 0080 EEE7     		b	.L239
 3304              	.L242:
 3305 0082 00BF     		.align	2
 3306              	.L241:
 3307 0084 00000000 		.word	uxSchedulerSuspended
 3308 0088 00000000 		.word	xYieldPending
 3309 008c 00000000 		.word	uxTopReadyPriority
 3310 0090 00000000 		.word	pxReadyTasksLists
 3311 0094 00000000 		.word	pxCurrentTCB
 3312              	.LBE162:
 3313              	.LBE163:
 3314              		.cfi_endproc
 3315              	.LFE27:
 3317              		.section	.text.vTaskSuspend,"ax",%progbits
 3318              		.align	1
 3319              		.global	vTaskSuspend
 3320              		.syntax unified
 3321              		.thumb
 3322              		.thumb_func
 3324              	vTaskSuspend:
ARM GAS  /tmp/ccGppmC5.s 			page 165


 3325              	.LVL227:
 3326              	.LFB14:
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3327              		.loc 1 1625 2 view -0
 3328              		.cfi_startproc
 3329              		@ args = 0, pretend = 0, frame = 0
 3330              		@ frame_needed = 0, uses_anonymous_args = 0
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3331              		.loc 1 1625 2 is_stmt 0 view .LVU914
 3332 0000 38B5     		push	{r3, r4, r5, lr}
 3333              	.LCFI28:
 3334              		.cfi_def_cfa_offset 16
 3335              		.cfi_offset 3, -16
 3336              		.cfi_offset 4, -12
 3337              		.cfi_offset 5, -8
 3338              		.cfi_offset 14, -4
 3339 0002 0446     		mov	r4, r0
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3340              		.loc 1 1626 2 is_stmt 1 view .LVU915
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3341              		.loc 1 1628 3 view .LVU916
 3342 0004 FFF7FEFF 		bl	vPortEnterCritical
 3343              	.LVL228:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3344              		.loc 1 1632 4 view .LVU917
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3345              		.loc 1 1632 12 is_stmt 0 view .LVU918
 3346 0008 64B3     		cbz	r4, .L255
 3347              	.LVL229:
 3348              	.L244:
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3349              		.loc 1 1634 30 is_stmt 1 discriminator 4 view .LVU919
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3350              		.loc 1 1638 4 discriminator 4 view .LVU920
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3351              		.loc 1 1638 8 is_stmt 0 discriminator 4 view .LVU921
 3352 000a 251D     		adds	r5, r4, #4
 3353 000c 2846     		mov	r0, r5
 3354 000e FFF7FEFF 		bl	uxListRemove
 3355              	.LVL230:
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3356              		.loc 1 1638 6 discriminator 4 view .LVU922
 3357 0012 70B9     		cbnz	r0, .L245
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3358              		.loc 1 1640 5 is_stmt 1 view .LVU923
 3359 0014 E26A     		ldr	r2, [r4, #44]
 3360 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3361 001a 9B00     		lsls	r3, r3, #2
 3362 001c 2C49     		ldr	r1, .L259
 3363 001e CB58     		ldr	r3, [r1, r3]
 3364 0020 3BB9     		cbnz	r3, .L245
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3365              		.loc 1 1640 5 discriminator 1 view .LVU924
 3366 0022 0123     		movs	r3, #1
 3367 0024 03FA02F2 		lsl	r2, r3, r2
 3368 0028 2A49     		ldr	r1, .L259+4
 3369 002a 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/ccGppmC5.s 			page 166


 3370 002c 23EA0203 		bic	r3, r3, r2
 3371 0030 0B60     		str	r3, [r1]
 3372              	.L245:
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3373              		.loc 1 1644 29 view .LVU925
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3374              		.loc 1 1648 4 view .LVU926
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3375              		.loc 1 1648 8 is_stmt 0 view .LVU927
 3376 0032 A36A     		ldr	r3, [r4, #40]
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3377              		.loc 1 1648 6 view .LVU928
 3378 0034 1BB1     		cbz	r3, .L246
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3379              		.loc 1 1650 5 is_stmt 1 view .LVU929
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3380              		.loc 1 1650 14 is_stmt 0 view .LVU930
 3381 0036 04F11800 		add	r0, r4, #24
 3382 003a FFF7FEFF 		bl	uxListRemove
 3383              	.LVL231:
 3384              	.L246:
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3385              		.loc 1 1654 29 is_stmt 1 view .LVU931
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3386              		.loc 1 1657 4 view .LVU932
 3387 003e 2946     		mov	r1, r5
 3388 0040 2548     		ldr	r0, .L259+8
 3389 0042 FFF7FEFF 		bl	vListInsertEnd
 3390              	.LVL232:
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3391              		.loc 1 1661 5 view .LVU933
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3392              		.loc 1 1661 14 is_stmt 0 view .LVU934
 3393 0046 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 3394 004a DBB2     		uxtb	r3, r3
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3395              		.loc 1 1661 7 view .LVU935
 3396 004c 012B     		cmp	r3, #1
 3397 004e 0CD0     		beq	.L256
 3398              	.L247:
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3399              		.loc 1 1670 3 is_stmt 1 view .LVU936
 3400 0050 FFF7FEFF 		bl	vPortExitCritical
 3401              	.LVL233:
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3402              		.loc 1 1672 3 view .LVU937
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3403              		.loc 1 1672 25 is_stmt 0 view .LVU938
 3404 0054 214B     		ldr	r3, .L259+12
 3405 0056 1B68     		ldr	r3, [r3]
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3406              		.loc 1 1672 5 view .LVU939
 3407 0058 5BB9     		cbnz	r3, .L257
 3408              	.L248:
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3409              		.loc 1 1684 28 is_stmt 1 view .LVU940
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccGppmC5.s 			page 167


 3410              		.loc 1 1687 3 view .LVU941
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3411              		.loc 1 1687 13 is_stmt 0 view .LVU942
 3412 005a 214B     		ldr	r3, .L259+16
 3413 005c 1B68     		ldr	r3, [r3]
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3414              		.loc 1 1687 5 view .LVU943
 3415 005e A342     		cmp	r3, r4
 3416 0060 0ED0     		beq	.L258
 3417              	.L243:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3418              		.loc 1 1718 2 view .LVU944
 3419 0062 38BD     		pop	{r3, r4, r5, pc}
 3420              	.LVL234:
 3421              	.L255:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3422              		.loc 1 1632 12 discriminator 1 view .LVU945
 3423 0064 1E4B     		ldr	r3, .L259+16
 3424 0066 1C68     		ldr	r4, [r3]
 3425              	.LVL235:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3426              		.loc 1 1632 12 discriminator 1 view .LVU946
 3427 0068 CFE7     		b	.L244
 3428              	.LVL236:
 3429              	.L256:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3430              		.loc 1 1665 6 is_stmt 1 view .LVU947
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3431              		.loc 1 1665 27 is_stmt 0 view .LVU948
 3432 006a 0023     		movs	r3, #0
 3433 006c 84F85030 		strb	r3, [r4, #80]
 3434 0070 EEE7     		b	.L247
 3435              	.L257:
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3436              		.loc 1 1676 4 is_stmt 1 view .LVU949
 3437 0072 FFF7FEFF 		bl	vPortEnterCritical
 3438              	.LVL237:
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3439              		.loc 1 1678 5 view .LVU950
 3440 0076 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3441              	.LVL238:
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3442              		.loc 1 1680 4 view .LVU951
 3443 007a FFF7FEFF 		bl	vPortExitCritical
 3444              	.LVL239:
 3445 007e ECE7     		b	.L248
 3446              	.L258:
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3447              		.loc 1 1689 4 view .LVU952
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3448              		.loc 1 1689 26 is_stmt 0 view .LVU953
 3449 0080 164B     		ldr	r3, .L259+12
 3450 0082 1B68     		ldr	r3, [r3]
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3451              		.loc 1 1689 6 view .LVU954
 3452 0084 B3B1     		cbz	r3, .L250
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
ARM GAS  /tmp/ccGppmC5.s 			page 168


 3453              		.loc 1 1692 5 is_stmt 1 view .LVU955
 3454 0086 174B     		ldr	r3, .L259+20
 3455 0088 1B68     		ldr	r3, [r3]
 3456 008a 43B1     		cbz	r3, .L251
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3457              		.loc 1 1692 5 view .LVU956
 3458              	.LBB164:
 3459              	.LBI164:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3460              		.loc 2 191 30 view .LVU957
 3461              	.LBB165:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3462              		.loc 2 193 1 view .LVU958
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3463              		.loc 2 195 2 view .LVU959
 3464              		.syntax unified
 3465              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3466 008c 4FF05003 			mov r3, #80												
 3467 0090 83F31188 		msr basepri, r3											
 3468 0094 BFF36F8F 		isb														
 3469 0098 BFF34F8F 		dsb														
 3470              	
 3471              	@ 0 "" 2
 3472              	.LVL240:
 3473              		.thumb
 3474              		.syntax unified
 3475              	.L252:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3476              		.loc 2 195 2 is_stmt 0 view .LVU960
 3477              	.LBE165:
 3478              	.LBE164:
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3479              		.loc 1 1692 5 is_stmt 1 discriminator 1 view .LVU961
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3480              		.loc 1 1692 5 discriminator 1 view .LVU962
 3481 009c FEE7     		b	.L252
 3482              	.L251:
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3483              		.loc 1 1692 46 discriminator 2 view .LVU963
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3484              		.loc 1 1693 5 discriminator 2 view .LVU964
 3485 009e 4FF0E023 		mov	r3, #-536813568
 3486 00a2 4FF08052 		mov	r2, #268435456
 3487 00a6 C3F8042D 		str	r2, [r3, #3332]
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3488              		.loc 1 1693 5 discriminator 2 view .LVU965
 3489              		.syntax unified
 3490              	@ 1693 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3491 00aa BFF34F8F 		dsb
 3492              	@ 0 "" 2
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3493              		.loc 1 1693 5 discriminator 2 view .LVU966
 3494              	@ 1693 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3495 00ae BFF36F8F 		isb
 3496              	@ 0 "" 2
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3497              		.loc 1 1693 27 discriminator 2 view .LVU967
ARM GAS  /tmp/ccGppmC5.s 			page 169


 3498              		.thumb
 3499              		.syntax unified
 3500 00b2 D6E7     		b	.L243
 3501              	.L250:
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3502              		.loc 1 1700 5 view .LVU968
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3503              		.loc 1 1700 9 is_stmt 0 view .LVU969
 3504 00b4 084B     		ldr	r3, .L259+8
 3505 00b6 1A68     		ldr	r2, [r3]
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3506              		.loc 1 1700 56 view .LVU970
 3507 00b8 0B4B     		ldr	r3, .L259+24
 3508 00ba 1B68     		ldr	r3, [r3]
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3509              		.loc 1 1700 7 view .LVU971
 3510 00bc 9A42     		cmp	r2, r3
 3511 00be 03D1     		bne	.L253
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3512              		.loc 1 1706 6 is_stmt 1 view .LVU972
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3513              		.loc 1 1706 19 is_stmt 0 view .LVU973
 3514 00c0 074B     		ldr	r3, .L259+16
 3515 00c2 0022     		movs	r2, #0
 3516 00c4 1A60     		str	r2, [r3]
 3517 00c6 CCE7     		b	.L243
 3518              	.L253:
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3519              		.loc 1 1710 6 is_stmt 1 view .LVU974
 3520 00c8 FFF7FEFF 		bl	vTaskSwitchContext
 3521              	.LVL241:
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3522              		.loc 1 1716 28 view .LVU975
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3523              		.loc 1 1718 2 is_stmt 0 view .LVU976
 3524 00cc C9E7     		b	.L243
 3525              	.L260:
 3526 00ce 00BF     		.align	2
 3527              	.L259:
 3528 00d0 00000000 		.word	pxReadyTasksLists
 3529 00d4 00000000 		.word	uxTopReadyPriority
 3530 00d8 00000000 		.word	xSuspendedTaskList
 3531 00dc 00000000 		.word	xSchedulerRunning
 3532 00e0 00000000 		.word	pxCurrentTCB
 3533 00e4 00000000 		.word	uxSchedulerSuspended
 3534 00e8 00000000 		.word	uxCurrentNumberOfTasks
 3535              		.cfi_endproc
 3536              	.LFE14:
 3538              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3539              		.align	1
 3540              		.global	vTaskPlaceOnEventList
 3541              		.syntax unified
 3542              		.thumb
 3543              		.thumb_func
 3545              	vTaskPlaceOnEventList:
 3546              	.LVL242:
 3547              	.LFB28:
ARM GAS  /tmp/ccGppmC5.s 			page 170


2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3548              		.loc 1 2905 1 is_stmt 1 view -0
 3549              		.cfi_startproc
 3550              		@ args = 0, pretend = 0, frame = 0
 3551              		@ frame_needed = 0, uses_anonymous_args = 0
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3552              		.loc 1 2906 2 view .LVU978
 3553 0000 58B1     		cbz	r0, .L266
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3554              		.loc 1 2905 1 is_stmt 0 discriminator 2 view .LVU979
 3555 0002 10B5     		push	{r4, lr}
 3556              	.LCFI29:
 3557              		.cfi_def_cfa_offset 8
 3558              		.cfi_offset 4, -8
 3559              		.cfi_offset 14, -4
 3560 0004 0C46     		mov	r4, r1
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3561              		.loc 1 2906 29 is_stmt 1 discriminator 2 view .LVU980
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3562              		.loc 1 2915 2 discriminator 2 view .LVU981
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3563              		.loc 1 2915 43 is_stmt 0 discriminator 2 view .LVU982
 3564 0006 094A     		ldr	r2, .L267
 3565 0008 1168     		ldr	r1, [r2]
 3566              	.LVL243:
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3567              		.loc 1 2915 2 discriminator 2 view .LVU983
 3568 000a 1831     		adds	r1, r1, #24
 3569 000c FFF7FEFF 		bl	vListInsert
 3570              	.LVL244:
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3571              		.loc 1 2917 2 is_stmt 1 discriminator 2 view .LVU984
 3572 0010 0121     		movs	r1, #1
 3573 0012 2046     		mov	r0, r4
 3574 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3575              	.LVL245:
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3576              		.loc 1 2918 1 is_stmt 0 discriminator 2 view .LVU985
 3577 0018 10BD     		pop	{r4, pc}
 3578              	.LVL246:
 3579              	.L266:
 3580              	.LCFI30:
 3581              		.cfi_def_cfa_offset 0
 3582              		.cfi_restore 4
 3583              		.cfi_restore 14
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3584              		.loc 1 2906 2 is_stmt 1 view .LVU986
 3585              	.LBB166:
 3586              	.LBI166:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3587              		.loc 2 191 30 view .LVU987
 3588              	.LBB167:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3589              		.loc 2 193 1 view .LVU988
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3590              		.loc 2 195 2 view .LVU989
 3591              		.syntax unified
ARM GAS  /tmp/ccGppmC5.s 			page 171


 3592              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3593 001a 4FF05003 			mov r3, #80												
 3594 001e 83F31188 		msr basepri, r3											
 3595 0022 BFF36F8F 		isb														
 3596 0026 BFF34F8F 		dsb														
 3597              	
 3598              	@ 0 "" 2
 3599              	.LVL247:
 3600              		.thumb
 3601              		.syntax unified
 3602              	.L263:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3603              		.loc 2 195 2 is_stmt 0 view .LVU990
 3604              	.LBE167:
 3605              	.LBE166:
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3606              		.loc 1 2906 2 is_stmt 1 discriminator 1 view .LVU991
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3607              		.loc 1 2906 2 discriminator 1 view .LVU992
 3608 002a FEE7     		b	.L263
 3609              	.L268:
 3610              		.align	2
 3611              	.L267:
 3612 002c 00000000 		.word	pxCurrentTCB
 3613              		.cfi_endproc
 3614              	.LFE28:
 3616              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3617              		.align	1
 3618              		.global	vTaskPlaceOnUnorderedEventList
 3619              		.syntax unified
 3620              		.thumb
 3621              		.thumb_func
 3623              	vTaskPlaceOnUnorderedEventList:
 3624              	.LVL248:
 3625              	.LFB29:
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3626              		.loc 1 2922 1 view -0
 3627              		.cfi_startproc
 3628              		@ args = 0, pretend = 0, frame = 0
 3629              		@ frame_needed = 0, uses_anonymous_args = 0
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3630              		.loc 1 2923 2 view .LVU994
 3631 0000 70B1     		cbz	r0, .L276
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3632              		.loc 1 2922 1 is_stmt 0 discriminator 2 view .LVU995
 3633 0002 10B5     		push	{r4, lr}
 3634              	.LCFI31:
 3635              		.cfi_def_cfa_offset 8
 3636              		.cfi_offset 4, -8
 3637              		.cfi_offset 14, -4
 3638 0004 1446     		mov	r4, r2
 3639 0006 0246     		mov	r2, r0
 3640              	.LVL249:
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3641              		.loc 1 2923 29 is_stmt 1 discriminator 2 view .LVU996
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3642              		.loc 1 2927 2 discriminator 2 view .LVU997
ARM GAS  /tmp/ccGppmC5.s 			page 172


 3643 0008 114B     		ldr	r3, .L277
 3644 000a 1B68     		ldr	r3, [r3]
 3645 000c 8BB9     		cbnz	r3, .L272
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3646              		.loc 1 2927 2 view .LVU998
 3647              	.LBB168:
 3648              	.LBI168:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3649              		.loc 2 191 30 view .LVU999
 3650              	.LBB169:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3651              		.loc 2 193 1 view .LVU1000
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3652              		.loc 2 195 2 view .LVU1001
 3653              		.syntax unified
 3654              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3655 000e 4FF05003 			mov r3, #80												
 3656 0012 83F31188 		msr basepri, r3											
 3657 0016 BFF36F8F 		isb														
 3658 001a BFF34F8F 		dsb														
 3659              	
 3660              	@ 0 "" 2
 3661              	.LVL250:
 3662              		.thumb
 3663              		.syntax unified
 3664              	.L273:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3665              		.loc 2 195 2 is_stmt 0 view .LVU1002
 3666              	.LBE169:
 3667              	.LBE168:
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3668              		.loc 1 2927 2 is_stmt 1 discriminator 2 view .LVU1003
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3669              		.loc 1 2927 2 discriminator 2 view .LVU1004
 3670 001e FEE7     		b	.L273
 3671              	.LVL251:
 3672              	.L276:
 3673              	.LCFI32:
 3674              		.cfi_def_cfa_offset 0
 3675              		.cfi_restore 4
 3676              		.cfi_restore 14
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3677              		.loc 1 2923 2 view .LVU1005
 3678              	.LBB170:
 3679              	.LBI170:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3680              		.loc 2 191 30 view .LVU1006
 3681              	.LBB171:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3682              		.loc 2 193 1 view .LVU1007
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3683              		.loc 2 195 2 view .LVU1008
 3684              		.syntax unified
 3685              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3686 0020 4FF05003 			mov r3, #80												
 3687 0024 83F31188 		msr basepri, r3											
 3688 0028 BFF36F8F 		isb														
ARM GAS  /tmp/ccGppmC5.s 			page 173


 3689 002c BFF34F8F 		dsb														
 3690              	
 3691              	@ 0 "" 2
 3692              	.LVL252:
 3693              		.thumb
 3694              		.syntax unified
 3695              	.L271:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3696              		.loc 2 195 2 is_stmt 0 view .LVU1009
 3697              	.LBE171:
 3698              	.LBE170:
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3699              		.loc 1 2923 2 is_stmt 1 discriminator 1 view .LVU1010
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3700              		.loc 1 2923 2 discriminator 1 view .LVU1011
 3701 0030 FEE7     		b	.L271
 3702              	.LVL253:
 3703              	.L272:
 3704              	.LCFI33:
 3705              		.cfi_def_cfa_offset 8
 3706              		.cfi_offset 4, -8
 3707              		.cfi_offset 14, -4
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3708              		.loc 1 2927 43 discriminator 2 view .LVU1012
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3709              		.loc 1 2932 2 discriminator 2 view .LVU1013
 3710 0032 084B     		ldr	r3, .L277+4
 3711 0034 1868     		ldr	r0, [r3]
 3712              	.LVL254:
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3713              		.loc 1 2932 2 is_stmt 0 discriminator 2 view .LVU1014
 3714 0036 41F00041 		orr	r1, r1, #-2147483648
 3715              	.LVL255:
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3716              		.loc 1 2932 2 discriminator 2 view .LVU1015
 3717 003a 8161     		str	r1, [r0, #24]
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3718              		.loc 1 2939 2 is_stmt 1 discriminator 2 view .LVU1016
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3719              		.loc 1 2939 46 is_stmt 0 discriminator 2 view .LVU1017
 3720 003c 1968     		ldr	r1, [r3]
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3721              		.loc 1 2939 2 discriminator 2 view .LVU1018
 3722 003e 1831     		adds	r1, r1, #24
 3723 0040 1046     		mov	r0, r2
 3724 0042 FFF7FEFF 		bl	vListInsertEnd
 3725              	.LVL256:
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3726              		.loc 1 2941 2 is_stmt 1 discriminator 2 view .LVU1019
 3727 0046 0121     		movs	r1, #1
 3728 0048 2046     		mov	r0, r4
 3729 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3730              	.LVL257:
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3731              		.loc 1 2942 1 is_stmt 0 discriminator 2 view .LVU1020
 3732 004e 10BD     		pop	{r4, pc}
 3733              	.LVL258:
ARM GAS  /tmp/ccGppmC5.s 			page 174


 3734              	.L278:
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3735              		.loc 1 2942 1 discriminator 2 view .LVU1021
 3736              		.align	2
 3737              	.L277:
 3738 0050 00000000 		.word	uxSchedulerSuspended
 3739 0054 00000000 		.word	pxCurrentTCB
 3740              		.cfi_endproc
 3741              	.LFE29:
 3743              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3744              		.align	1
 3745              		.global	xTaskRemoveFromEventList
 3746              		.syntax unified
 3747              		.thumb
 3748              		.thumb_func
 3750              	xTaskRemoveFromEventList:
 3751              	.LVL259:
 3752              	.LFB30:
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3753              		.loc 1 2979 1 is_stmt 1 view -0
 3754              		.cfi_startproc
 3755              		@ args = 0, pretend = 0, frame = 0
 3756              		@ frame_needed = 0, uses_anonymous_args = 0
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3757              		.loc 1 2979 1 is_stmt 0 view .LVU1023
 3758 0000 38B5     		push	{r3, r4, r5, lr}
 3759              	.LCFI34:
 3760              		.cfi_def_cfa_offset 16
 3761              		.cfi_offset 3, -16
 3762              		.cfi_offset 4, -12
 3763              		.cfi_offset 5, -8
 3764              		.cfi_offset 14, -4
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3765              		.loc 1 2980 1 is_stmt 1 view .LVU1024
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3766              		.loc 1 2981 1 view .LVU1025
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3767              		.loc 1 2996 2 view .LVU1026
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3768              		.loc 1 2996 31 is_stmt 0 view .LVU1027
 3769 0002 C368     		ldr	r3, [r0, #12]
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3770              		.loc 1 2996 17 view .LVU1028
 3771 0004 DC68     		ldr	r4, [r3, #12]
 3772              	.LVL260:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3773              		.loc 1 2997 2 is_stmt 1 view .LVU1029
 3774 0006 24B3     		cbz	r4, .L287
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3775              		.loc 1 2997 32 discriminator 2 view .LVU1030
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3776              		.loc 1 2998 2 discriminator 2 view .LVU1031
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3777              		.loc 1 2998 11 is_stmt 0 discriminator 2 view .LVU1032
 3778 0008 04F11805 		add	r5, r4, #24
 3779 000c 2846     		mov	r0, r5
 3780              	.LVL261:
ARM GAS  /tmp/ccGppmC5.s 			page 175


2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3781              		.loc 1 2998 11 discriminator 2 view .LVU1033
 3782 000e FFF7FEFF 		bl	uxListRemove
 3783              	.LVL262:
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3784              		.loc 1 3000 2 is_stmt 1 discriminator 2 view .LVU1034
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3785              		.loc 1 3000 27 is_stmt 0 discriminator 2 view .LVU1035
 3786 0012 184B     		ldr	r3, .L288
 3787 0014 1B68     		ldr	r3, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3788              		.loc 1 3000 4 discriminator 2 view .LVU1036
 3789 0016 2BBB     		cbnz	r3, .L282
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3790              		.loc 1 3002 3 is_stmt 1 view .LVU1037
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3791              		.loc 1 3002 12 is_stmt 0 view .LVU1038
 3792 0018 251D     		adds	r5, r4, #4
 3793 001a 2846     		mov	r0, r5
 3794 001c FFF7FEFF 		bl	uxListRemove
 3795              	.LVL263:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3796              		.loc 1 3003 3 is_stmt 1 view .LVU1039
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3797              		.loc 1 3003 3 view .LVU1040
 3798 0020 E06A     		ldr	r0, [r4, #44]
 3799 0022 0123     		movs	r3, #1
 3800 0024 8340     		lsls	r3, r3, r0
 3801 0026 144A     		ldr	r2, .L288+4
 3802 0028 1168     		ldr	r1, [r2]
 3803 002a 0B43     		orrs	r3, r3, r1
 3804 002c 1360     		str	r3, [r2]
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3805              		.loc 1 3003 3 view .LVU1041
 3806 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3807 0032 2946     		mov	r1, r5
 3808 0034 114B     		ldr	r3, .L288+8
 3809 0036 03EB8000 		add	r0, r3, r0, lsl #2
 3810 003a FFF7FEFF 		bl	vListInsertEnd
 3811              	.LVL264:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3812              		.loc 1 3003 42 view .LVU1042
 3813              	.L283:
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3814              		.loc 1 3012 2 view .LVU1043
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3815              		.loc 1 3012 20 is_stmt 0 view .LVU1044
 3816 003e E26A     		ldr	r2, [r4, #44]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3817              		.loc 1 3012 47 view .LVU1045
 3818 0040 0F4B     		ldr	r3, .L288+12
 3819 0042 1B68     		ldr	r3, [r3]
 3820 0044 DB6A     		ldr	r3, [r3, #44]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3821              		.loc 1 3012 4 view .LVU1046
 3822 0046 9A42     		cmp	r2, r3
 3823 0048 11D9     		bls	.L285
ARM GAS  /tmp/ccGppmC5.s 			page 176


3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3824              		.loc 1 3017 3 is_stmt 1 view .LVU1047
 3825              	.LVL265:
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3826              		.loc 1 3021 3 view .LVU1048
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3827              		.loc 1 3021 17 is_stmt 0 view .LVU1049
 3828 004a 0120     		movs	r0, #1
 3829 004c 0D4B     		ldr	r3, .L288+16
 3830 004e 1860     		str	r0, [r3]
 3831              	.LVL266:
 3832              	.L279:
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3833              		.loc 1 3043 1 view .LVU1050
 3834 0050 38BD     		pop	{r3, r4, r5, pc}
 3835              	.LVL267:
 3836              	.L287:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3837              		.loc 1 2997 2 is_stmt 1 view .LVU1051
 3838              	.LBB172:
 3839              	.LBI172:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 3840              		.loc 2 191 30 view .LVU1052
 3841              	.LBB173:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3842              		.loc 2 193 1 view .LVU1053
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3843              		.loc 2 195 2 view .LVU1054
 3844              		.syntax unified
 3845              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3846 0052 4FF05003 			mov r3, #80												
 3847 0056 83F31188 		msr basepri, r3											
 3848 005a BFF36F8F 		isb														
 3849 005e BFF34F8F 		dsb														
 3850              	
 3851              	@ 0 "" 2
 3852              	.LVL268:
 3853              		.thumb
 3854              		.syntax unified
 3855              	.L281:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3856              		.loc 2 195 2 is_stmt 0 view .LVU1055
 3857              	.LBE173:
 3858              	.LBE172:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3859              		.loc 1 2997 2 is_stmt 1 discriminator 1 view .LVU1056
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3860              		.loc 1 2997 2 discriminator 1 view .LVU1057
 3861 0062 FEE7     		b	.L281
 3862              	.LVL269:
 3863              	.L282:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3864              		.loc 1 3009 3 view .LVU1058
 3865 0064 2946     		mov	r1, r5
 3866 0066 0848     		ldr	r0, .L288+20
 3867 0068 FFF7FEFF 		bl	vListInsertEnd
 3868              	.LVL270:
ARM GAS  /tmp/ccGppmC5.s 			page 177


 3869 006c E7E7     		b	.L283
 3870              	.L285:
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3871              		.loc 1 3025 11 is_stmt 0 view .LVU1059
 3872 006e 0020     		movs	r0, #0
 3873              	.LVL271:
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3874              		.loc 1 3042 2 is_stmt 1 view .LVU1060
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3875              		.loc 1 3042 9 is_stmt 0 view .LVU1061
 3876 0070 EEE7     		b	.L279
 3877              	.L289:
 3878 0072 00BF     		.align	2
 3879              	.L288:
 3880 0074 00000000 		.word	uxSchedulerSuspended
 3881 0078 00000000 		.word	uxTopReadyPriority
 3882 007c 00000000 		.word	pxReadyTasksLists
 3883 0080 00000000 		.word	pxCurrentTCB
 3884 0084 00000000 		.word	xYieldPending
 3885 0088 00000000 		.word	xPendingReadyList
 3886              		.cfi_endproc
 3887              	.LFE30:
 3889              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3890              		.align	1
 3891              		.global	vTaskRemoveFromUnorderedEventList
 3892              		.syntax unified
 3893              		.thumb
 3894              		.thumb_func
 3896              	vTaskRemoveFromUnorderedEventList:
 3897              	.LVL272:
 3898              	.LFB31:
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3899              		.loc 1 3047 1 is_stmt 1 view -0
 3900              		.cfi_startproc
 3901              		@ args = 0, pretend = 0, frame = 0
 3902              		@ frame_needed = 0, uses_anonymous_args = 0
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3903              		.loc 1 3047 1 is_stmt 0 view .LVU1063
 3904 0000 38B5     		push	{r3, r4, r5, lr}
 3905              	.LCFI35:
 3906              		.cfi_def_cfa_offset 16
 3907              		.cfi_offset 3, -16
 3908              		.cfi_offset 4, -12
 3909              		.cfi_offset 5, -8
 3910              		.cfi_offset 14, -4
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3911              		.loc 1 3048 1 is_stmt 1 view .LVU1064
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3912              		.loc 1 3052 2 view .LVU1065
 3913 0002 1C4B     		ldr	r3, .L298
 3914 0004 1B68     		ldr	r3, [r3]
 3915 0006 43B9     		cbnz	r3, .L291
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3916              		.loc 1 3052 2 view .LVU1066
 3917              	.LBB174:
 3918              	.LBI174:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
ARM GAS  /tmp/ccGppmC5.s 			page 178


 3919              		.loc 2 191 30 view .LVU1067
 3920              	.LBB175:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 3921              		.loc 2 193 1 view .LVU1068
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3922              		.loc 2 195 2 view .LVU1069
 3923              		.syntax unified
 3924              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 3925 0008 4FF05003 			mov r3, #80												
 3926 000c 83F31188 		msr basepri, r3											
 3927 0010 BFF36F8F 		isb														
 3928 0014 BFF34F8F 		dsb														
 3929              	
 3930              	@ 0 "" 2
 3931              	.LVL273:
 3932              		.thumb
 3933              		.syntax unified
 3934              	.L292:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 3935              		.loc 2 195 2 is_stmt 0 view .LVU1070
 3936              	.LBE175:
 3937              	.LBE174:
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3938              		.loc 1 3052 2 is_stmt 1 discriminator 1 view .LVU1071
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3939              		.loc 1 3052 2 discriminator 1 view .LVU1072
 3940 0018 FEE7     		b	.L292
 3941              	.L291:
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3942              		.loc 1 3052 49 discriminator 2 view .LVU1073
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3943              		.loc 1 3055 2 discriminator 2 view .LVU1074
 3944 001a 41F00041 		orr	r1, r1, #-2147483648
 3945              	.LVL274:
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3946              		.loc 1 3055 2 is_stmt 0 discriminator 2 view .LVU1075
 3947 001e 0160     		str	r1, [r0]
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3948              		.loc 1 3059 2 is_stmt 1 discriminator 2 view .LVU1076
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3949              		.loc 1 3059 17 is_stmt 0 discriminator 2 view .LVU1077
 3950 0020 C468     		ldr	r4, [r0, #12]
 3951              	.LVL275:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3952              		.loc 1 3060 2 is_stmt 1 discriminator 2 view .LVU1078
 3953 0022 F4B1     		cbz	r4, .L297
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3954              		.loc 1 3060 32 discriminator 2 view .LVU1079
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3955              		.loc 1 3061 2 discriminator 2 view .LVU1080
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3956              		.loc 1 3061 11 is_stmt 0 discriminator 2 view .LVU1081
 3957 0024 FFF7FEFF 		bl	uxListRemove
 3958              	.LVL276:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3959              		.loc 1 3066 2 is_stmt 1 discriminator 2 view .LVU1082
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
ARM GAS  /tmp/ccGppmC5.s 			page 179


 3960              		.loc 1 3066 11 is_stmt 0 discriminator 2 view .LVU1083
 3961 0028 251D     		adds	r5, r4, #4
 3962 002a 2846     		mov	r0, r5
 3963 002c FFF7FEFF 		bl	uxListRemove
 3964              	.LVL277:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3965              		.loc 1 3067 2 is_stmt 1 discriminator 2 view .LVU1084
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3966              		.loc 1 3067 2 discriminator 2 view .LVU1085
 3967 0030 E06A     		ldr	r0, [r4, #44]
 3968 0032 0123     		movs	r3, #1
 3969 0034 8340     		lsls	r3, r3, r0
 3970 0036 104A     		ldr	r2, .L298+4
 3971 0038 1168     		ldr	r1, [r2]
 3972 003a 0B43     		orrs	r3, r3, r1
 3973 003c 1360     		str	r3, [r2]
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3974              		.loc 1 3067 2 discriminator 2 view .LVU1086
 3975 003e 00EB8000 		add	r0, r0, r0, lsl #2
 3976 0042 2946     		mov	r1, r5
 3977 0044 0D4B     		ldr	r3, .L298+8
 3978 0046 03EB8000 		add	r0, r3, r0, lsl #2
 3979 004a FFF7FEFF 		bl	vListInsertEnd
 3980              	.LVL278:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3981              		.loc 1 3067 41 discriminator 2 view .LVU1087
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3982              		.loc 1 3069 2 discriminator 2 view .LVU1088
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3983              		.loc 1 3069 20 is_stmt 0 discriminator 2 view .LVU1089
 3984 004e E26A     		ldr	r2, [r4, #44]
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3985              		.loc 1 3069 47 discriminator 2 view .LVU1090
 3986 0050 0B4B     		ldr	r3, .L298+12
 3987 0052 1B68     		ldr	r3, [r3]
 3988 0054 DB6A     		ldr	r3, [r3, #44]
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3989              		.loc 1 3069 4 discriminator 2 view .LVU1091
 3990 0056 9A42     		cmp	r2, r3
 3991 0058 02D9     		bls	.L290
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3992              		.loc 1 3075 3 is_stmt 1 view .LVU1092
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3993              		.loc 1 3075 17 is_stmt 0 view .LVU1093
 3994 005a 0A4B     		ldr	r3, .L298+16
 3995 005c 0122     		movs	r2, #1
 3996 005e 1A60     		str	r2, [r3]
 3997              	.L290:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3998              		.loc 1 3077 1 view .LVU1094
 3999 0060 38BD     		pop	{r3, r4, r5, pc}
 4000              	.LVL279:
 4001              	.L297:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4002              		.loc 1 3060 2 is_stmt 1 view .LVU1095
 4003              	.LBB176:
 4004              	.LBI176:
ARM GAS  /tmp/ccGppmC5.s 			page 180


 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4005              		.loc 2 191 30 view .LVU1096
 4006              	.LBB177:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4007              		.loc 2 193 1 view .LVU1097
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4008              		.loc 2 195 2 view .LVU1098
 4009              		.syntax unified
 4010              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4011 0062 4FF05003 			mov r3, #80												
 4012 0066 83F31188 		msr basepri, r3											
 4013 006a BFF36F8F 		isb														
 4014 006e BFF34F8F 		dsb														
 4015              	
 4016              	@ 0 "" 2
 4017              	.LVL280:
 4018              		.thumb
 4019              		.syntax unified
 4020              	.L294:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4021              		.loc 2 195 2 is_stmt 0 view .LVU1099
 4022              	.LBE177:
 4023              	.LBE176:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4024              		.loc 1 3060 2 is_stmt 1 discriminator 2 view .LVU1100
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4025              		.loc 1 3060 2 discriminator 2 view .LVU1101
 4026 0072 FEE7     		b	.L294
 4027              	.L299:
 4028              		.align	2
 4029              	.L298:
 4030 0074 00000000 		.word	uxSchedulerSuspended
 4031 0078 00000000 		.word	uxTopReadyPriority
 4032 007c 00000000 		.word	pxReadyTasksLists
 4033 0080 00000000 		.word	pxCurrentTCB
 4034 0084 00000000 		.word	xYieldPending
 4035              		.cfi_endproc
 4036              	.LFE31:
 4038              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4039              		.align	1
 4040              		.global	vTaskSetTimeOutState
 4041              		.syntax unified
 4042              		.thumb
 4043              		.thumb_func
 4045              	vTaskSetTimeOutState:
 4046              	.LVL281:
 4047              	.LFB32:
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4048              		.loc 1 3081 1 view -0
 4049              		.cfi_startproc
 4050              		@ args = 0, pretend = 0, frame = 0
 4051              		@ frame_needed = 0, uses_anonymous_args = 0
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4052              		.loc 1 3082 2 view .LVU1103
 4053 0000 60B1     		cbz	r0, .L305
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4054              		.loc 1 3081 1 is_stmt 0 discriminator 2 view .LVU1104
ARM GAS  /tmp/ccGppmC5.s 			page 181


 4055 0002 10B5     		push	{r4, lr}
 4056              	.LCFI36:
 4057              		.cfi_def_cfa_offset 8
 4058              		.cfi_offset 4, -8
 4059              		.cfi_offset 14, -4
 4060 0004 0446     		mov	r4, r0
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4061              		.loc 1 3082 27 is_stmt 1 discriminator 2 view .LVU1105
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4062              		.loc 1 3083 2 discriminator 2 view .LVU1106
 4063 0006 FFF7FEFF 		bl	vPortEnterCritical
 4064              	.LVL282:
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4065              		.loc 1 3085 3 discriminator 2 view .LVU1107
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4066              		.loc 1 3085 29 is_stmt 0 discriminator 2 view .LVU1108
 4067 000a 094B     		ldr	r3, .L306
 4068 000c 1B68     		ldr	r3, [r3]
 4069 000e 2360     		str	r3, [r4]
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4070              		.loc 1 3086 3 is_stmt 1 discriminator 2 view .LVU1109
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4071              		.loc 1 3086 30 is_stmt 0 discriminator 2 view .LVU1110
 4072 0010 084B     		ldr	r3, .L306+4
 4073 0012 1B68     		ldr	r3, [r3]
 4074 0014 6360     		str	r3, [r4, #4]
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4075              		.loc 1 3088 2 is_stmt 1 discriminator 2 view .LVU1111
 4076 0016 FFF7FEFF 		bl	vPortExitCritical
 4077              	.LVL283:
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4078              		.loc 1 3089 1 is_stmt 0 discriminator 2 view .LVU1112
 4079 001a 10BD     		pop	{r4, pc}
 4080              	.LVL284:
 4081              	.L305:
 4082              	.LCFI37:
 4083              		.cfi_def_cfa_offset 0
 4084              		.cfi_restore 4
 4085              		.cfi_restore 14
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4086              		.loc 1 3082 2 is_stmt 1 view .LVU1113
 4087              	.LBB178:
 4088              	.LBI178:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4089              		.loc 2 191 30 view .LVU1114
 4090              	.LBB179:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4091              		.loc 2 193 1 view .LVU1115
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4092              		.loc 2 195 2 view .LVU1116
 4093              		.syntax unified
 4094              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4095 001c 4FF05003 			mov r3, #80												
 4096 0020 83F31188 		msr basepri, r3											
 4097 0024 BFF36F8F 		isb														
 4098 0028 BFF34F8F 		dsb														
 4099              	
ARM GAS  /tmp/ccGppmC5.s 			page 182


 4100              	@ 0 "" 2
 4101              	.LVL285:
 4102              		.thumb
 4103              		.syntax unified
 4104              	.L302:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4105              		.loc 2 195 2 is_stmt 0 view .LVU1117
 4106              	.LBE179:
 4107              	.LBE178:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4108              		.loc 1 3082 2 is_stmt 1 discriminator 1 view .LVU1118
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4109              		.loc 1 3082 2 discriminator 1 view .LVU1119
 4110 002c FEE7     		b	.L302
 4111              	.L307:
 4112 002e 00BF     		.align	2
 4113              	.L306:
 4114 0030 00000000 		.word	xNumOfOverflows
 4115 0034 00000000 		.word	xTickCount
 4116              		.cfi_endproc
 4117              	.LFE32:
 4119              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4120              		.align	1
 4121              		.global	vTaskInternalSetTimeOutState
 4122              		.syntax unified
 4123              		.thumb
 4124              		.thumb_func
 4126              	vTaskInternalSetTimeOutState:
 4127              	.LVL286:
 4128              	.LFB33:
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 4129              		.loc 1 3093 1 view -0
 4130              		.cfi_startproc
 4131              		@ args = 0, pretend = 0, frame = 0
 4132              		@ frame_needed = 0, uses_anonymous_args = 0
 4133              		@ link register save eliminated.
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4134              		.loc 1 3095 2 view .LVU1121
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4135              		.loc 1 3095 28 is_stmt 0 view .LVU1122
 4136 0000 034B     		ldr	r3, .L309
 4137 0002 1B68     		ldr	r3, [r3]
 4138 0004 0360     		str	r3, [r0]
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4139              		.loc 1 3096 2 is_stmt 1 view .LVU1123
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4140              		.loc 1 3096 29 is_stmt 0 view .LVU1124
 4141 0006 034B     		ldr	r3, .L309+4
 4142 0008 1B68     		ldr	r3, [r3]
 4143 000a 4360     		str	r3, [r0, #4]
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4144              		.loc 1 3097 1 view .LVU1125
 4145 000c 7047     		bx	lr
 4146              	.L310:
 4147 000e 00BF     		.align	2
 4148              	.L309:
 4149 0010 00000000 		.word	xNumOfOverflows
ARM GAS  /tmp/ccGppmC5.s 			page 183


 4150 0014 00000000 		.word	xTickCount
 4151              		.cfi_endproc
 4152              	.LFE33:
 4154              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4155              		.align	1
 4156              		.global	xTaskCheckForTimeOut
 4157              		.syntax unified
 4158              		.thumb
 4159              		.thumb_func
 4161              	xTaskCheckForTimeOut:
 4162              	.LVL287:
 4163              	.LFB34:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4164              		.loc 1 3101 1 is_stmt 1 view -0
 4165              		.cfi_startproc
 4166              		@ args = 0, pretend = 0, frame = 0
 4167              		@ frame_needed = 0, uses_anonymous_args = 0
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4168              		.loc 1 3102 1 view .LVU1127
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4169              		.loc 1 3104 2 view .LVU1128
 4170 0000 D8B1     		cbz	r0, .L323
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4171              		.loc 1 3101 1 is_stmt 0 discriminator 2 view .LVU1129
 4172 0002 70B5     		push	{r4, r5, r6, lr}
 4173              	.LCFI38:
 4174              		.cfi_def_cfa_offset 16
 4175              		.cfi_offset 4, -16
 4176              		.cfi_offset 5, -12
 4177              		.cfi_offset 6, -8
 4178              		.cfi_offset 14, -4
 4179 0004 0C46     		mov	r4, r1
 4180 0006 0546     		mov	r5, r0
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4181              		.loc 1 3104 27 is_stmt 1 discriminator 2 view .LVU1130
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4182              		.loc 1 3105 2 discriminator 2 view .LVU1131
 4183 0008 01B3     		cbz	r1, .L324
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4184              		.loc 1 3105 31 discriminator 2 view .LVU1132
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4185              		.loc 1 3107 2 discriminator 2 view .LVU1133
 4186 000a FFF7FEFF 		bl	vPortEnterCritical
 4187              	.LVL288:
 4188              	.LBB180:
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4189              		.loc 1 3110 3 discriminator 2 view .LVU1134
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4190              		.loc 1 3110 20 is_stmt 0 discriminator 2 view .LVU1135
 4191 000e 1B4B     		ldr	r3, .L326
 4192 0010 1968     		ldr	r1, [r3]
 4193              	.LVL289:
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4194              		.loc 1 3111 3 is_stmt 1 discriminator 2 view .LVU1136
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4195              		.loc 1 3111 62 is_stmt 0 discriminator 2 view .LVU1137
 4196 0012 6B68     		ldr	r3, [r5, #4]
ARM GAS  /tmp/ccGppmC5.s 			page 184


3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4197              		.loc 1 3111 20 discriminator 2 view .LVU1138
 4198 0014 C81A     		subs	r0, r1, r3
 4199              	.LVL290:
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4200              		.loc 1 3125 4 is_stmt 1 discriminator 2 view .LVU1139
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4201              		.loc 1 3125 8 is_stmt 0 discriminator 2 view .LVU1140
 4202 0016 2268     		ldr	r2, [r4]
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4203              		.loc 1 3125 6 discriminator 2 view .LVU1141
 4204 0018 B2F1FF3F 		cmp	r2, #-1
 4205 001c 27D0     		beq	.L319
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4206              		.loc 1 3135 3 is_stmt 1 view .LVU1142
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4207              		.loc 1 3135 25 is_stmt 0 view .LVU1143
 4208 001e 184E     		ldr	r6, .L326+4
 4209 0020 3668     		ldr	r6, [r6]
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4210              		.loc 1 3135 5 view .LVU1144
 4211 0022 D5F800C0 		ldr	ip, [r5]
 4212 0026 B445     		cmp	ip, r6
 4213 0028 01D0     		beq	.L317
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4214              		.loc 1 3135 56 discriminator 1 view .LVU1145
 4215 002a 8B42     		cmp	r3, r1
 4216 002c 24D9     		bls	.L320
 4217              	.L317:
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4218              		.loc 1 3144 8 is_stmt 1 view .LVU1146
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4219              		.loc 1 3144 10 is_stmt 0 view .LVU1147
 4220 002e 8242     		cmp	r2, r0
 4221 0030 15D8     		bhi	.L325
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4222              		.loc 1 3153 4 is_stmt 1 view .LVU1148
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4223              		.loc 1 3153 19 is_stmt 0 view .LVU1149
 4224 0032 0023     		movs	r3, #0
 4225 0034 2360     		str	r3, [r4]
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4226              		.loc 1 3154 4 is_stmt 1 view .LVU1150
 4227              	.LVL291:
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4228              		.loc 1 3154 12 is_stmt 0 view .LVU1151
 4229 0036 0124     		movs	r4, #1
 4230              	.LVL292:
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4231              		.loc 1 3154 12 view .LVU1152
 4232 0038 1AE0     		b	.L316
 4233              	.LVL293:
 4234              	.L323:
 4235              	.LCFI39:
 4236              		.cfi_def_cfa_offset 0
 4237              		.cfi_restore 4
 4238              		.cfi_restore 5
ARM GAS  /tmp/ccGppmC5.s 			page 185


 4239              		.cfi_restore 6
 4240              		.cfi_restore 14
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4241              		.loc 1 3154 12 view .LVU1153
 4242              	.LBE180:
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4243              		.loc 1 3104 2 is_stmt 1 view .LVU1154
 4244              	.LBB181:
 4245              	.LBI181:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4246              		.loc 2 191 30 view .LVU1155
 4247              	.LBB182:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4248              		.loc 2 193 1 view .LVU1156
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4249              		.loc 2 195 2 view .LVU1157
 4250              		.syntax unified
 4251              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4252 003a 4FF05003 			mov r3, #80												
 4253 003e 83F31188 		msr basepri, r3											
 4254 0042 BFF36F8F 		isb														
 4255 0046 BFF34F8F 		dsb														
 4256              	
 4257              	@ 0 "" 2
 4258              	.LVL294:
 4259              		.thumb
 4260              		.syntax unified
 4261              	.L313:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4262              		.loc 2 195 2 is_stmt 0 view .LVU1158
 4263              	.LBE182:
 4264              	.LBE181:
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4265              		.loc 1 3104 2 is_stmt 1 discriminator 1 view .LVU1159
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4266              		.loc 1 3104 2 discriminator 1 view .LVU1160
 4267 004a FEE7     		b	.L313
 4268              	.L324:
 4269              	.LCFI40:
 4270              		.cfi_def_cfa_offset 16
 4271              		.cfi_offset 4, -16
 4272              		.cfi_offset 5, -12
 4273              		.cfi_offset 6, -8
 4274              		.cfi_offset 14, -4
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4275              		.loc 1 3105 2 view .LVU1161
 4276              	.LBB183:
 4277              	.LBI183:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4278              		.loc 2 191 30 view .LVU1162
 4279              	.LBB184:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4280              		.loc 2 193 1 view .LVU1163
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4281              		.loc 2 195 2 view .LVU1164
 4282              		.syntax unified
 4283              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  /tmp/ccGppmC5.s 			page 186


 4284 004c 4FF05003 			mov r3, #80												
 4285 0050 83F31188 		msr basepri, r3											
 4286 0054 BFF36F8F 		isb														
 4287 0058 BFF34F8F 		dsb														
 4288              	
 4289              	@ 0 "" 2
 4290              	.LVL295:
 4291              		.thumb
 4292              		.syntax unified
 4293              	.L315:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4294              		.loc 2 195 2 is_stmt 0 view .LVU1165
 4295              	.LBE184:
 4296              	.LBE183:
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4297              		.loc 1 3105 2 is_stmt 1 discriminator 2 view .LVU1166
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4298              		.loc 1 3105 2 discriminator 2 view .LVU1167
 4299 005c FEE7     		b	.L315
 4300              	.LVL296:
 4301              	.L325:
 4302              	.LBB185:
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4303              		.loc 1 3147 4 view .LVU1168
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4304              		.loc 1 3147 19 is_stmt 0 view .LVU1169
 4305 005e 5B1A     		subs	r3, r3, r1
 4306 0060 1344     		add	r3, r3, r2
 4307 0062 2360     		str	r3, [r4]
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4308              		.loc 1 3148 4 is_stmt 1 view .LVU1170
 4309 0064 2846     		mov	r0, r5
 4310              	.LVL297:
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4311              		.loc 1 3148 4 is_stmt 0 view .LVU1171
 4312 0066 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4313              	.LVL298:
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4314              		.loc 1 3149 4 is_stmt 1 view .LVU1172
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4315              		.loc 1 3149 12 is_stmt 0 view .LVU1173
 4316 006a 0024     		movs	r4, #0
 4317              	.LVL299:
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4318              		.loc 1 3149 12 view .LVU1174
 4319 006c 00E0     		b	.L316
 4320              	.LVL300:
 4321              	.L319:
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4322              		.loc 1 3130 13 view .LVU1175
 4323 006e 0024     		movs	r4, #0
 4324              	.LVL301:
 4325              	.L316:
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4326              		.loc 1 3130 13 view .LVU1176
 4327              	.LBE185:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 187


 4328              		.loc 1 3157 2 is_stmt 1 view .LVU1177
 4329 0070 FFF7FEFF 		bl	vPortExitCritical
 4330              	.LVL302:
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4331              		.loc 1 3159 2 view .LVU1178
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4332              		.loc 1 3160 1 is_stmt 0 view .LVU1179
 4333 0074 2046     		mov	r0, r4
 4334 0076 70BD     		pop	{r4, r5, r6, pc}
 4335              	.LVL303:
 4336              	.L320:
 4337              	.LBB186:
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4338              		.loc 1 3142 12 view .LVU1180
 4339 0078 0124     		movs	r4, #1
 4340              	.LVL304:
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4341              		.loc 1 3142 12 view .LVU1181
 4342 007a F9E7     		b	.L316
 4343              	.L327:
 4344              		.align	2
 4345              	.L326:
 4346 007c 00000000 		.word	xTickCount
 4347 0080 00000000 		.word	xNumOfOverflows
 4348              	.LBE186:
 4349              		.cfi_endproc
 4350              	.LFE34:
 4352              		.section	.text.vTaskMissedYield,"ax",%progbits
 4353              		.align	1
 4354              		.global	vTaskMissedYield
 4355              		.syntax unified
 4356              		.thumb
 4357              		.thumb_func
 4359              	vTaskMissedYield:
 4360              	.LFB35:
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4361              		.loc 1 3164 1 is_stmt 1 view -0
 4362              		.cfi_startproc
 4363              		@ args = 0, pretend = 0, frame = 0
 4364              		@ frame_needed = 0, uses_anonymous_args = 0
 4365              		@ link register save eliminated.
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4366              		.loc 1 3165 2 view .LVU1183
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4367              		.loc 1 3165 16 is_stmt 0 view .LVU1184
 4368 0000 014B     		ldr	r3, .L329
 4369 0002 0122     		movs	r2, #1
 4370 0004 1A60     		str	r2, [r3]
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4371              		.loc 1 3166 1 view .LVU1185
 4372 0006 7047     		bx	lr
 4373              	.L330:
 4374              		.align	2
 4375              	.L329:
 4376 0008 00000000 		.word	xYieldPending
 4377              		.cfi_endproc
 4378              	.LFE35:
ARM GAS  /tmp/ccGppmC5.s 			page 188


 4380              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4381              		.align	1
 4382              		.global	xTaskGetCurrentTaskHandle
 4383              		.syntax unified
 4384              		.thumb
 4385              		.thumb_func
 4387              	xTaskGetCurrentTaskHandle:
 4388              	.LFB41:
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4389              		.loc 1 3751 2 is_stmt 1 view -0
 4390              		.cfi_startproc
 4391              		@ args = 0, pretend = 0, frame = 0
 4392              		@ frame_needed = 0, uses_anonymous_args = 0
 4393              		@ link register save eliminated.
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4394              		.loc 1 3752 2 view .LVU1187
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4395              		.loc 1 3757 3 view .LVU1188
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4396              		.loc 1 3757 11 is_stmt 0 view .LVU1189
 4397 0000 014B     		ldr	r3, .L332
 4398 0002 1868     		ldr	r0, [r3]
 4399              	.LVL305:
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4400              		.loc 1 3759 3 is_stmt 1 view .LVU1190
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4401              		.loc 1 3760 2 is_stmt 0 view .LVU1191
 4402 0004 7047     		bx	lr
 4403              	.L333:
 4404 0006 00BF     		.align	2
 4405              	.L332:
 4406 0008 00000000 		.word	pxCurrentTCB
 4407              		.cfi_endproc
 4408              	.LFE41:
 4410              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4411              		.align	1
 4412              		.global	xTaskGetSchedulerState
 4413              		.syntax unified
 4414              		.thumb
 4415              		.thumb_func
 4417              	xTaskGetSchedulerState:
 4418              	.LFB42:
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4419              		.loc 1 3768 2 is_stmt 1 view -0
 4420              		.cfi_startproc
 4421              		@ args = 0, pretend = 0, frame = 0
 4422              		@ frame_needed = 0, uses_anonymous_args = 0
 4423              		@ link register save eliminated.
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4424              		.loc 1 3769 2 view .LVU1193
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4425              		.loc 1 3771 3 view .LVU1194
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4426              		.loc 1 3771 25 is_stmt 0 view .LVU1195
 4427 0000 054B     		ldr	r3, .L339
 4428 0002 1B68     		ldr	r3, [r3]
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccGppmC5.s 			page 189


 4429              		.loc 1 3771 5 view .LVU1196
 4430 0004 33B1     		cbz	r3, .L336
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4431              		.loc 1 3777 4 is_stmt 1 view .LVU1197
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4432              		.loc 1 3777 29 is_stmt 0 view .LVU1198
 4433 0006 054B     		ldr	r3, .L339+4
 4434 0008 1B68     		ldr	r3, [r3]
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4435              		.loc 1 3777 6 view .LVU1199
 4436 000a 0BB1     		cbz	r3, .L338
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4437              		.loc 1 3783 13 view .LVU1200
 4438 000c 0020     		movs	r0, #0
 4439              	.LVL306:
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4440              		.loc 1 3787 3 is_stmt 1 view .LVU1201
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4441              		.loc 1 3788 2 is_stmt 0 view .LVU1202
 4442 000e 7047     		bx	lr
 4443              	.LVL307:
 4444              	.L338:
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4445              		.loc 1 3779 13 view .LVU1203
 4446 0010 0220     		movs	r0, #2
 4447 0012 7047     		bx	lr
 4448              	.L336:
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4449              		.loc 1 3773 12 view .LVU1204
 4450 0014 0120     		movs	r0, #1
 4451 0016 7047     		bx	lr
 4452              	.L340:
 4453              		.align	2
 4454              	.L339:
 4455 0018 00000000 		.word	xSchedulerRunning
 4456 001c 00000000 		.word	uxSchedulerSuspended
 4457              		.cfi_endproc
 4458              	.LFE42:
 4460              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4461              		.align	1
 4462              		.global	xTaskPriorityInherit
 4463              		.syntax unified
 4464              		.thumb
 4465              		.thumb_func
 4467              	xTaskPriorityInherit:
 4468              	.LVL308:
 4469              	.LFB43:
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 4470              		.loc 1 3796 2 is_stmt 1 view -0
 4471              		.cfi_startproc
 4472              		@ args = 0, pretend = 0, frame = 0
 4473              		@ frame_needed = 0, uses_anonymous_args = 0
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4474              		.loc 1 3797 2 view .LVU1206
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4475              		.loc 1 3798 2 view .LVU1207
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccGppmC5.s 			page 190


 4476              		.loc 1 3803 3 view .LVU1208
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4477              		.loc 1 3803 5 is_stmt 0 view .LVU1209
 4478 0000 0028     		cmp	r0, #0
 4479 0002 51D0     		beq	.L348
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 4480              		.loc 1 3796 2 view .LVU1210
 4481 0004 38B5     		push	{r3, r4, r5, lr}
 4482              	.LCFI41:
 4483              		.cfi_def_cfa_offset 16
 4484              		.cfi_offset 3, -16
 4485              		.cfi_offset 4, -12
 4486              		.cfi_offset 5, -8
 4487              		.cfi_offset 14, -4
 4488 0006 0446     		mov	r4, r0
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4489              		.loc 1 3808 4 is_stmt 1 view .LVU1211
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4490              		.loc 1 3808 24 is_stmt 0 view .LVU1212
 4491 0008 C36A     		ldr	r3, [r0, #44]
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4492              		.loc 1 3808 51 view .LVU1213
 4493 000a 294A     		ldr	r2, .L355
 4494 000c 1268     		ldr	r2, [r2]
 4495 000e D26A     		ldr	r2, [r2, #44]
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4496              		.loc 1 3808 6 view .LVU1214
 4497 0010 9342     		cmp	r3, r2
 4498 0012 41D2     		bcs	.L343
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4499              		.loc 1 3813 5 is_stmt 1 view .LVU1215
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4500              		.loc 1 3813 11 is_stmt 0 view .LVU1216
 4501 0014 8269     		ldr	r2, [r0, #24]
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4502              		.loc 1 3813 7 view .LVU1217
 4503 0016 002A     		cmp	r2, #0
 4504 0018 05DB     		blt	.L344
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4505              		.loc 1 3815 6 is_stmt 1 view .LVU1218
 4506 001a 254A     		ldr	r2, .L355
 4507 001c 1268     		ldr	r2, [r2]
 4508 001e D26A     		ldr	r2, [r2, #44]
 4509 0020 C2F10702 		rsb	r2, r2, #7
 4510 0024 8261     		str	r2, [r0, #24]
 4511              	.L344:
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4512              		.loc 1 3819 30 view .LVU1219
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4513              		.loc 1 3824 5 view .LVU1220
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4514              		.loc 1 3824 9 is_stmt 0 view .LVU1221
 4515 0026 6169     		ldr	r1, [r4, #20]
 4516 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4517 002c 214A     		ldr	r2, .L355+4
 4518 002e 02EB8303 		add	r3, r2, r3, lsl #2
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccGppmC5.s 			page 191


 4519              		.loc 1 3824 130 view .LVU1222
 4520 0032 9942     		cmp	r1, r3
 4521 0034 05D0     		beq	.L354
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4522              		.loc 1 3842 6 is_stmt 1 view .LVU1223
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4523              		.loc 1 3842 49 is_stmt 0 view .LVU1224
 4524 0036 1E4B     		ldr	r3, .L355
 4525 0038 1B68     		ldr	r3, [r3]
 4526 003a DB6A     		ldr	r3, [r3, #44]
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4527              		.loc 1 3842 35 view .LVU1225
 4528 003c E362     		str	r3, [r4, #44]
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4529              		.loc 1 3848 13 view .LVU1226
 4530 003e 0120     		movs	r0, #1
 4531              	.LVL309:
 4532              	.L341:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4533              		.loc 1 3875 2 view .LVU1227
 4534 0040 38BD     		pop	{r3, r4, r5, pc}
 4535              	.LVL310:
 4536              	.L354:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4537              		.loc 1 3826 6 is_stmt 1 view .LVU1228
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4538              		.loc 1 3826 10 is_stmt 0 view .LVU1229
 4539 0042 251D     		adds	r5, r4, #4
 4540 0044 2846     		mov	r0, r5
 4541              	.LVL311:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4542              		.loc 1 3826 10 view .LVU1230
 4543 0046 FFF7FEFF 		bl	uxListRemove
 4544              	.LVL312:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4545              		.loc 1 3826 8 view .LVU1231
 4546 004a A0B1     		cbz	r0, .L346
 4547              	.L347:
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4548              		.loc 1 3832 31 is_stmt 1 view .LVU1232
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4549              		.loc 1 3836 6 view .LVU1233
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4550              		.loc 1 3836 49 is_stmt 0 view .LVU1234
 4551 004c 184B     		ldr	r3, .L355
 4552 004e 1B68     		ldr	r3, [r3]
 4553 0050 D86A     		ldr	r0, [r3, #44]
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4554              		.loc 1 3836 35 view .LVU1235
 4555 0052 E062     		str	r0, [r4, #44]
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4556              		.loc 1 3837 6 is_stmt 1 view .LVU1236
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4557              		.loc 1 3837 6 view .LVU1237
 4558 0054 0124     		movs	r4, #1
 4559              	.LVL313:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccGppmC5.s 			page 192


 4560              		.loc 1 3837 6 is_stmt 0 view .LVU1238
 4561 0056 04FA00F3 		lsl	r3, r4, r0
 4562 005a 174A     		ldr	r2, .L355+8
 4563 005c 1168     		ldr	r1, [r2]
 4564 005e 0B43     		orrs	r3, r3, r1
 4565 0060 1360     		str	r3, [r2]
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4566              		.loc 1 3837 6 is_stmt 1 view .LVU1239
 4567 0062 00EB8000 		add	r0, r0, r0, lsl #2
 4568 0066 2946     		mov	r1, r5
 4569 0068 124B     		ldr	r3, .L355+4
 4570 006a 03EB8000 		add	r0, r3, r0, lsl #2
 4571 006e FFF7FEFF 		bl	vListInsertEnd
 4572              	.LVL314:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4573              		.loc 1 3837 47 view .LVU1240
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4574              		.loc 1 3848 13 is_stmt 0 view .LVU1241
 4575 0072 2046     		mov	r0, r4
 4576 0074 E4E7     		b	.L341
 4577              	.LVL315:
 4578              	.L346:
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4579              		.loc 1 3828 7 is_stmt 1 view .LVU1242
 4580 0076 E26A     		ldr	r2, [r4, #44]
 4581 0078 02EB8203 		add	r3, r2, r2, lsl #2
 4582 007c 9B00     		lsls	r3, r3, #2
 4583 007e 0D49     		ldr	r1, .L355+4
 4584 0080 CB58     		ldr	r3, [r1, r3]
 4585 0082 002B     		cmp	r3, #0
 4586 0084 E2D1     		bne	.L347
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4587              		.loc 1 3828 7 discriminator 1 view .LVU1243
 4588 0086 0123     		movs	r3, #1
 4589 0088 03FA02F2 		lsl	r2, r3, r2
 4590 008c 0A49     		ldr	r1, .L355+8
 4591 008e 0B68     		ldr	r3, [r1]
 4592 0090 23EA0203 		bic	r3, r3, r2
 4593 0094 0B60     		str	r3, [r1]
 4594 0096 D9E7     		b	.L347
 4595              	.LVL316:
 4596              	.L343:
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4597              		.loc 1 3852 5 view .LVU1244
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4598              		.loc 1 3852 25 is_stmt 0 view .LVU1245
 4599 0098 426C     		ldr	r2, [r0, #68]
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4600              		.loc 1 3852 56 view .LVU1246
 4601 009a 054B     		ldr	r3, .L355
 4602 009c 1B68     		ldr	r3, [r3]
 4603 009e DB6A     		ldr	r3, [r3, #44]
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4604              		.loc 1 3852 7 view .LVU1247
 4605 00a0 9A42     		cmp	r2, r3
 4606 00a2 03D3     		bcc	.L349
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 193


 4607              		.loc 1 3798 13 view .LVU1248
 4608 00a4 0020     		movs	r0, #0
 4609              	.LVL317:
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4610              		.loc 1 3798 13 view .LVU1249
 4611 00a6 CBE7     		b	.L341
 4612              	.LVL318:
 4613              	.L348:
 4614              	.LCFI42:
 4615              		.cfi_def_cfa_offset 0
 4616              		.cfi_restore 3
 4617              		.cfi_restore 4
 4618              		.cfi_restore 5
 4619              		.cfi_restore 14
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4620              		.loc 1 3798 13 view .LVU1250
 4621 00a8 0020     		movs	r0, #0
 4622              	.LVL319:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4623              		.loc 1 3875 2 view .LVU1251
 4624 00aa 7047     		bx	lr
 4625              	.LVL320:
 4626              	.L349:
 4627              	.LCFI43:
 4628              		.cfi_def_cfa_offset 16
 4629              		.cfi_offset 3, -16
 4630              		.cfi_offset 4, -12
 4631              		.cfi_offset 5, -8
 4632              		.cfi_offset 14, -4
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4633              		.loc 1 3861 14 view .LVU1252
 4634 00ac 0120     		movs	r0, #1
 4635              	.LVL321:
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4636              		.loc 1 3871 28 is_stmt 1 view .LVU1253
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4637              		.loc 1 3874 3 view .LVU1254
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4638              		.loc 1 3874 10 is_stmt 0 view .LVU1255
 4639 00ae C7E7     		b	.L341
 4640              	.L356:
 4641              		.align	2
 4642              	.L355:
 4643 00b0 00000000 		.word	pxCurrentTCB
 4644 00b4 00000000 		.word	pxReadyTasksLists
 4645 00b8 00000000 		.word	uxTopReadyPriority
 4646              		.cfi_endproc
 4647              	.LFE43:
 4649              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4650              		.align	1
 4651              		.global	xTaskPriorityDisinherit
 4652              		.syntax unified
 4653              		.thumb
 4654              		.thumb_func
 4656              	xTaskPriorityDisinherit:
 4657              	.LVL322:
 4658              	.LFB44:
ARM GAS  /tmp/ccGppmC5.s 			page 194


3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4659              		.loc 1 3883 2 is_stmt 1 view -0
 4660              		.cfi_startproc
 4661              		@ args = 0, pretend = 0, frame = 0
 4662              		@ frame_needed = 0, uses_anonymous_args = 0
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4663              		.loc 1 3884 2 view .LVU1257
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4664              		.loc 1 3885 2 view .LVU1258
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4665              		.loc 1 3887 3 view .LVU1259
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4666              		.loc 1 3887 5 is_stmt 0 view .LVU1260
 4667 0000 0028     		cmp	r0, #0
 4668 0002 4BD0     		beq	.L364
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4669              		.loc 1 3883 2 view .LVU1261
 4670 0004 38B5     		push	{r3, r4, r5, lr}
 4671              	.LCFI44:
 4672              		.cfi_def_cfa_offset 16
 4673              		.cfi_offset 3, -16
 4674              		.cfi_offset 4, -12
 4675              		.cfi_offset 5, -8
 4676              		.cfi_offset 14, -4
 4677 0006 0446     		mov	r4, r0
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4678              		.loc 1 3893 4 is_stmt 1 view .LVU1262
 4679 0008 264B     		ldr	r3, .L372
 4680 000a 1B68     		ldr	r3, [r3]
 4681 000c 8342     		cmp	r3, r0
 4682 000e 08D0     		beq	.L359
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4683              		.loc 1 3893 4 view .LVU1263
 4684              	.LBB187:
 4685              	.LBI187:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4686              		.loc 2 191 30 view .LVU1264
 4687              	.LBB188:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4688              		.loc 2 193 1 view .LVU1265
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4689              		.loc 2 195 2 view .LVU1266
 4690              		.syntax unified
 4691              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4692 0010 4FF05003 			mov r3, #80												
 4693 0014 83F31188 		msr basepri, r3											
 4694 0018 BFF36F8F 		isb														
 4695 001c BFF34F8F 		dsb														
 4696              	
 4697              	@ 0 "" 2
 4698              	.LVL323:
 4699              		.thumb
 4700              		.syntax unified
 4701              	.L360:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4702              		.loc 2 195 2 is_stmt 0 view .LVU1267
 4703              	.LBE188:
ARM GAS  /tmp/ccGppmC5.s 			page 195


 4704              	.LBE187:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4705              		.loc 1 3893 4 is_stmt 1 discriminator 1 view .LVU1268
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4706              		.loc 1 3893 4 discriminator 1 view .LVU1269
 4707 0020 FEE7     		b	.L360
 4708              	.L359:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4709              		.loc 1 3893 41 discriminator 2 view .LVU1270
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4710              		.loc 1 3894 4 discriminator 2 view .LVU1271
 4711 0022 836C     		ldr	r3, [r0, #72]
 4712 0024 43B9     		cbnz	r3, .L361
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4713              		.loc 1 3894 4 view .LVU1272
 4714              	.LBB189:
 4715              	.LBI189:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4716              		.loc 2 191 30 view .LVU1273
 4717              	.LBB190:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4718              		.loc 2 193 1 view .LVU1274
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4719              		.loc 2 195 2 view .LVU1275
 4720              		.syntax unified
 4721              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4722 0026 4FF05003 			mov r3, #80												
 4723 002a 83F31188 		msr basepri, r3											
 4724 002e BFF36F8F 		isb														
 4725 0032 BFF34F8F 		dsb														
 4726              	
 4727              	@ 0 "" 2
 4728              	.LVL324:
 4729              		.thumb
 4730              		.syntax unified
 4731              	.L362:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4732              		.loc 2 195 2 is_stmt 0 view .LVU1276
 4733              	.LBE190:
 4734              	.LBE189:
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4735              		.loc 1 3894 4 is_stmt 1 discriminator 2 view .LVU1277
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4736              		.loc 1 3894 4 discriminator 2 view .LVU1278
 4737 0036 FEE7     		b	.L362
 4738              	.L361:
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4739              		.loc 1 3894 40 discriminator 2 view .LVU1279
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4740              		.loc 1 3895 4 discriminator 2 view .LVU1280
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4741              		.loc 1 3895 28 is_stmt 0 discriminator 2 view .LVU1281
 4742 0038 013B     		subs	r3, r3, #1
 4743 003a 8364     		str	r3, [r0, #72]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4744              		.loc 1 3899 4 is_stmt 1 discriminator 2 view .LVU1282
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccGppmC5.s 			page 196


 4745              		.loc 1 3899 13 is_stmt 0 discriminator 2 view .LVU1283
 4746 003c C16A     		ldr	r1, [r0, #44]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4747              		.loc 1 3899 34 discriminator 2 view .LVU1284
 4748 003e 426C     		ldr	r2, [r0, #68]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4749              		.loc 1 3899 6 discriminator 2 view .LVU1285
 4750 0040 9142     		cmp	r1, r2
 4751 0042 2DD0     		beq	.L365
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4752              		.loc 1 3902 5 is_stmt 1 view .LVU1286
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4753              		.loc 1 3902 7 is_stmt 0 view .LVU1287
 4754 0044 0BB1     		cbz	r3, .L371
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4755              		.loc 1 3885 13 view .LVU1288
 4756 0046 0020     		movs	r0, #0
 4757              	.LVL325:
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4758              		.loc 1 3951 28 is_stmt 1 view .LVU1289
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4759              		.loc 1 3954 3 view .LVU1290
 4760              	.L357:
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4761              		.loc 1 3955 2 is_stmt 0 view .LVU1291
 4762 0048 38BD     		pop	{r3, r4, r5, pc}
 4763              	.LVL326:
 4764              	.L371:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4765              		.loc 1 3909 6 is_stmt 1 view .LVU1292
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4766              		.loc 1 3909 10 is_stmt 0 view .LVU1293
 4767 004a 051D     		adds	r5, r0, #4
 4768 004c 2846     		mov	r0, r5
 4769              	.LVL327:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4770              		.loc 1 3909 10 view .LVU1294
 4771 004e FFF7FEFF 		bl	uxListRemove
 4772              	.LVL328:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4773              		.loc 1 3909 8 view .LVU1295
 4774 0052 68B9     		cbnz	r0, .L363
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4775              		.loc 1 3911 7 is_stmt 1 view .LVU1296
 4776 0054 E36A     		ldr	r3, [r4, #44]
 4777 0056 03EB8302 		add	r2, r3, r3, lsl #2
 4778 005a 9200     		lsls	r2, r2, #2
 4779 005c 1249     		ldr	r1, .L372+4
 4780 005e 8A58     		ldr	r2, [r1, r2]
 4781 0060 32B9     		cbnz	r2, .L363
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4782              		.loc 1 3911 7 discriminator 1 view .LVU1297
 4783 0062 0122     		movs	r2, #1
 4784 0064 9A40     		lsls	r2, r2, r3
 4785 0066 1149     		ldr	r1, .L372+8
 4786 0068 0B68     		ldr	r3, [r1]
 4787 006a 23EA0203 		bic	r3, r3, r2
ARM GAS  /tmp/ccGppmC5.s 			page 197


 4788 006e 0B60     		str	r3, [r1]
 4789              	.L363:
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4790              		.loc 1 3915 31 view .LVU1298
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4791              		.loc 1 3920 67 view .LVU1299
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4792              		.loc 1 3921 6 view .LVU1300
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4793              		.loc 1 3921 31 is_stmt 0 view .LVU1301
 4794 0070 606C     		ldr	r0, [r4, #68]
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4795              		.loc 1 3921 24 view .LVU1302
 4796 0072 E062     		str	r0, [r4, #44]
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4797              		.loc 1 3926 6 is_stmt 1 view .LVU1303
 4798 0074 C0F10703 		rsb	r3, r0, #7
 4799 0078 A361     		str	r3, [r4, #24]
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4800              		.loc 1 3927 6 view .LVU1304
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4801              		.loc 1 3927 6 view .LVU1305
 4802 007a 0124     		movs	r4, #1
 4803              	.LVL329:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4804              		.loc 1 3927 6 is_stmt 0 view .LVU1306
 4805 007c 04FA00F3 		lsl	r3, r4, r0
 4806 0080 0A4A     		ldr	r2, .L372+8
 4807 0082 1168     		ldr	r1, [r2]
 4808 0084 0B43     		orrs	r3, r3, r1
 4809 0086 1360     		str	r3, [r2]
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4810              		.loc 1 3927 6 is_stmt 1 view .LVU1307
 4811 0088 00EB8000 		add	r0, r0, r0, lsl #2
 4812 008c 2946     		mov	r1, r5
 4813 008e 064B     		ldr	r3, .L372+4
 4814 0090 03EB8000 		add	r0, r3, r0, lsl #2
 4815 0094 FFF7FEFF 		bl	vListInsertEnd
 4816              	.LVL330:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4817              		.loc 1 3927 36 view .LVU1308
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4818              		.loc 1 3937 6 view .LVU1309
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4819              		.loc 1 3937 14 is_stmt 0 view .LVU1310
 4820 0098 2046     		mov	r0, r4
 4821 009a D5E7     		b	.L357
 4822              	.LVL331:
 4823              	.L364:
 4824              	.LCFI45:
 4825              		.cfi_def_cfa_offset 0
 4826              		.cfi_restore 3
 4827              		.cfi_restore 4
 4828              		.cfi_restore 5
 4829              		.cfi_restore 14
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4830              		.loc 1 3885 13 view .LVU1311
ARM GAS  /tmp/ccGppmC5.s 			page 198


 4831 009c 0020     		movs	r0, #0
 4832              	.LVL332:
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4833              		.loc 1 3955 2 view .LVU1312
 4834 009e 7047     		bx	lr
 4835              	.LVL333:
 4836              	.L365:
 4837              	.LCFI46:
 4838              		.cfi_def_cfa_offset 16
 4839              		.cfi_offset 3, -16
 4840              		.cfi_offset 4, -12
 4841              		.cfi_offset 5, -8
 4842              		.cfi_offset 14, -4
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4843              		.loc 1 3885 13 view .LVU1313
 4844 00a0 0020     		movs	r0, #0
 4845              	.LVL334:
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4846              		.loc 1 3885 13 view .LVU1314
 4847 00a2 D1E7     		b	.L357
 4848              	.L373:
 4849              		.align	2
 4850              	.L372:
 4851 00a4 00000000 		.word	pxCurrentTCB
 4852 00a8 00000000 		.word	pxReadyTasksLists
 4853 00ac 00000000 		.word	uxTopReadyPriority
 4854              		.cfi_endproc
 4855              	.LFE44:
 4857              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4858              		.align	1
 4859              		.global	vTaskPriorityDisinheritAfterTimeout
 4860              		.syntax unified
 4861              		.thumb
 4862              		.thumb_func
 4864              	vTaskPriorityDisinheritAfterTimeout:
 4865              	.LVL335:
 4866              	.LFB45:
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4867              		.loc 1 3963 2 is_stmt 1 view -0
 4868              		.cfi_startproc
 4869              		@ args = 0, pretend = 0, frame = 0
 4870              		@ frame_needed = 0, uses_anonymous_args = 0
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4871              		.loc 1 3964 2 view .LVU1316
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4872              		.loc 1 3965 2 view .LVU1317
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4873              		.loc 1 3966 2 view .LVU1318
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4874              		.loc 1 3968 3 view .LVU1319
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4875              		.loc 1 3968 5 is_stmt 0 view .LVU1320
 4876 0000 0028     		cmp	r0, #0
 4877 0002 55D0     		beq	.L384
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4878              		.loc 1 3963 2 view .LVU1321
 4879 0004 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccGppmC5.s 			page 199


 4880              	.LCFI47:
 4881              		.cfi_def_cfa_offset 16
 4882              		.cfi_offset 3, -16
 4883              		.cfi_offset 4, -12
 4884              		.cfi_offset 5, -8
 4885              		.cfi_offset 14, -4
 4886 0006 0446     		mov	r4, r0
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4887              		.loc 1 3972 4 is_stmt 1 view .LVU1322
 4888 0008 836C     		ldr	r3, [r0, #72]
 4889 000a 43B9     		cbnz	r3, .L376
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4890              		.loc 1 3972 4 view .LVU1323
 4891              	.LBB191:
 4892              	.LBI191:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 4893              		.loc 2 191 30 view .LVU1324
 4894              	.LBB192:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 4895              		.loc 2 193 1 view .LVU1325
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4896              		.loc 2 195 2 view .LVU1326
 4897              		.syntax unified
 4898              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 4899 000c 4FF05003 			mov r3, #80												
 4900 0010 83F31188 		msr basepri, r3											
 4901 0014 BFF36F8F 		isb														
 4902 0018 BFF34F8F 		dsb														
 4903              	
 4904              	@ 0 "" 2
 4905              	.LVL336:
 4906              		.thumb
 4907              		.syntax unified
 4908              	.L377:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 4909              		.loc 2 195 2 is_stmt 0 view .LVU1327
 4910              	.LBE192:
 4911              	.LBE191:
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4912              		.loc 1 3972 4 is_stmt 1 discriminator 1 view .LVU1328
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4913              		.loc 1 3972 4 discriminator 1 view .LVU1329
 4914 001c FEE7     		b	.L377
 4915              	.L376:
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4916              		.loc 1 3972 40 discriminator 2 view .LVU1330
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4917              		.loc 1 3978 4 discriminator 2 view .LVU1331
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4918              		.loc 1 3978 13 is_stmt 0 discriminator 2 view .LVU1332
 4919 001e 426C     		ldr	r2, [r0, #68]
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4920              		.loc 1 3978 6 discriminator 2 view .LVU1333
 4921 0020 8A42     		cmp	r2, r1
 4922 0022 00D2     		bcs	.L378
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4923              		.loc 1 3980 21 view .LVU1334
ARM GAS  /tmp/ccGppmC5.s 			page 200


 4924 0024 0A46     		mov	r2, r1
 4925              	.L378:
 4926              	.LVL337:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4927              		.loc 1 3988 4 is_stmt 1 view .LVU1335
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4928              		.loc 1 3988 13 is_stmt 0 view .LVU1336
 4929 0026 E16A     		ldr	r1, [r4, #44]
 4930              	.LVL338:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4931              		.loc 1 3988 6 view .LVU1337
 4932 0028 9142     		cmp	r1, r2
 4933 002a 01D0     		beq	.L374
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4934              		.loc 1 3994 5 is_stmt 1 view .LVU1338
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4935              		.loc 1 3994 7 is_stmt 0 view .LVU1339
 4936 002c 012B     		cmp	r3, #1
 4937 002e 00D0     		beq	.L387
 4938              	.LVL339:
 4939              	.L374:
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4940              		.loc 1 4057 2 view .LVU1340
 4941 0030 38BD     		pop	{r3, r4, r5, pc}
 4942              	.LVL340:
 4943              	.L387:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4944              		.loc 1 3999 6 is_stmt 1 view .LVU1341
 4945 0032 204B     		ldr	r3, .L389
 4946 0034 1B68     		ldr	r3, [r3]
 4947 0036 A342     		cmp	r3, r4
 4948 0038 31D0     		beq	.L388
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4949              		.loc 1 3999 43 discriminator 2 view .LVU1342
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 4950              		.loc 1 4004 67 discriminator 2 view .LVU1343
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 4951              		.loc 1 4005 6 discriminator 2 view .LVU1344
 4952              	.LVL341:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4953              		.loc 1 4006 6 discriminator 2 view .LVU1345
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4954              		.loc 1 4006 24 is_stmt 0 discriminator 2 view .LVU1346
 4955 003a E262     		str	r2, [r4, #44]
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4956              		.loc 1 4010 6 is_stmt 1 discriminator 2 view .LVU1347
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4957              		.loc 1 4010 12 is_stmt 0 discriminator 2 view .LVU1348
 4958 003c A369     		ldr	r3, [r4, #24]
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4959              		.loc 1 4010 8 discriminator 2 view .LVU1349
 4960 003e 002B     		cmp	r3, #0
 4961 0040 02DB     		blt	.L381
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4962              		.loc 1 4012 7 is_stmt 1 view .LVU1350
 4963 0042 C2F10702 		rsb	r2, r2, #7
 4964              	.LVL342:
ARM GAS  /tmp/ccGppmC5.s 			page 201


4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4965              		.loc 1 4012 7 is_stmt 0 view .LVU1351
 4966 0046 A261     		str	r2, [r4, #24]
 4967              	.L381:
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4968              		.loc 1 4016 31 is_stmt 1 view .LVU1352
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4969              		.loc 1 4025 6 view .LVU1353
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4970              		.loc 1 4025 10 is_stmt 0 view .LVU1354
 4971 0048 6269     		ldr	r2, [r4, #20]
 4972 004a 01EB8101 		add	r1, r1, r1, lsl #2
 4973              	.LVL343:
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4974              		.loc 1 4025 10 view .LVU1355
 4975 004e 1A4B     		ldr	r3, .L389+4
 4976 0050 03EB8103 		add	r3, r3, r1, lsl #2
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4977              		.loc 1 4025 113 view .LVU1356
 4978 0054 9A42     		cmp	r2, r3
 4979 0056 EBD1     		bne	.L374
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4980              		.loc 1 4027 7 is_stmt 1 view .LVU1357
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4981              		.loc 1 4027 11 is_stmt 0 view .LVU1358
 4982 0058 251D     		adds	r5, r4, #4
 4983 005a 2846     		mov	r0, r5
 4984              	.LVL344:
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4985              		.loc 1 4027 11 view .LVU1359
 4986 005c FFF7FEFF 		bl	uxListRemove
 4987              	.LVL345:
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4988              		.loc 1 4027 9 view .LVU1360
 4989 0060 68B9     		cbnz	r0, .L382
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4990              		.loc 1 4029 8 is_stmt 1 view .LVU1361
 4991 0062 E36A     		ldr	r3, [r4, #44]
 4992 0064 03EB8302 		add	r2, r3, r3, lsl #2
 4993 0068 9200     		lsls	r2, r2, #2
 4994 006a 1349     		ldr	r1, .L389+4
 4995 006c 8A58     		ldr	r2, [r1, r2]
 4996 006e 32B9     		cbnz	r2, .L382
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4997              		.loc 1 4029 8 discriminator 1 view .LVU1362
 4998 0070 0122     		movs	r2, #1
 4999 0072 9A40     		lsls	r2, r2, r3
 5000 0074 1149     		ldr	r1, .L389+8
 5001 0076 0B68     		ldr	r3, [r1]
 5002 0078 23EA0203 		bic	r3, r3, r2
 5003 007c 0B60     		str	r3, [r1]
 5004              	.L382:
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5005              		.loc 1 4033 32 view .LVU1363
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5006              		.loc 1 4036 7 view .LVU1364
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccGppmC5.s 			page 202


 5007              		.loc 1 4036 7 view .LVU1365
 5008 007e E06A     		ldr	r0, [r4, #44]
 5009 0080 0123     		movs	r3, #1
 5010 0082 8340     		lsls	r3, r3, r0
 5011 0084 0D4A     		ldr	r2, .L389+8
 5012 0086 1168     		ldr	r1, [r2]
 5013 0088 0B43     		orrs	r3, r3, r1
 5014 008a 1360     		str	r3, [r2]
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5015              		.loc 1 4036 7 view .LVU1366
 5016 008c 00EB8000 		add	r0, r0, r0, lsl #2
 5017 0090 2946     		mov	r1, r5
 5018 0092 094B     		ldr	r3, .L389+4
 5019 0094 03EB8000 		add	r0, r3, r0, lsl #2
 5020 0098 FFF7FEFF 		bl	vListInsertEnd
 5021              	.LVL346:
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5022              		.loc 1 4036 37 view .LVU1367
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5023              		.loc 1 4055 28 view .LVU1368
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5024              		.loc 1 4057 2 is_stmt 0 view .LVU1369
 5025 009c C8E7     		b	.L374
 5026              	.LVL347:
 5027              	.L388:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5028              		.loc 1 3999 6 is_stmt 1 view .LVU1370
 5029              	.LBB193:
 5030              	.LBI193:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5031              		.loc 2 191 30 view .LVU1371
 5032              	.LBB194:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5033              		.loc 2 193 1 view .LVU1372
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5034              		.loc 2 195 2 view .LVU1373
 5035              		.syntax unified
 5036              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5037 009e 4FF05003 			mov r3, #80												
 5038 00a2 83F31188 		msr basepri, r3											
 5039 00a6 BFF36F8F 		isb														
 5040 00aa BFF34F8F 		dsb														
 5041              	
 5042              	@ 0 "" 2
 5043              	.LVL348:
 5044              		.thumb
 5045              		.syntax unified
 5046              	.L380:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5047              		.loc 2 195 2 is_stmt 0 view .LVU1374
 5048              	.LBE194:
 5049              	.LBE193:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5050              		.loc 1 3999 6 is_stmt 1 discriminator 2 view .LVU1375
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5051              		.loc 1 3999 6 discriminator 2 view .LVU1376
 5052 00ae FEE7     		b	.L380
ARM GAS  /tmp/ccGppmC5.s 			page 203


 5053              	.LVL349:
 5054              	.L384:
 5055              	.LCFI48:
 5056              		.cfi_def_cfa_offset 0
 5057              		.cfi_restore 3
 5058              		.cfi_restore 4
 5059              		.cfi_restore 5
 5060              		.cfi_restore 14
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5061              		.loc 1 3999 6 is_stmt 0 discriminator 2 view .LVU1377
 5062 00b0 7047     		bx	lr
 5063              	.L390:
 5064 00b2 00BF     		.align	2
 5065              	.L389:
 5066 00b4 00000000 		.word	pxCurrentTCB
 5067 00b8 00000000 		.word	pxReadyTasksLists
 5068 00bc 00000000 		.word	uxTopReadyPriority
 5069              		.cfi_endproc
 5070              	.LFE45:
 5072              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 5073              		.align	1
 5074              		.global	uxTaskResetEventItemValue
 5075              		.syntax unified
 5076              		.thumb
 5077              		.thumb_func
 5079              	uxTaskResetEventItemValue:
 5080              	.LFB46:
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 5081              		.loc 1 4377 1 is_stmt 1 view -0
 5082              		.cfi_startproc
 5083              		@ args = 0, pretend = 0, frame = 0
 5084              		@ frame_needed = 0, uses_anonymous_args = 0
 5085              		@ link register save eliminated.
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5086              		.loc 1 4378 1 view .LVU1379
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5087              		.loc 1 4380 2 view .LVU1380
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5088              		.loc 1 4380 13 is_stmt 0 view .LVU1381
 5089 0000 044A     		ldr	r2, .L392
 5090 0002 1368     		ldr	r3, [r2]
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5091              		.loc 1 4380 11 view .LVU1382
 5092 0004 9869     		ldr	r0, [r3, #24]
 5093              	.LVL350:
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5094              		.loc 1 4384 2 is_stmt 1 view .LVU1383
 5095 0006 1368     		ldr	r3, [r2]
 5096 0008 DB6A     		ldr	r3, [r3, #44]
 5097 000a 1268     		ldr	r2, [r2]
 5098 000c C3F10703 		rsb	r3, r3, #7
 5099 0010 9361     		str	r3, [r2, #24]
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5100              		.loc 1 4386 2 view .LVU1384
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 5101              		.loc 1 4387 1 is_stmt 0 view .LVU1385
 5102 0012 7047     		bx	lr
ARM GAS  /tmp/ccGppmC5.s 			page 204


 5103              	.L393:
 5104              		.align	2
 5105              	.L392:
 5106 0014 00000000 		.word	pxCurrentTCB
 5107              		.cfi_endproc
 5108              	.LFE46:
 5110              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5111              		.align	1
 5112              		.global	pvTaskIncrementMutexHeldCount
 5113              		.syntax unified
 5114              		.thumb
 5115              		.thumb_func
 5117              	pvTaskIncrementMutexHeldCount:
 5118              	.LFB47:
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 5119              		.loc 1 4393 2 is_stmt 1 view -0
 5120              		.cfi_startproc
 5121              		@ args = 0, pretend = 0, frame = 0
 5122              		@ frame_needed = 0, uses_anonymous_args = 0
 5123              		@ link register save eliminated.
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5124              		.loc 1 4396 3 view .LVU1387
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5125              		.loc 1 4396 20 is_stmt 0 view .LVU1388
 5126 0000 054B     		ldr	r3, .L396
 5127 0002 1B68     		ldr	r3, [r3]
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5128              		.loc 1 4396 5 view .LVU1389
 5129 0004 23B1     		cbz	r3, .L395
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5130              		.loc 1 4398 4 is_stmt 1 view .LVU1390
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5131              		.loc 1 4398 18 is_stmt 0 view .LVU1391
 5132 0006 044B     		ldr	r3, .L396
 5133 0008 1A68     		ldr	r2, [r3]
 5134 000a 936C     		ldr	r3, [r2, #72]
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5135              		.loc 1 4398 35 view .LVU1392
 5136 000c 0133     		adds	r3, r3, #1
 5137 000e 9364     		str	r3, [r2, #72]
 5138              	.L395:
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5139              		.loc 1 4401 3 is_stmt 1 view .LVU1393
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5140              		.loc 1 4401 10 is_stmt 0 view .LVU1394
 5141 0010 014B     		ldr	r3, .L396
 5142 0012 1868     		ldr	r0, [r3]
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5143              		.loc 1 4402 2 view .LVU1395
 5144 0014 7047     		bx	lr
 5145              	.L397:
 5146 0016 00BF     		.align	2
 5147              	.L396:
 5148 0018 00000000 		.word	pxCurrentTCB
 5149              		.cfi_endproc
 5150              	.LFE47:
 5152              		.section	.text.ulTaskNotifyTake,"ax",%progbits
ARM GAS  /tmp/ccGppmC5.s 			page 205


 5153              		.align	1
 5154              		.global	ulTaskNotifyTake
 5155              		.syntax unified
 5156              		.thumb
 5157              		.thumb_func
 5159              	ulTaskNotifyTake:
 5160              	.LVL351:
 5161              	.LFB48:
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5162              		.loc 1 4410 2 is_stmt 1 view -0
 5163              		.cfi_startproc
 5164              		@ args = 0, pretend = 0, frame = 0
 5165              		@ frame_needed = 0, uses_anonymous_args = 0
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5166              		.loc 1 4410 2 is_stmt 0 view .LVU1397
 5167 0000 38B5     		push	{r3, r4, r5, lr}
 5168              	.LCFI49:
 5169              		.cfi_def_cfa_offset 16
 5170              		.cfi_offset 3, -16
 5171              		.cfi_offset 4, -12
 5172              		.cfi_offset 5, -8
 5173              		.cfi_offset 14, -4
 5174 0002 0546     		mov	r5, r0
 5175 0004 0C46     		mov	r4, r1
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5176              		.loc 1 4411 2 is_stmt 1 view .LVU1398
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5177              		.loc 1 4413 3 view .LVU1399
 5178 0006 FFF7FEFF 		bl	vPortEnterCritical
 5179              	.LVL352:
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5180              		.loc 1 4416 4 view .LVU1400
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5181              		.loc 1 4416 20 is_stmt 0 view .LVU1401
 5182 000a 1A4B     		ldr	r3, .L404
 5183 000c 1B68     		ldr	r3, [r3]
 5184 000e DB6C     		ldr	r3, [r3, #76]
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5185              		.loc 1 4416 6 view .LVU1402
 5186 0010 2BB9     		cbnz	r3, .L399
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5187              		.loc 1 4419 5 is_stmt 1 view .LVU1403
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5188              		.loc 1 4419 17 is_stmt 0 view .LVU1404
 5189 0012 184B     		ldr	r3, .L404
 5190 0014 1B68     		ldr	r3, [r3]
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5191              		.loc 1 4419 33 view .LVU1405
 5192 0016 0122     		movs	r2, #1
 5193 0018 83F85020 		strb	r2, [r3, #80]
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5194              		.loc 1 4421 5 is_stmt 1 view .LVU1406
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5195              		.loc 1 4421 7 is_stmt 0 view .LVU1407
 5196 001c ACB9     		cbnz	r4, .L403
 5197              	.L399:
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccGppmC5.s 			page 206


 5198              		.loc 1 4439 29 is_stmt 1 view .LVU1408
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5199              		.loc 1 4442 3 view .LVU1409
 5200 001e FFF7FEFF 		bl	vPortExitCritical
 5201              	.LVL353:
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5202              		.loc 1 4444 3 view .LVU1410
 5203 0022 FFF7FEFF 		bl	vPortEnterCritical
 5204              	.LVL354:
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5205              		.loc 1 4446 27 view .LVU1411
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5206              		.loc 1 4447 4 view .LVU1412
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5207              		.loc 1 4447 27 is_stmt 0 view .LVU1413
 5208 0026 134B     		ldr	r3, .L404
 5209 0028 1B68     		ldr	r3, [r3]
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5210              		.loc 1 4447 13 view .LVU1414
 5211 002a DC6C     		ldr	r4, [r3, #76]
 5212              	.LVL355:
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5213              		.loc 1 4449 4 is_stmt 1 view .LVU1415
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5214              		.loc 1 4449 6 is_stmt 0 view .LVU1416
 5215 002c 24B1     		cbz	r4, .L400
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5216              		.loc 1 4451 5 is_stmt 1 view .LVU1417
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5217              		.loc 1 4451 7 is_stmt 0 view .LVU1418
 5218 002e DDB1     		cbz	r5, .L401
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5219              		.loc 1 4453 6 is_stmt 1 view .LVU1419
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5220              		.loc 1 4453 18 is_stmt 0 view .LVU1420
 5221 0030 104B     		ldr	r3, .L404
 5222 0032 1B68     		ldr	r3, [r3]
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5223              		.loc 1 4453 36 view .LVU1421
 5224 0034 0022     		movs	r2, #0
 5225 0036 DA64     		str	r2, [r3, #76]
 5226              	.L400:
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5227              		.loc 1 4462 29 is_stmt 1 view .LVU1422
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5228              		.loc 1 4465 4 view .LVU1423
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5229              		.loc 1 4465 16 is_stmt 0 view .LVU1424
 5230 0038 0E4B     		ldr	r3, .L404
 5231 003a 1B68     		ldr	r3, [r3]
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5232              		.loc 1 4465 32 view .LVU1425
 5233 003c 0022     		movs	r2, #0
 5234 003e 83F85020 		strb	r2, [r3, #80]
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5235              		.loc 1 4467 3 is_stmt 1 view .LVU1426
 5236 0042 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  /tmp/ccGppmC5.s 			page 207


 5237              	.LVL356:
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5238              		.loc 1 4469 3 view .LVU1427
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5239              		.loc 1 4470 2 is_stmt 0 view .LVU1428
 5240 0046 2046     		mov	r0, r4
 5241 0048 38BD     		pop	{r3, r4, r5, pc}
 5242              	.LVL357:
 5243              	.L403:
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5244              		.loc 1 4423 6 is_stmt 1 view .LVU1429
 5245 004a 1146     		mov	r1, r2
 5246 004c 2046     		mov	r0, r4
 5247 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5248              	.LVL358:
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5249              		.loc 1 4424 35 view .LVU1430
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5250              		.loc 1 4430 6 view .LVU1431
 5251 0052 4FF0E023 		mov	r3, #-536813568
 5252 0056 4FF08052 		mov	r2, #268435456
 5253 005a C3F8042D 		str	r2, [r3, #3332]
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5254              		.loc 1 4430 6 view .LVU1432
 5255              		.syntax unified
 5256              	@ 4430 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5257 005e BFF34F8F 		dsb
 5258              	@ 0 "" 2
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5259              		.loc 1 4430 6 view .LVU1433
 5260              	@ 4430 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5261 0062 BFF36F8F 		isb
 5262              	@ 0 "" 2
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5263              		.loc 1 4430 28 view .LVU1434
 5264              		.thumb
 5265              		.syntax unified
 5266 0066 DAE7     		b	.L399
 5267              	.LVL359:
 5268              	.L401:
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5269              		.loc 1 4457 6 view .LVU1435
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5270              		.loc 1 4457 18 is_stmt 0 view .LVU1436
 5271 0068 024B     		ldr	r3, .L404
 5272 006a 1B68     		ldr	r3, [r3]
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5273              		.loc 1 4457 47 view .LVU1437
 5274 006c 621E     		subs	r2, r4, #1
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5275              		.loc 1 4457 36 view .LVU1438
 5276 006e DA64     		str	r2, [r3, #76]
 5277 0070 E2E7     		b	.L400
 5278              	.L405:
 5279 0072 00BF     		.align	2
 5280              	.L404:
 5281 0074 00000000 		.word	pxCurrentTCB
ARM GAS  /tmp/ccGppmC5.s 			page 208


 5282              		.cfi_endproc
 5283              	.LFE48:
 5285              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5286              		.align	1
 5287              		.global	xTaskNotifyWait
 5288              		.syntax unified
 5289              		.thumb
 5290              		.thumb_func
 5292              	xTaskNotifyWait:
 5293              	.LVL360:
 5294              	.LFB49:
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5295              		.loc 1 4478 2 is_stmt 1 view -0
 5296              		.cfi_startproc
 5297              		@ args = 0, pretend = 0, frame = 0
 5298              		@ frame_needed = 0, uses_anonymous_args = 0
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5299              		.loc 1 4478 2 is_stmt 0 view .LVU1440
 5300 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5301              	.LCFI50:
 5302              		.cfi_def_cfa_offset 24
 5303              		.cfi_offset 3, -24
 5304              		.cfi_offset 4, -20
 5305              		.cfi_offset 5, -16
 5306              		.cfi_offset 6, -12
 5307              		.cfi_offset 7, -8
 5308              		.cfi_offset 14, -4
 5309 0002 0646     		mov	r6, r0
 5310 0004 0F46     		mov	r7, r1
 5311 0006 1446     		mov	r4, r2
 5312 0008 1D46     		mov	r5, r3
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5313              		.loc 1 4479 2 is_stmt 1 view .LVU1441
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5314              		.loc 1 4481 3 view .LVU1442
 5315 000a FFF7FEFF 		bl	vPortEnterCritical
 5316              	.LVL361:
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5317              		.loc 1 4484 4 view .LVU1443
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5318              		.loc 1 4484 20 is_stmt 0 view .LVU1444
 5319 000e 214B     		ldr	r3, .L414
 5320 0010 1B68     		ldr	r3, [r3]
 5321 0012 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 5322 0016 D2B2     		uxtb	r2, r2
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5323              		.loc 1 4484 6 view .LVU1445
 5324 0018 022A     		cmp	r2, #2
 5325 001a 0AD0     		beq	.L407
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5326              		.loc 1 4489 5 is_stmt 1 view .LVU1446
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5327              		.loc 1 4489 17 is_stmt 0 view .LVU1447
 5328 001c 1D4A     		ldr	r2, .L414
 5329 001e 1168     		ldr	r1, [r2]
 5330 0020 CB6C     		ldr	r3, [r1, #76]
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccGppmC5.s 			page 209


 5331              		.loc 1 4489 35 view .LVU1448
 5332 0022 23EA0603 		bic	r3, r3, r6
 5333 0026 CB64     		str	r3, [r1, #76]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5334              		.loc 1 4492 5 is_stmt 1 view .LVU1449
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5335              		.loc 1 4492 17 is_stmt 0 view .LVU1450
 5336 0028 1368     		ldr	r3, [r2]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5337              		.loc 1 4492 33 view .LVU1451
 5338 002a 0122     		movs	r2, #1
 5339 002c 83F85020 		strb	r2, [r3, #80]
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5340              		.loc 1 4494 5 is_stmt 1 view .LVU1452
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5341              		.loc 1 4494 7 is_stmt 0 view .LVU1453
 5342 0030 CDB9     		cbnz	r5, .L412
 5343              	.L407:
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5344              		.loc 1 4512 29 is_stmt 1 view .LVU1454
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5345              		.loc 1 4515 3 view .LVU1455
 5346 0032 FFF7FEFF 		bl	vPortExitCritical
 5347              	.LVL362:
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5348              		.loc 1 4517 3 view .LVU1456
 5349 0036 FFF7FEFF 		bl	vPortEnterCritical
 5350              	.LVL363:
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5351              		.loc 1 4519 27 view .LVU1457
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5352              		.loc 1 4521 4 view .LVU1458
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5353              		.loc 1 4521 6 is_stmt 0 view .LVU1459
 5354 003a 1CB1     		cbz	r4, .L408
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5355              		.loc 1 4525 5 is_stmt 1 view .LVU1460
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5356              		.loc 1 4525 41 is_stmt 0 view .LVU1461
 5357 003c 154B     		ldr	r3, .L414
 5358 003e 1B68     		ldr	r3, [r3]
 5359 0040 DB6C     		ldr	r3, [r3, #76]
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5360              		.loc 1 4525 27 view .LVU1462
 5361 0042 2360     		str	r3, [r4]
 5362              	.L408:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5363              		.loc 1 4532 4 is_stmt 1 view .LVU1463
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5364              		.loc 1 4532 20 is_stmt 0 view .LVU1464
 5365 0044 134B     		ldr	r3, .L414
 5366 0046 1B68     		ldr	r3, [r3]
 5367 0048 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 5368 004c DBB2     		uxtb	r3, r3
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5369              		.loc 1 4532 6 view .LVU1465
 5370 004e 022B     		cmp	r3, #2
ARM GAS  /tmp/ccGppmC5.s 			page 210


 5371 0050 18D0     		beq	.L413
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5372              		.loc 1 4535 13 view .LVU1466
 5373 0052 0024     		movs	r4, #0
 5374              	.LVL364:
 5375              	.L409:
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5376              		.loc 1 4545 4 is_stmt 1 view .LVU1467
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5377              		.loc 1 4545 16 is_stmt 0 view .LVU1468
 5378 0054 0F4B     		ldr	r3, .L414
 5379 0056 1B68     		ldr	r3, [r3]
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5380              		.loc 1 4545 32 view .LVU1469
 5381 0058 0022     		movs	r2, #0
 5382 005a 83F85020 		strb	r2, [r3, #80]
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5383              		.loc 1 4547 3 is_stmt 1 view .LVU1470
 5384 005e FFF7FEFF 		bl	vPortExitCritical
 5385              	.LVL365:
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5386              		.loc 1 4549 3 view .LVU1471
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5387              		.loc 1 4550 2 is_stmt 0 view .LVU1472
 5388 0062 2046     		mov	r0, r4
 5389 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5390              	.LVL366:
 5391              	.L412:
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5392              		.loc 1 4496 6 is_stmt 1 view .LVU1473
 5393 0066 1146     		mov	r1, r2
 5394 0068 2846     		mov	r0, r5
 5395 006a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5396              	.LVL367:
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5397              		.loc 1 4497 35 view .LVU1474
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5398              		.loc 1 4503 6 view .LVU1475
 5399 006e 4FF0E023 		mov	r3, #-536813568
 5400 0072 4FF08052 		mov	r2, #268435456
 5401 0076 C3F8042D 		str	r2, [r3, #3332]
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5402              		.loc 1 4503 6 view .LVU1476
 5403              		.syntax unified
 5404              	@ 4503 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5405 007a BFF34F8F 		dsb
 5406              	@ 0 "" 2
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5407              		.loc 1 4503 6 view .LVU1477
 5408              	@ 4503 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5409 007e BFF36F8F 		isb
 5410              	@ 0 "" 2
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5411              		.loc 1 4503 28 view .LVU1478
 5412              		.thumb
 5413              		.syntax unified
 5414 0082 D6E7     		b	.L407
ARM GAS  /tmp/ccGppmC5.s 			page 211


 5415              	.L413:
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5416              		.loc 1 4541 5 view .LVU1479
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5417              		.loc 1 4541 17 is_stmt 0 view .LVU1480
 5418 0084 034B     		ldr	r3, .L414
 5419 0086 1A68     		ldr	r2, [r3]
 5420 0088 D36C     		ldr	r3, [r2, #76]
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5421              		.loc 1 4541 35 view .LVU1481
 5422 008a 23EA0703 		bic	r3, r3, r7
 5423 008e D364     		str	r3, [r2, #76]
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5424              		.loc 1 4542 5 is_stmt 1 view .LVU1482
 5425              	.LVL368:
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5426              		.loc 1 4542 13 is_stmt 0 view .LVU1483
 5427 0090 0124     		movs	r4, #1
 5428              	.LVL369:
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5429              		.loc 1 4542 13 view .LVU1484
 5430 0092 DFE7     		b	.L409
 5431              	.L415:
 5432              		.align	2
 5433              	.L414:
 5434 0094 00000000 		.word	pxCurrentTCB
 5435              		.cfi_endproc
 5436              	.LFE49:
 5438              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5439              		.align	1
 5440              		.global	xTaskGenericNotify
 5441              		.syntax unified
 5442              		.thumb
 5443              		.thumb_func
 5445              	xTaskGenericNotify:
 5446              	.LVL370:
 5447              	.LFB50:
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5448              		.loc 1 4558 2 is_stmt 1 view -0
 5449              		.cfi_startproc
 5450              		@ args = 0, pretend = 0, frame = 0
 5451              		@ frame_needed = 0, uses_anonymous_args = 0
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5452              		.loc 1 4558 2 is_stmt 0 view .LVU1486
 5453 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5454              	.LCFI51:
 5455              		.cfi_def_cfa_offset 24
 5456              		.cfi_offset 3, -24
 5457              		.cfi_offset 4, -20
 5458              		.cfi_offset 5, -16
 5459              		.cfi_offset 6, -12
 5460              		.cfi_offset 7, -8
 5461              		.cfi_offset 14, -4
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5462              		.loc 1 4559 2 is_stmt 1 view .LVU1487
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5463              		.loc 1 4560 2 view .LVU1488
ARM GAS  /tmp/ccGppmC5.s 			page 212


 5464              	.LVL371:
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5465              		.loc 1 4561 2 view .LVU1489
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5466              		.loc 1 4563 3 view .LVU1490
 5467 0002 A8B1     		cbz	r0, .L434
 5468 0004 0E46     		mov	r6, r1
 5469 0006 1746     		mov	r7, r2
 5470 0008 1C46     		mov	r4, r3
 5471 000a 0546     		mov	r5, r0
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5472              		.loc 1 4563 32 discriminator 2 view .LVU1491
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5473              		.loc 1 4564 3 discriminator 2 view .LVU1492
 5474              	.LVL372:
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5475              		.loc 1 4566 3 discriminator 2 view .LVU1493
 5476 000c FFF7FEFF 		bl	vPortEnterCritical
 5477              	.LVL373:
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5478              		.loc 1 4568 4 discriminator 2 view .LVU1494
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5479              		.loc 1 4568 6 is_stmt 0 discriminator 2 view .LVU1495
 5480 0010 0CB1     		cbz	r4, .L419
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5481              		.loc 1 4570 5 is_stmt 1 view .LVU1496
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5482              		.loc 1 4570 42 is_stmt 0 view .LVU1497
 5483 0012 EB6C     		ldr	r3, [r5, #76]
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5484              		.loc 1 4570 35 view .LVU1498
 5485 0014 2360     		str	r3, [r4]
 5486              	.L419:
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5487              		.loc 1 4573 4 is_stmt 1 view .LVU1499
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5488              		.loc 1 4573 26 is_stmt 0 view .LVU1500
 5489 0016 95F85030 		ldrb	r3, [r5, #80]	@ zero_extendqisi2
 5490 001a DBB2     		uxtb	r3, r3
 5491              	.LVL374:
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5492              		.loc 1 4575 4 is_stmt 1 view .LVU1501
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5493              		.loc 1 4575 25 is_stmt 0 view .LVU1502
 5494 001c 0222     		movs	r2, #2
 5495 001e 85F85020 		strb	r2, [r5, #80]
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5496              		.loc 1 4577 4 is_stmt 1 view .LVU1503
 5497 0022 7A1E     		subs	r2, r7, #1
 5498 0024 032A     		cmp	r2, #3
 5499 0026 0FD8     		bhi	.L420
 5500 0028 DFE802F0 		tbb	[pc, r2]
 5501              	.L422:
 5502 002c 0B       		.byte	(.L425-.L422)/2
 5503 002d 15       		.byte	(.L424-.L422)/2
 5504 002e 19       		.byte	(.L423-.L422)/2
 5505 002f 1B       		.byte	(.L421-.L422)/2
ARM GAS  /tmp/ccGppmC5.s 			page 213


 5506              	.LVL375:
 5507              		.p2align 1
 5508              	.L434:
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5509              		.loc 1 4563 3 view .LVU1504
 5510              	.LBB195:
 5511              	.LBI195:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5512              		.loc 2 191 30 view .LVU1505
 5513              	.LBB196:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5514              		.loc 2 193 1 view .LVU1506
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5515              		.loc 2 195 2 view .LVU1507
 5516              		.syntax unified
 5517              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5518 0030 4FF05003 			mov r3, #80												
 5519 0034 83F31188 		msr basepri, r3											
 5520 0038 BFF36F8F 		isb														
 5521 003c BFF34F8F 		dsb														
 5522              	
 5523              	@ 0 "" 2
 5524              	.LVL376:
 5525              		.thumb
 5526              		.syntax unified
 5527              	.L418:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5528              		.loc 2 195 2 is_stmt 0 view .LVU1508
 5529              	.LBE196:
 5530              	.LBE195:
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5531              		.loc 1 4563 3 is_stmt 1 discriminator 1 view .LVU1509
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5532              		.loc 1 4563 3 discriminator 1 view .LVU1510
 5533 0040 FEE7     		b	.L418
 5534              	.LVL377:
 5535              	.L425:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5536              		.loc 1 4580 6 view .LVU1511
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5537              		.loc 1 4580 11 is_stmt 0 view .LVU1512
 5538 0042 EA6C     		ldr	r2, [r5, #76]
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5539              		.loc 1 4580 29 view .LVU1513
 5540 0044 3243     		orrs	r2, r2, r6
 5541 0046 EA64     		str	r2, [r5, #76]
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5542              		.loc 1 4581 6 is_stmt 1 view .LVU1514
 5543              	.L420:
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5544              		.loc 1 4609 22 view .LVU1515
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5545              		.loc 1 4613 4 view .LVU1516
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5546              		.loc 1 4613 6 is_stmt 0 view .LVU1517
 5547 0048 012B     		cmp	r3, #1
 5548 004a 0ED0     		beq	.L435
ARM GAS  /tmp/ccGppmC5.s 			page 214


 5549 004c 0124     		movs	r4, #1
 5550              	.LVL378:
 5551              	.L426:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5552              		.loc 1 4650 29 is_stmt 1 view .LVU1518
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5553              		.loc 1 4653 3 view .LVU1519
 5554 004e FFF7FEFF 		bl	vPortExitCritical
 5555              	.LVL379:
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5556              		.loc 1 4655 3 view .LVU1520
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5557              		.loc 1 4656 2 is_stmt 0 view .LVU1521
 5558 0052 2046     		mov	r0, r4
 5559 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5560              	.LVL380:
 5561              	.L424:
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5562              		.loc 1 4584 6 is_stmt 1 view .LVU1522
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5563              		.loc 1 4584 13 is_stmt 0 view .LVU1523
 5564 0056 EA6C     		ldr	r2, [r5, #76]
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5565              		.loc 1 4584 32 view .LVU1524
 5566 0058 0132     		adds	r2, r2, #1
 5567 005a EA64     		str	r2, [r5, #76]
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5568              		.loc 1 4585 6 is_stmt 1 view .LVU1525
 5569 005c F4E7     		b	.L420
 5570              	.L423:
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5571              		.loc 1 4588 6 view .LVU1526
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5572              		.loc 1 4588 29 is_stmt 0 view .LVU1527
 5573 005e EE64     		str	r6, [r5, #76]
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5574              		.loc 1 4589 6 is_stmt 1 view .LVU1528
 5575 0060 F2E7     		b	.L420
 5576              	.L421:
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5577              		.loc 1 4592 6 view .LVU1529
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5578              		.loc 1 4592 8 is_stmt 0 view .LVU1530
 5579 0062 022B     		cmp	r3, #2
 5580 0064 31D0     		beq	.L429
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5581              		.loc 1 4594 7 is_stmt 1 view .LVU1531
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5582              		.loc 1 4594 30 is_stmt 0 view .LVU1532
 5583 0066 EE64     		str	r6, [r5, #76]
 5584 0068 EEE7     		b	.L420
 5585              	.L435:
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5586              		.loc 1 4615 5 is_stmt 1 view .LVU1533
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5587              		.loc 1 4615 14 is_stmt 0 view .LVU1534
 5588 006a 2C1D     		adds	r4, r5, #4
ARM GAS  /tmp/ccGppmC5.s 			page 215


 5589              	.LVL381:
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5590              		.loc 1 4615 14 view .LVU1535
 5591 006c 2046     		mov	r0, r4
 5592 006e FFF7FEFF 		bl	uxListRemove
 5593              	.LVL382:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5594              		.loc 1 4616 5 is_stmt 1 view .LVU1536
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5595              		.loc 1 4616 5 view .LVU1537
 5596 0072 E86A     		ldr	r0, [r5, #44]
 5597 0074 0123     		movs	r3, #1
 5598 0076 8340     		lsls	r3, r3, r0
 5599 0078 164A     		ldr	r2, .L436
 5600 007a 1168     		ldr	r1, [r2]
 5601 007c 0B43     		orrs	r3, r3, r1
 5602 007e 1360     		str	r3, [r2]
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5603              		.loc 1 4616 5 view .LVU1538
 5604 0080 00EB8000 		add	r0, r0, r0, lsl #2
 5605 0084 2146     		mov	r1, r4
 5606 0086 144B     		ldr	r3, .L436+4
 5607 0088 03EB8000 		add	r0, r3, r0, lsl #2
 5608 008c FFF7FEFF 		bl	vListInsertEnd
 5609              	.LVL383:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5610              		.loc 1 4616 35 view .LVU1539
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5611              		.loc 1 4619 5 view .LVU1540
 5612 0090 AB6A     		ldr	r3, [r5, #40]
 5613 0092 43B1     		cbz	r3, .L427
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5614              		.loc 1 4619 5 view .LVU1541
 5615              	.LBB197:
 5616              	.LBI197:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5617              		.loc 2 191 30 view .LVU1542
 5618              	.LBB198:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5619              		.loc 2 193 1 view .LVU1543
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5620              		.loc 2 195 2 view .LVU1544
 5621              		.syntax unified
 5622              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5623 0094 4FF05003 			mov r3, #80												
 5624 0098 83F31188 		msr basepri, r3											
 5625 009c BFF36F8F 		isb														
 5626 00a0 BFF34F8F 		dsb														
 5627              	
 5628              	@ 0 "" 2
 5629              	.LVL384:
 5630              		.thumb
 5631              		.syntax unified
 5632              	.L428:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5633              		.loc 2 195 2 is_stmt 0 view .LVU1545
 5634              	.LBE198:
ARM GAS  /tmp/ccGppmC5.s 			page 216


 5635              	.LBE197:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5636              		.loc 1 4619 5 is_stmt 1 discriminator 2 view .LVU1546
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5637              		.loc 1 4619 5 discriminator 2 view .LVU1547
 5638 00a4 FEE7     		b	.L428
 5639              	.L427:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5640              		.loc 1 4619 82 discriminator 2 view .LVU1548
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5641              		.loc 1 4637 5 discriminator 2 view .LVU1549
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5642              		.loc 1 4637 14 is_stmt 0 discriminator 2 view .LVU1550
 5643 00a6 EA6A     		ldr	r2, [r5, #44]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5644              		.loc 1 4637 41 discriminator 2 view .LVU1551
 5645 00a8 0C4B     		ldr	r3, .L436+8
 5646 00aa 1B68     		ldr	r3, [r3]
 5647 00ac DB6A     		ldr	r3, [r3, #44]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5648              		.loc 1 4637 7 discriminator 2 view .LVU1552
 5649 00ae 9A42     		cmp	r2, r3
 5650 00b0 0DD9     		bls	.L431
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5651              		.loc 1 4641 6 is_stmt 1 view .LVU1553
 5652 00b2 4FF0E023 		mov	r3, #-536813568
 5653 00b6 4FF08052 		mov	r2, #268435456
 5654 00ba C3F8042D 		str	r2, [r3, #3332]
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5655              		.loc 1 4641 6 view .LVU1554
 5656              		.syntax unified
 5657              	@ 4641 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5658 00be BFF34F8F 		dsb
 5659              	@ 0 "" 2
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5660              		.loc 1 4641 6 view .LVU1555
 5661              	@ 4641 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5662 00c2 BFF36F8F 		isb
 5663              	@ 0 "" 2
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5664              		.loc 1 4641 37 view .LVU1556
 5665              		.thumb
 5666              		.syntax unified
 5667 00c6 0124     		movs	r4, #1
 5668 00c8 C1E7     		b	.L426
 5669              	.LVL385:
 5670              	.L429:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5671              		.loc 1 4599 15 is_stmt 0 view .LVU1557
 5672 00ca 0024     		movs	r4, #0
 5673              	.LVL386:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5674              		.loc 1 4599 15 view .LVU1558
 5675 00cc BFE7     		b	.L426
 5676              	.LVL387:
 5677              	.L431:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccGppmC5.s 			page 217


 5678              		.loc 1 4599 15 view .LVU1559
 5679 00ce 0124     		movs	r4, #1
 5680 00d0 BDE7     		b	.L426
 5681              	.L437:
 5682 00d2 00BF     		.align	2
 5683              	.L436:
 5684 00d4 00000000 		.word	uxTopReadyPriority
 5685 00d8 00000000 		.word	pxReadyTasksLists
 5686 00dc 00000000 		.word	pxCurrentTCB
 5687              		.cfi_endproc
 5688              	.LFE50:
 5690              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5691              		.align	1
 5692              		.global	xTaskGenericNotifyFromISR
 5693              		.syntax unified
 5694              		.thumb
 5695              		.thumb_func
 5697              	xTaskGenericNotifyFromISR:
 5698              	.LVL388:
 5699              	.LFB51:
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5700              		.loc 1 4664 2 is_stmt 1 view -0
 5701              		.cfi_startproc
 5702              		@ args = 4, pretend = 0, frame = 0
 5703              		@ frame_needed = 0, uses_anonymous_args = 0
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5704              		.loc 1 4665 2 view .LVU1561
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5705              		.loc 1 4666 2 view .LVU1562
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5706              		.loc 1 4667 2 view .LVU1563
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5707              		.loc 1 4668 2 view .LVU1564
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5708              		.loc 1 4670 3 view .LVU1565
 5709 0000 08B3     		cbz	r0, .L460
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5710              		.loc 1 4664 2 is_stmt 0 discriminator 2 view .LVU1566
 5711 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5712              	.LCFI52:
 5713              		.cfi_def_cfa_offset 24
 5714              		.cfi_offset 4, -24
 5715              		.cfi_offset 5, -20
 5716              		.cfi_offset 6, -16
 5717              		.cfi_offset 7, -12
 5718              		.cfi_offset 8, -8
 5719              		.cfi_offset 14, -4
 5720 0006 0E46     		mov	r6, r1
 5721 0008 1746     		mov	r7, r2
 5722 000a 1C46     		mov	r4, r3
 5723 000c 0546     		mov	r5, r0
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5724              		.loc 1 4670 32 is_stmt 1 discriminator 2 view .LVU1567
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5725              		.loc 1 4688 3 discriminator 2 view .LVU1568
 5726 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 5727              	.LVL389:
ARM GAS  /tmp/ccGppmC5.s 			page 218


4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5728              		.loc 1 4690 3 discriminator 2 view .LVU1569
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5729              		.loc 1 4692 3 discriminator 2 view .LVU1570
 5730              	.LBB199:
 5731              	.LBI199:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5732              		.loc 2 207 34 discriminator 2 view .LVU1571
 5733              	.LBB200:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5734              		.loc 2 209 1 discriminator 2 view .LVU1572
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5735              		.loc 2 211 2 discriminator 2 view .LVU1573
 5736              		.syntax unified
 5737              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5738 0012 EFF31188 			mrs r8, basepri											
 5739 0016 4FF05003 		mov r3, #80												
 5740 001a 83F31188 		msr basepri, r3											
 5741 001e BFF36F8F 		isb														
 5742 0022 BFF34F8F 		dsb														
 5743              	
 5744              	@ 0 "" 2
 5745              	.LVL390:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5746              		.loc 2 223 2 discriminator 2 view .LVU1574
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 5747              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1575
 5748              		.thumb
 5749              		.syntax unified
 5750              	.LBE200:
 5751              	.LBE199:
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5752              		.loc 1 4694 4 is_stmt 1 discriminator 2 view .LVU1576
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5753              		.loc 1 4694 6 is_stmt 0 discriminator 2 view .LVU1577
 5754 0026 0CB1     		cbz	r4, .L441
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5755              		.loc 1 4696 5 is_stmt 1 view .LVU1578
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5756              		.loc 1 4696 42 is_stmt 0 view .LVU1579
 5757 0028 EB6C     		ldr	r3, [r5, #76]
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5758              		.loc 1 4696 35 view .LVU1580
 5759 002a 2360     		str	r3, [r4]
 5760              	.L441:
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5761              		.loc 1 4699 4 is_stmt 1 view .LVU1581
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5762              		.loc 1 4699 26 is_stmt 0 view .LVU1582
 5763 002c 95F85030 		ldrb	r3, [r5, #80]	@ zero_extendqisi2
 5764 0030 DBB2     		uxtb	r3, r3
 5765              	.LVL391:
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5766              		.loc 1 4700 4 is_stmt 1 view .LVU1583
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5767              		.loc 1 4700 25 is_stmt 0 view .LVU1584
 5768 0032 0222     		movs	r2, #2
ARM GAS  /tmp/ccGppmC5.s 			page 219


 5769 0034 85F85020 		strb	r2, [r5, #80]
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5770              		.loc 1 4702 4 is_stmt 1 view .LVU1585
 5771 0038 7A1E     		subs	r2, r7, #1
 5772 003a 032A     		cmp	r2, #3
 5773 003c 0FD8     		bhi	.L442
 5774 003e DFE802F0 		tbb	[pc, r2]
 5775              	.L444:
 5776 0042 0B       		.byte	(.L447-.L444)/2
 5777 0043 15       		.byte	(.L446-.L444)/2
 5778 0044 19       		.byte	(.L445-.L444)/2
 5779 0045 1B       		.byte	(.L443-.L444)/2
 5780              	.LVL392:
 5781              		.p2align 1
 5782              	.L460:
 5783              	.LCFI53:
 5784              		.cfi_def_cfa_offset 0
 5785              		.cfi_restore 4
 5786              		.cfi_restore 5
 5787              		.cfi_restore 6
 5788              		.cfi_restore 7
 5789              		.cfi_restore 8
 5790              		.cfi_restore 14
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5791              		.loc 1 4670 3 view .LVU1586
 5792              	.LBB201:
 5793              	.LBI201:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5794              		.loc 2 191 30 view .LVU1587
 5795              	.LBB202:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5796              		.loc 2 193 1 view .LVU1588
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5797              		.loc 2 195 2 view .LVU1589
 5798              		.syntax unified
 5799              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5800 0046 4FF05003 			mov r3, #80												
 5801 004a 83F31188 		msr basepri, r3											
 5802 004e BFF36F8F 		isb														
 5803 0052 BFF34F8F 		dsb														
 5804              	
 5805              	@ 0 "" 2
 5806              	.LVL393:
 5807              		.thumb
 5808              		.syntax unified
 5809              	.L440:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5810              		.loc 2 195 2 is_stmt 0 view .LVU1590
 5811              	.LBE202:
 5812              	.LBE201:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5813              		.loc 1 4670 3 is_stmt 1 discriminator 1 view .LVU1591
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5814              		.loc 1 4670 3 discriminator 1 view .LVU1592
 5815 0056 FEE7     		b	.L440
 5816              	.LVL394:
 5817              	.L447:
ARM GAS  /tmp/ccGppmC5.s 			page 220


 5818              	.LCFI54:
 5819              		.cfi_def_cfa_offset 24
 5820              		.cfi_offset 4, -24
 5821              		.cfi_offset 5, -20
 5822              		.cfi_offset 6, -16
 5823              		.cfi_offset 7, -12
 5824              		.cfi_offset 8, -8
 5825              		.cfi_offset 14, -4
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5826              		.loc 1 4705 6 view .LVU1593
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5827              		.loc 1 4705 11 is_stmt 0 view .LVU1594
 5828 0058 EA6C     		ldr	r2, [r5, #76]
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5829              		.loc 1 4705 29 view .LVU1595
 5830 005a 3243     		orrs	r2, r2, r6
 5831 005c EA64     		str	r2, [r5, #76]
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5832              		.loc 1 4706 6 is_stmt 1 view .LVU1596
 5833              	.L442:
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5834              		.loc 1 4734 31 view .LVU1597
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5835              		.loc 1 4738 4 view .LVU1598
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5836              		.loc 1 4738 6 is_stmt 0 view .LVU1599
 5837 005e 012B     		cmp	r3, #1
 5838 0060 0ED0     		beq	.L461
 5839 0062 0120     		movs	r0, #1
 5840              	.LVL395:
 5841              	.L448:
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5842              		.loc 1 4773 30 is_stmt 1 view .LVU1600
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5843              		.loc 1 4777 3 view .LVU1601
 5844              	.LBB203:
 5845              	.LBI203:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5846              		.loc 2 227 30 view .LVU1602
 5847              	.LBB204:
 5848              		.loc 2 229 2 view .LVU1603
 5849              		.syntax unified
 5850              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5851 0064 88F31188 			msr basepri, r8	
 5852              	@ 0 "" 2
 5853              		.thumb
 5854              		.syntax unified
 5855              	.LBE204:
 5856              	.LBE203:
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5857              		.loc 1 4779 3 view .LVU1604
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5858              		.loc 1 4780 2 is_stmt 0 view .LVU1605
 5859 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5860              	.LVL396:
 5861              	.L446:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
ARM GAS  /tmp/ccGppmC5.s 			page 221


 5862              		.loc 1 4709 6 is_stmt 1 view .LVU1606
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5863              		.loc 1 4709 13 is_stmt 0 view .LVU1607
 5864 006c EA6C     		ldr	r2, [r5, #76]
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5865              		.loc 1 4709 32 view .LVU1608
 5866 006e 0132     		adds	r2, r2, #1
 5867 0070 EA64     		str	r2, [r5, #76]
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5868              		.loc 1 4710 6 is_stmt 1 view .LVU1609
 5869 0072 F4E7     		b	.L442
 5870              	.L445:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5871              		.loc 1 4713 6 view .LVU1610
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5872              		.loc 1 4713 29 is_stmt 0 view .LVU1611
 5873 0074 EE64     		str	r6, [r5, #76]
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5874              		.loc 1 4714 6 is_stmt 1 view .LVU1612
 5875 0076 F2E7     		b	.L442
 5876              	.L443:
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5877              		.loc 1 4717 6 view .LVU1613
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5878              		.loc 1 4717 8 is_stmt 0 view .LVU1614
 5879 0078 022B     		cmp	r3, #2
 5880 007a 37D0     		beq	.L454
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5881              		.loc 1 4719 7 is_stmt 1 view .LVU1615
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5882              		.loc 1 4719 30 is_stmt 0 view .LVU1616
 5883 007c EE64     		str	r6, [r5, #76]
 5884 007e EEE7     		b	.L442
 5885              	.L461:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5886              		.loc 1 4741 5 is_stmt 1 view .LVU1617
 5887 0080 AB6A     		ldr	r3, [r5, #40]
 5888              	.LVL397:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5889              		.loc 1 4741 5 is_stmt 0 view .LVU1618
 5890 0082 43B1     		cbz	r3, .L449
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5891              		.loc 1 4741 5 is_stmt 1 view .LVU1619
 5892              	.LBB205:
 5893              	.LBI205:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 5894              		.loc 2 191 30 view .LVU1620
 5895              	.LBB206:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 5896              		.loc 2 193 1 view .LVU1621
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5897              		.loc 2 195 2 view .LVU1622
 5898              		.syntax unified
 5899              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 5900 0084 4FF05003 			mov r3, #80												
 5901 0088 83F31188 		msr basepri, r3											
 5902 008c BFF36F8F 		isb														
ARM GAS  /tmp/ccGppmC5.s 			page 222


 5903 0090 BFF34F8F 		dsb														
 5904              	
 5905              	@ 0 "" 2
 5906              	.LVL398:
 5907              		.thumb
 5908              		.syntax unified
 5909              	.L450:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 5910              		.loc 2 195 2 is_stmt 0 view .LVU1623
 5911              	.LBE206:
 5912              	.LBE205:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5913              		.loc 1 4741 5 is_stmt 1 discriminator 2 view .LVU1624
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5914              		.loc 1 4741 5 discriminator 2 view .LVU1625
 5915 0094 FEE7     		b	.L450
 5916              	.L449:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5917              		.loc 1 4741 82 discriminator 2 view .LVU1626
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5918              		.loc 1 4743 5 discriminator 2 view .LVU1627
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5919              		.loc 1 4743 30 is_stmt 0 discriminator 2 view .LVU1628
 5920 0096 174B     		ldr	r3, .L462
 5921 0098 1B68     		ldr	r3, [r3]
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5922              		.loc 1 4743 7 discriminator 2 view .LVU1629
 5923 009a EBB9     		cbnz	r3, .L451
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5924              		.loc 1 4745 6 is_stmt 1 view .LVU1630
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5925              		.loc 1 4745 15 is_stmt 0 view .LVU1631
 5926 009c 2C1D     		adds	r4, r5, #4
 5927              	.LVL399:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5928              		.loc 1 4745 15 view .LVU1632
 5929 009e 2046     		mov	r0, r4
 5930 00a0 FFF7FEFF 		bl	uxListRemove
 5931              	.LVL400:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5932              		.loc 1 4746 6 is_stmt 1 view .LVU1633
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5933              		.loc 1 4746 6 view .LVU1634
 5934 00a4 E86A     		ldr	r0, [r5, #44]
 5935 00a6 0123     		movs	r3, #1
 5936 00a8 8340     		lsls	r3, r3, r0
 5937 00aa 134A     		ldr	r2, .L462+4
 5938 00ac 1168     		ldr	r1, [r2]
 5939 00ae 0B43     		orrs	r3, r3, r1
 5940 00b0 1360     		str	r3, [r2]
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5941              		.loc 1 4746 6 view .LVU1635
 5942 00b2 00EB8000 		add	r0, r0, r0, lsl #2
 5943 00b6 2146     		mov	r1, r4
 5944 00b8 104B     		ldr	r3, .L462+8
 5945 00ba 03EB8000 		add	r0, r3, r0, lsl #2
 5946 00be FFF7FEFF 		bl	vListInsertEnd
ARM GAS  /tmp/ccGppmC5.s 			page 223


 5947              	.LVL401:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5948              		.loc 1 4746 36 view .LVU1636
 5949              	.L452:
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5950              		.loc 1 4755 5 view .LVU1637
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5951              		.loc 1 4755 14 is_stmt 0 view .LVU1638
 5952 00c2 EA6A     		ldr	r2, [r5, #44]
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5953              		.loc 1 4755 41 view .LVU1639
 5954 00c4 0E4B     		ldr	r3, .L462+12
 5955 00c6 1B68     		ldr	r3, [r3]
 5956 00c8 DB6A     		ldr	r3, [r3, #44]
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5957              		.loc 1 4755 7 view .LVU1640
 5958 00ca 9A42     		cmp	r2, r3
 5959 00cc 10D9     		bls	.L456
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5960              		.loc 1 4759 6 is_stmt 1 view .LVU1641
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5961              		.loc 1 4759 8 is_stmt 0 view .LVU1642
 5962 00ce 069B     		ldr	r3, [sp, #24]
 5963 00d0 43B1     		cbz	r3, .L453
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5964              		.loc 1 4761 7 is_stmt 1 view .LVU1643
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5965              		.loc 1 4761 34 is_stmt 0 view .LVU1644
 5966 00d2 0120     		movs	r0, #1
 5967 00d4 1860     		str	r0, [r3]
 5968 00d6 C5E7     		b	.L448
 5969              	.LVL402:
 5970              	.L451:
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5971              		.loc 1 4752 6 is_stmt 1 view .LVU1645
 5972 00d8 05F11801 		add	r1, r5, #24
 5973 00dc 0948     		ldr	r0, .L462+16
 5974 00de FFF7FEFF 		bl	vListInsertEnd
 5975              	.LVL403:
 5976 00e2 EEE7     		b	.L452
 5977              	.LVL404:
 5978              	.L453:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5979              		.loc 1 4768 7 view .LVU1646
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5980              		.loc 1 4768 21 is_stmt 0 view .LVU1647
 5981 00e4 0120     		movs	r0, #1
 5982 00e6 084B     		ldr	r3, .L462+20
 5983 00e8 1860     		str	r0, [r3]
 5984 00ea BBE7     		b	.L448
 5985              	.LVL405:
 5986              	.L454:
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5987              		.loc 1 4724 15 view .LVU1648
 5988 00ec 0020     		movs	r0, #0
 5989 00ee B9E7     		b	.L448
 5990              	.LVL406:
ARM GAS  /tmp/ccGppmC5.s 			page 224


 5991              	.L456:
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5992              		.loc 1 4724 15 view .LVU1649
 5993 00f0 0120     		movs	r0, #1
 5994 00f2 B7E7     		b	.L448
 5995              	.L463:
 5996              		.align	2
 5997              	.L462:
 5998 00f4 00000000 		.word	uxSchedulerSuspended
 5999 00f8 00000000 		.word	uxTopReadyPriority
 6000 00fc 00000000 		.word	pxReadyTasksLists
 6001 0100 00000000 		.word	pxCurrentTCB
 6002 0104 00000000 		.word	xPendingReadyList
 6003 0108 00000000 		.word	xYieldPending
 6004              		.cfi_endproc
 6005              	.LFE51:
 6007              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6008              		.align	1
 6009              		.global	vTaskNotifyGiveFromISR
 6010              		.syntax unified
 6011              		.thumb
 6012              		.thumb_func
 6014              	vTaskNotifyGiveFromISR:
 6015              	.LVL407:
 6016              	.LFB52:
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6017              		.loc 1 4788 2 is_stmt 1 view -0
 6018              		.cfi_startproc
 6019              		@ args = 0, pretend = 0, frame = 0
 6020              		@ frame_needed = 0, uses_anonymous_args = 0
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6021              		.loc 1 4788 2 is_stmt 0 view .LVU1651
 6022 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6023              	.LCFI55:
 6024              		.cfi_def_cfa_offset 24
 6025              		.cfi_offset 3, -24
 6026              		.cfi_offset 4, -20
 6027              		.cfi_offset 5, -16
 6028              		.cfi_offset 6, -12
 6029              		.cfi_offset 7, -8
 6030              		.cfi_offset 14, -4
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6031              		.loc 1 4789 2 is_stmt 1 view .LVU1652
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6032              		.loc 1 4790 2 view .LVU1653
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6033              		.loc 1 4791 2 view .LVU1654
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6034              		.loc 1 4793 3 view .LVU1655
 6035 0002 E0B1     		cbz	r0, .L474
 6036 0004 0D46     		mov	r5, r1
 6037 0006 0446     		mov	r4, r0
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6038              		.loc 1 4793 32 discriminator 2 view .LVU1656
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6039              		.loc 1 4811 3 discriminator 2 view .LVU1657
 6040 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
ARM GAS  /tmp/ccGppmC5.s 			page 225


 6041              	.LVL408:
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6042              		.loc 1 4813 3 discriminator 2 view .LVU1658
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6043              		.loc 1 4815 3 discriminator 2 view .LVU1659
 6044              	.LBB207:
 6045              	.LBI207:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6046              		.loc 2 207 34 discriminator 2 view .LVU1660
 6047              	.LBB208:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 6048              		.loc 2 209 1 discriminator 2 view .LVU1661
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6049              		.loc 2 211 2 discriminator 2 view .LVU1662
 6050              		.syntax unified
 6051              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6052 000c EFF31183 			mrs r3, basepri											
 6053 0010 4FF05002 		mov r2, #80												
 6054 0014 82F31188 		msr basepri, r2											
 6055 0018 BFF36F8F 		isb														
 6056 001c BFF34F8F 		dsb														
 6057              	
 6058              	@ 0 "" 2
 6059              		.thumb
 6060              		.syntax unified
 6061 0020 1E46     		mov	r6, r3
 6062              	.LVL409:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 6063              		.loc 2 223 2 discriminator 2 view .LVU1663
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 6064              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1664
 6065              	.LBE208:
 6066              	.LBE207:
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6067              		.loc 1 4817 4 is_stmt 1 discriminator 2 view .LVU1665
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6068              		.loc 1 4817 26 is_stmt 0 discriminator 2 view .LVU1666
 6069 0022 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6070              	.LVL410:
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6071              		.loc 1 4817 26 discriminator 2 view .LVU1667
 6072 0026 DBB2     		uxtb	r3, r3
 6073              	.LVL411:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6074              		.loc 1 4818 4 is_stmt 1 discriminator 2 view .LVU1668
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6075              		.loc 1 4818 25 is_stmt 0 discriminator 2 view .LVU1669
 6076 0028 0222     		movs	r2, #2
 6077 002a 84F85020 		strb	r2, [r4, #80]
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6078              		.loc 1 4822 4 is_stmt 1 discriminator 2 view .LVU1670
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6079              		.loc 1 4822 11 is_stmt 0 discriminator 2 view .LVU1671
 6080 002e E26C     		ldr	r2, [r4, #76]
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6081              		.loc 1 4822 30 discriminator 2 view .LVU1672
 6082 0030 0132     		adds	r2, r2, #1
ARM GAS  /tmp/ccGppmC5.s 			page 226


 6083 0032 E264     		str	r2, [r4, #76]
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6084              		.loc 1 4824 36 is_stmt 1 discriminator 2 view .LVU1673
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6085              		.loc 1 4828 4 discriminator 2 view .LVU1674
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6086              		.loc 1 4828 6 is_stmt 0 discriminator 2 view .LVU1675
 6087 0034 012B     		cmp	r3, #1
 6088 0036 0BD0     		beq	.L475
 6089              	.LVL412:
 6090              	.L467:
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6091              		.loc 1 4863 30 is_stmt 1 view .LVU1676
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6092              		.loc 1 4867 3 view .LVU1677
 6093              	.LBB209:
 6094              	.LBI209:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6095              		.loc 2 227 30 view .LVU1678
 6096              	.LBB210:
 6097              		.loc 2 229 2 view .LVU1679
 6098              		.syntax unified
 6099              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6100 0038 86F31188 			msr basepri, r6	
 6101              	@ 0 "" 2
 6102              		.thumb
 6103              		.syntax unified
 6104              	.LBE210:
 6105              	.LBE209:
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6106              		.loc 1 4868 2 is_stmt 0 view .LVU1680
 6107 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6108              	.LVL413:
 6109              	.L474:
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6110              		.loc 1 4793 3 is_stmt 1 view .LVU1681
 6111              	.LBB211:
 6112              	.LBI211:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6113              		.loc 2 191 30 view .LVU1682
 6114              	.LBB212:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 6115              		.loc 2 193 1 view .LVU1683
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6116              		.loc 2 195 2 view .LVU1684
 6117              		.syntax unified
 6118              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6119 003e 4FF05003 			mov r3, #80												
 6120 0042 83F31188 		msr basepri, r3											
 6121 0046 BFF36F8F 		isb														
 6122 004a BFF34F8F 		dsb														
 6123              	
 6124              	@ 0 "" 2
 6125              	.LVL414:
 6126              		.thumb
 6127              		.syntax unified
 6128              	.L466:
ARM GAS  /tmp/ccGppmC5.s 			page 227


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6129              		.loc 2 195 2 is_stmt 0 view .LVU1685
 6130              	.LBE212:
 6131              	.LBE211:
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6132              		.loc 1 4793 3 is_stmt 1 discriminator 1 view .LVU1686
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6133              		.loc 1 4793 3 discriminator 1 view .LVU1687
 6134 004e FEE7     		b	.L466
 6135              	.LVL415:
 6136              	.L475:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6137              		.loc 1 4831 5 view .LVU1688
 6138 0050 A36A     		ldr	r3, [r4, #40]
 6139              	.LVL416:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6140              		.loc 1 4831 5 is_stmt 0 view .LVU1689
 6141 0052 43B1     		cbz	r3, .L468
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6142              		.loc 1 4831 5 is_stmt 1 view .LVU1690
 6143              	.LBB213:
 6144              	.LBI213:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 6145              		.loc 2 191 30 view .LVU1691
 6146              	.LBB214:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 6147              		.loc 2 193 1 view .LVU1692
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6148              		.loc 2 195 2 view .LVU1693
 6149              		.syntax unified
 6150              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 6151 0054 4FF05003 			mov r3, #80												
 6152 0058 83F31188 		msr basepri, r3											
 6153 005c BFF36F8F 		isb														
 6154 0060 BFF34F8F 		dsb														
 6155              	
 6156              	@ 0 "" 2
 6157              	.LVL417:
 6158              		.thumb
 6159              		.syntax unified
 6160              	.L469:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 6161              		.loc 2 195 2 is_stmt 0 view .LVU1694
 6162              	.LBE214:
 6163              	.LBE213:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6164              		.loc 1 4831 5 is_stmt 1 discriminator 2 view .LVU1695
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6165              		.loc 1 4831 5 discriminator 2 view .LVU1696
 6166 0064 FEE7     		b	.L469
 6167              	.L468:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6168              		.loc 1 4831 82 discriminator 2 view .LVU1697
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6169              		.loc 1 4833 5 discriminator 2 view .LVU1698
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6170              		.loc 1 4833 30 is_stmt 0 discriminator 2 view .LVU1699
ARM GAS  /tmp/ccGppmC5.s 			page 228


 6171 0066 154B     		ldr	r3, .L476
 6172 0068 1B68     		ldr	r3, [r3]
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6173              		.loc 1 4833 7 discriminator 2 view .LVU1700
 6174 006a E3B9     		cbnz	r3, .L470
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6175              		.loc 1 4835 6 is_stmt 1 view .LVU1701
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6176              		.loc 1 4835 15 is_stmt 0 view .LVU1702
 6177 006c 271D     		adds	r7, r4, #4
 6178 006e 3846     		mov	r0, r7
 6179 0070 FFF7FEFF 		bl	uxListRemove
 6180              	.LVL418:
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6181              		.loc 1 4836 6 is_stmt 1 view .LVU1703
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6182              		.loc 1 4836 6 view .LVU1704
 6183 0074 E06A     		ldr	r0, [r4, #44]
 6184 0076 0123     		movs	r3, #1
 6185 0078 8340     		lsls	r3, r3, r0
 6186 007a 114A     		ldr	r2, .L476+4
 6187 007c 1168     		ldr	r1, [r2]
 6188 007e 0B43     		orrs	r3, r3, r1
 6189 0080 1360     		str	r3, [r2]
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6190              		.loc 1 4836 6 view .LVU1705
 6191 0082 00EB8000 		add	r0, r0, r0, lsl #2
 6192 0086 3946     		mov	r1, r7
 6193 0088 0E4B     		ldr	r3, .L476+8
 6194 008a 03EB8000 		add	r0, r3, r0, lsl #2
 6195 008e FFF7FEFF 		bl	vListInsertEnd
 6196              	.LVL419:
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6197              		.loc 1 4836 36 view .LVU1706
 6198              	.L471:
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6199              		.loc 1 4845 5 view .LVU1707
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6200              		.loc 1 4845 14 is_stmt 0 view .LVU1708
 6201 0092 E26A     		ldr	r2, [r4, #44]
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6202              		.loc 1 4845 41 view .LVU1709
 6203 0094 0C4B     		ldr	r3, .L476+12
 6204 0096 1B68     		ldr	r3, [r3]
 6205 0098 DB6A     		ldr	r3, [r3, #44]
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6206              		.loc 1 4845 7 view .LVU1710
 6207 009a 9A42     		cmp	r2, r3
 6208 009c CCD9     		bls	.L467
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6209              		.loc 1 4849 6 is_stmt 1 view .LVU1711
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6210              		.loc 1 4849 8 is_stmt 0 view .LVU1712
 6211 009e 45B1     		cbz	r5, .L472
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6212              		.loc 1 4851 7 is_stmt 1 view .LVU1713
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccGppmC5.s 			page 229


 6213              		.loc 1 4851 34 is_stmt 0 view .LVU1714
 6214 00a0 0123     		movs	r3, #1
 6215 00a2 2B60     		str	r3, [r5]
 6216 00a4 C8E7     		b	.L467
 6217              	.L470:
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6218              		.loc 1 4842 6 is_stmt 1 view .LVU1715
 6219 00a6 04F11801 		add	r1, r4, #24
 6220 00aa 0848     		ldr	r0, .L476+16
 6221 00ac FFF7FEFF 		bl	vListInsertEnd
 6222              	.LVL420:
 6223 00b0 EFE7     		b	.L471
 6224              	.L472:
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6225              		.loc 1 4858 7 view .LVU1716
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6226              		.loc 1 4858 21 is_stmt 0 view .LVU1717
 6227 00b2 074B     		ldr	r3, .L476+20
 6228 00b4 0122     		movs	r2, #1
 6229 00b6 1A60     		str	r2, [r3]
 6230 00b8 BEE7     		b	.L467
 6231              	.L477:
 6232 00ba 00BF     		.align	2
 6233              	.L476:
 6234 00bc 00000000 		.word	uxSchedulerSuspended
 6235 00c0 00000000 		.word	uxTopReadyPriority
 6236 00c4 00000000 		.word	pxReadyTasksLists
 6237 00c8 00000000 		.word	pxCurrentTCB
 6238 00cc 00000000 		.word	xPendingReadyList
 6239 00d0 00000000 		.word	xYieldPending
 6240              		.cfi_endproc
 6241              	.LFE52:
 6243              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6244              		.align	1
 6245              		.global	xTaskNotifyStateClear
 6246              		.syntax unified
 6247              		.thumb
 6248              		.thumb_func
 6250              	xTaskNotifyStateClear:
 6251              	.LVL421:
 6252              	.LFB53:
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6253              		.loc 1 4877 2 is_stmt 1 view -0
 6254              		.cfi_startproc
 6255              		@ args = 0, pretend = 0, frame = 0
 6256              		@ frame_needed = 0, uses_anonymous_args = 0
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6257              		.loc 1 4877 2 is_stmt 0 view .LVU1719
 6258 0000 10B5     		push	{r4, lr}
 6259              	.LCFI56:
 6260              		.cfi_def_cfa_offset 8
 6261              		.cfi_offset 4, -8
 6262              		.cfi_offset 14, -4
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6263              		.loc 1 4878 2 is_stmt 1 view .LVU1720
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6264              		.loc 1 4879 2 view .LVU1721
ARM GAS  /tmp/ccGppmC5.s 			page 230


4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6265              		.loc 1 4883 3 view .LVU1722
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6266              		.loc 1 4883 11 is_stmt 0 view .LVU1723
 6267 0002 0446     		mov	r4, r0
 6268 0004 58B1     		cbz	r0, .L483
 6269              	.LVL422:
 6270              	.L479:
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6271              		.loc 1 4885 3 is_stmt 1 discriminator 4 view .LVU1724
 6272 0006 FFF7FEFF 		bl	vPortEnterCritical
 6273              	.LVL423:
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6274              		.loc 1 4887 4 discriminator 4 view .LVU1725
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6275              		.loc 1 4887 13 is_stmt 0 discriminator 4 view .LVU1726
 6276 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6277 000e DBB2     		uxtb	r3, r3
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6278              		.loc 1 4887 6 discriminator 4 view .LVU1727
 6279 0010 022B     		cmp	r3, #2
 6280 0012 07D0     		beq	.L484
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6281              		.loc 1 4894 13 view .LVU1728
 6282 0014 0024     		movs	r4, #0
 6283              	.LVL424:
 6284              	.L480:
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6285              		.loc 1 4897 3 is_stmt 1 view .LVU1729
 6286 0016 FFF7FEFF 		bl	vPortExitCritical
 6287              	.LVL425:
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6288              		.loc 1 4899 3 view .LVU1730
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6289              		.loc 1 4900 2 is_stmt 0 view .LVU1731
 6290 001a 2046     		mov	r0, r4
 6291 001c 10BD     		pop	{r4, pc}
 6292              	.LVL426:
 6293              	.L483:
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6294              		.loc 1 4883 11 discriminator 1 view .LVU1732
 6295 001e 044B     		ldr	r3, .L485
 6296 0020 1C68     		ldr	r4, [r3]
 6297              	.LVL427:
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6298              		.loc 1 4883 11 discriminator 1 view .LVU1733
 6299 0022 F0E7     		b	.L479
 6300              	.LVL428:
 6301              	.L484:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6302              		.loc 1 4889 5 is_stmt 1 view .LVU1734
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6303              		.loc 1 4889 26 is_stmt 0 view .LVU1735
 6304 0024 0023     		movs	r3, #0
 6305 0026 84F85030 		strb	r3, [r4, #80]
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6306              		.loc 1 4890 5 is_stmt 1 view .LVU1736
ARM GAS  /tmp/ccGppmC5.s 			page 231


 6307              	.LVL429:
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6308              		.loc 1 4890 13 is_stmt 0 view .LVU1737
 6309 002a 0124     		movs	r4, #1
 6310              	.LVL430:
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6311              		.loc 1 4890 13 view .LVU1738
 6312 002c F3E7     		b	.L480
 6313              	.L486:
 6314 002e 00BF     		.align	2
 6315              	.L485:
 6316 0030 00000000 		.word	pxCurrentTCB
 6317              		.cfi_endproc
 6318              	.LFE53:
 6320              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6321              		.align	2
 6324              	uxSchedulerSuspended:
 6325 0000 00000000 		.space	4
 6326              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6327              		.align	2
 6330              	xIdleTaskHandle:
 6331 0000 00000000 		.space	4
 6332              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6333              		.align	2
 6336              	xNextTaskUnblockTime:
 6337 0000 00000000 		.space	4
 6338              		.section	.bss.uxTaskNumber,"aw",%nobits
 6339              		.align	2
 6342              	uxTaskNumber:
 6343 0000 00000000 		.space	4
 6344              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6345              		.align	2
 6348              	xNumOfOverflows:
 6349 0000 00000000 		.space	4
 6350              		.section	.bss.xYieldPending,"aw",%nobits
 6351              		.align	2
 6354              	xYieldPending:
 6355 0000 00000000 		.space	4
 6356              		.section	.bss.uxPendedTicks,"aw",%nobits
 6357              		.align	2
 6360              	uxPendedTicks:
 6361 0000 00000000 		.space	4
 6362              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6363              		.align	2
 6366              	xSchedulerRunning:
 6367 0000 00000000 		.space	4
 6368              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6369              		.align	2
 6372              	uxTopReadyPriority:
 6373 0000 00000000 		.space	4
 6374              		.section	.bss.xTickCount,"aw",%nobits
 6375              		.align	2
 6378              	xTickCount:
 6379 0000 00000000 		.space	4
 6380              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6381              		.align	2
 6384              	uxCurrentNumberOfTasks:
ARM GAS  /tmp/ccGppmC5.s 			page 232


 6385 0000 00000000 		.space	4
 6386              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6387              		.align	2
 6390              	xSuspendedTaskList:
 6391 0000 00000000 		.space	20
 6391      00000000 
 6391      00000000 
 6391      00000000 
 6391      00000000 
 6392              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6393              		.align	2
 6396              	uxDeletedTasksWaitingCleanUp:
 6397 0000 00000000 		.space	4
 6398              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6399              		.align	2
 6402              	xTasksWaitingTermination:
 6403 0000 00000000 		.space	20
 6403      00000000 
 6403      00000000 
 6403      00000000 
 6403      00000000 
 6404              		.section	.bss.xPendingReadyList,"aw",%nobits
 6405              		.align	2
 6408              	xPendingReadyList:
 6409 0000 00000000 		.space	20
 6409      00000000 
 6409      00000000 
 6409      00000000 
 6409      00000000 
 6410              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6411              		.align	2
 6414              	pxOverflowDelayedTaskList:
 6415 0000 00000000 		.space	4
 6416              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6417              		.align	2
 6420              	pxDelayedTaskList:
 6421 0000 00000000 		.space	4
 6422              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6423              		.align	2
 6426              	xDelayedTaskList2:
 6427 0000 00000000 		.space	20
 6427      00000000 
 6427      00000000 
 6427      00000000 
 6427      00000000 
 6428              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6429              		.align	2
 6432              	xDelayedTaskList1:
 6433 0000 00000000 		.space	20
 6433      00000000 
 6433      00000000 
 6433      00000000 
 6433      00000000 
 6434              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6435              		.align	2
 6438              	pxReadyTasksLists:
 6439 0000 00000000 		.space	140
ARM GAS  /tmp/ccGppmC5.s 			page 233


 6439      00000000 
 6439      00000000 
 6439      00000000 
 6439      00000000 
 6440              		.global	pxCurrentTCB
 6441              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6442              		.align	2
 6445              	pxCurrentTCB:
 6446 0000 00000000 		.space	4
 6447              		.text
 6448              	.Letext0:
 6449              		.file 3 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 6450              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 6451              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 6452              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6453              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 6454              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6455              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6456              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccGppmC5.s 			page 234


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccGppmC5.s:19     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/ccGppmC5.s:24     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/ccGppmC5.s:112    .text.prvTaskIsTaskSuspended:0000000000000038 $d
     /tmp/ccGppmC5.s:6390   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/ccGppmC5.s:6408   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccGppmC5.s:118    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccGppmC5.s:123    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccGppmC5.s:166    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/ccGppmC5.s:6420   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccGppmC5.s:6336   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccGppmC5.s:172    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/ccGppmC5.s:177    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/ccGppmC5.s:319    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/ccGppmC5.s:324    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/ccGppmC5.s:397    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/ccGppmC5.s:6438   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccGppmC5.s:6432   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccGppmC5.s:6426   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccGppmC5.s:6402   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/ccGppmC5.s:6414   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccGppmC5.s:409    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/ccGppmC5.s:414    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/ccGppmC5.s:550    .text.prvAddNewTaskToReadyList:0000000000000090 $d
     /tmp/ccGppmC5.s:6384   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccGppmC5.s:6445   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccGppmC5.s:6366   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccGppmC5.s:6342   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccGppmC5.s:6372   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccGppmC5.s:560    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/ccGppmC5.s:565    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/ccGppmC5.s:642    .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/ccGppmC5.s:647    .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/ccGppmC5.s:720    .text.prvCheckTasksWaitingTermination:0000000000000040 $d
     /tmp/ccGppmC5.s:6396   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccGppmC5.s:727    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccGppmC5.s:732    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccGppmC5.s:852    .text.prvAddCurrentTaskToDelayedList:000000000000007c $d
     /tmp/ccGppmC5.s:6378   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccGppmC5.s:863    .text.prvIdleTask:0000000000000000 $t
     /tmp/ccGppmC5.s:868    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccGppmC5.s:928    .text.prvIdleTask:000000000000002c $d
     /tmp/ccGppmC5.s:933    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/ccGppmC5.s:939    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/ccGppmC5.s:1098   .text.xTaskCreate:0000000000000000 $t
     /tmp/ccGppmC5.s:1104   .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccGppmC5.s:1221   .text.vTaskDelete:0000000000000000 $t
     /tmp/ccGppmC5.s:1227   .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/ccGppmC5.s:1411   .text.vTaskDelete:00000000000000bc $d
     /tmp/ccGppmC5.s:6324   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccGppmC5.s:1424   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/ccGppmC5.s:1430   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/ccGppmC5.s:1476   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/ccGppmC5.s:1481   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/ccGppmC5.s:1487   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/ccGppmC5.s:1566   .text.uxTaskPriorityGetFromISR:000000000000002c $d
ARM GAS  /tmp/ccGppmC5.s 			page 235


     /tmp/ccGppmC5.s:1571   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/ccGppmC5.s:1577   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/ccGppmC5.s:1819   .text.vTaskPrioritySet:00000000000000d8 $d
     /tmp/ccGppmC5.s:1826   .text.vTaskResume:0000000000000000 $t
     /tmp/ccGppmC5.s:1832   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/ccGppmC5.s:1962   .text.vTaskResume:000000000000007c $d
     /tmp/ccGppmC5.s:1969   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/ccGppmC5.s:1975   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/ccGppmC5.s:2143   .text.xTaskResumeFromISR:0000000000000090 $d
     /tmp/ccGppmC5.s:2152   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/ccGppmC5.s:2156   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccGppmC5.s:2162   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccGppmC5.s:2263   .text.vTaskStartScheduler:000000000000005c $d
     /tmp/ccGppmC5.s:6330   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/ccGppmC5.s:2273   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccGppmC5.s:2279   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccGppmC5.s:2322   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/ccGppmC5.s:2327   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccGppmC5.s:2333   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccGppmC5.s:2350   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/ccGppmC5.s:2355   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccGppmC5.s:2361   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccGppmC5.s:2382   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/ccGppmC5.s:2387   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccGppmC5.s:2393   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccGppmC5.s:2422   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/ccGppmC5.s:2427   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccGppmC5.s:2433   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccGppmC5.s:2449   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/ccGppmC5.s:2454   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccGppmC5.s:2460   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccGppmC5.s:2517   .text.pcTaskGetName:0000000000000024 $d
     /tmp/ccGppmC5.s:2522   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccGppmC5.s:2528   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccGppmC5.s:2790   .text.xTaskIncrementTick:00000000000000ec $d
     /tmp/ccGppmC5.s:6348   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccGppmC5.s:6360   .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/ccGppmC5.s:6354   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/ccGppmC5.s:2805   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccGppmC5.s:2811   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccGppmC5.s:3045   .text.xTaskResumeAll:00000000000000d8 $d
     /tmp/ccGppmC5.s:3057   .text.vTaskDelay:0000000000000000 $t
     /tmp/ccGppmC5.s:3063   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccGppmC5.s:3155   .text.vTaskDelay:0000000000000048 $d
     /tmp/ccGppmC5.s:3160   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccGppmC5.s:3166   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccGppmC5.s:3307   .text.vTaskSwitchContext:0000000000000084 $d
     /tmp/ccGppmC5.s:3318   .text.vTaskSuspend:0000000000000000 $t
     /tmp/ccGppmC5.s:3324   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/ccGppmC5.s:3528   .text.vTaskSuspend:00000000000000d0 $d
     /tmp/ccGppmC5.s:3539   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccGppmC5.s:3545   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccGppmC5.s:3612   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/ccGppmC5.s:3617   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccGppmC5.s:3623   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccGppmC5.s:3738   .text.vTaskPlaceOnUnorderedEventList:0000000000000050 $d
     /tmp/ccGppmC5.s:3744   .text.xTaskRemoveFromEventList:0000000000000000 $t
ARM GAS  /tmp/ccGppmC5.s 			page 236


     /tmp/ccGppmC5.s:3750   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccGppmC5.s:3880   .text.xTaskRemoveFromEventList:0000000000000074 $d
     /tmp/ccGppmC5.s:3890   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccGppmC5.s:3896   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccGppmC5.s:4030   .text.vTaskRemoveFromUnorderedEventList:0000000000000074 $d
     /tmp/ccGppmC5.s:4039   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccGppmC5.s:4045   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccGppmC5.s:4114   .text.vTaskSetTimeOutState:0000000000000030 $d
     /tmp/ccGppmC5.s:4120   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/ccGppmC5.s:4126   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/ccGppmC5.s:4149   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/ccGppmC5.s:4155   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccGppmC5.s:4161   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccGppmC5.s:4346   .text.xTaskCheckForTimeOut:000000000000007c $d
     /tmp/ccGppmC5.s:4353   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccGppmC5.s:4359   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccGppmC5.s:4376   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/ccGppmC5.s:4381   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccGppmC5.s:4387   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccGppmC5.s:4406   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/ccGppmC5.s:4411   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/ccGppmC5.s:4417   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/ccGppmC5.s:4455   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/ccGppmC5.s:4461   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/ccGppmC5.s:4467   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/ccGppmC5.s:4643   .text.xTaskPriorityInherit:00000000000000b0 $d
     /tmp/ccGppmC5.s:4650   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccGppmC5.s:4656   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccGppmC5.s:4851   .text.xTaskPriorityDisinherit:00000000000000a4 $d
     /tmp/ccGppmC5.s:4858   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/ccGppmC5.s:4864   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccGppmC5.s:5066   .text.vTaskPriorityDisinheritAfterTimeout:00000000000000b4 $d
     /tmp/ccGppmC5.s:5073   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccGppmC5.s:5079   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccGppmC5.s:5106   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/ccGppmC5.s:5111   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccGppmC5.s:5117   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccGppmC5.s:5148   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/ccGppmC5.s:5153   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/ccGppmC5.s:5159   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccGppmC5.s:5281   .text.ulTaskNotifyTake:0000000000000074 $d
     /tmp/ccGppmC5.s:5286   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccGppmC5.s:5292   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccGppmC5.s:5434   .text.xTaskNotifyWait:0000000000000094 $d
     /tmp/ccGppmC5.s:5439   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccGppmC5.s:5445   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccGppmC5.s:5502   .text.xTaskGenericNotify:000000000000002c $d
     /tmp/ccGppmC5.s:5507   .text.xTaskGenericNotify:0000000000000030 $t
     /tmp/ccGppmC5.s:5684   .text.xTaskGenericNotify:00000000000000d4 $d
     /tmp/ccGppmC5.s:5691   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccGppmC5.s:5697   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccGppmC5.s:5776   .text.xTaskGenericNotifyFromISR:0000000000000042 $d
     /tmp/ccGppmC5.s:5781   .text.xTaskGenericNotifyFromISR:0000000000000046 $t
     /tmp/ccGppmC5.s:5998   .text.xTaskGenericNotifyFromISR:00000000000000f4 $d
     /tmp/ccGppmC5.s:6008   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccGppmC5.s:6014   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccGppmC5.s:6234   .text.vTaskNotifyGiveFromISR:00000000000000bc $d
ARM GAS  /tmp/ccGppmC5.s 			page 237


     /tmp/ccGppmC5.s:6244   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/ccGppmC5.s:6250   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/ccGppmC5.s:6316   .text.xTaskNotifyStateClear:0000000000000030 $d
     /tmp/ccGppmC5.s:6321   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccGppmC5.s:6327   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/ccGppmC5.s:6333   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccGppmC5.s:6339   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccGppmC5.s:6345   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccGppmC5.s:6351   .bss.xYieldPending:0000000000000000 $d
     /tmp/ccGppmC5.s:6357   .bss.uxPendedTicks:0000000000000000 $d
     /tmp/ccGppmC5.s:6363   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccGppmC5.s:6369   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/ccGppmC5.s:6375   .bss.xTickCount:0000000000000000 $d
     /tmp/ccGppmC5.s:6381   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccGppmC5.s:6387   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/ccGppmC5.s:6393   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/ccGppmC5.s:6399   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/ccGppmC5.s:6405   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccGppmC5.s:6411   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccGppmC5.s:6417   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccGppmC5.s:6423   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccGppmC5.s:6429   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccGppmC5.s:6435   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccGppmC5.s:6442   .bss.pxCurrentTCB:0000000000000000 $d

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortFree
uxListRemove
vListInsert
vApplicationIdleHook
pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
